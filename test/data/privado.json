{
  "privadoCoreVersion": "1.1.8",
  "privadoCLIVersion": "v2.2.0",
  "privadoMainVersion": "1.3.0\n",
  "createdAt": 1673303653890,
  "repoName": "crAPI",
  "gitMetadata": {
    "branchName": "develop",
    "commitId": "bf2d18277f95532818c14beedb2ca5f929d81c0d",
    "remoteUrl": "git@github.com:OWASP/crAPI.git"
  },
  "localScanPath": "/Volumes/Work/sandbox/crAPI",
  "sources": [
    {
      "sourceType": "Data Element",
      "id": "Data.Sensitive.LocationData.PreciseLocation",
      "name": "Precise Location",
      "category": "Location Data",
      "sensitivity": "high",
      "isSensitive": false,
      "tags": {
        "law": "GDPR"
      }
    },
    {
      "sourceType": "Data Element",
      "id": "Data.Sensitive.PersonalIdentification.FirstName",
      "name": "First Name",
      "category": "Personal Identification",
      "sensitivity": "low",
      "isSensitive": false,
      "tags": {
        "law": "GDPR"
      }
    },
    {
      "sourceType": "Data Element",
      "id": "Data.Sensitive.AccountData.AccountPassword",
      "name": "Account Password",
      "category": "Account Data",
      "sensitivity": "high",
      "isSensitive": false,
      "tags": {
        "law": "GDPR"
      }
    },
    {
      "sourceType": "Data Element",
      "id": "Data.Sensitive.ContactData.Address",
      "name": "Address",
      "category": "Contact Data",
      "sensitivity": "medium",
      "isSensitive": false,
      "tags": {
        "law": "GDPR"
      }
    },
    {
      "sourceType": "Data Element",
      "id": "Data.Sensitive.ContactData.EmailAddress",
      "name": "Email Address",
      "category": "Contact Data",
      "sensitivity": "medium",
      "isSensitive": false,
      "tags": {
        "law": "GDPR"
      }
    },
    {
      "sourceType": "Data Element",
      "id": "Data.Sensitive.PersonalIdentification.Age",
      "name": "Age",
      "category": "Personal Identification",
      "sensitivity": "low",
      "isSensitive": false,
      "tags": {
        "law": "GDPR"
      }
    },
    {
      "sourceType": "Data Element",
      "id": "Data.Sensitive.AccountData.AccountName",
      "name": "Account Name",
      "category": "Account Data",
      "sensitivity": "medium",
      "isSensitive": false,
      "tags": {
        "law": "GDPR"
      }
    }
  ],
  "processing": [
    {
      "sourceId": "Data.Sensitive.AccountData.AccountPassword",
      "occurrences": [
        {
          "sample": "user",
          "lineNumber": 143,
          "columnNumber": 10,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
          "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
        },
        {
          "sample": "$obj1",
          "lineNumber": -1,
          "columnNumber": -1,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserPrinciple.java",
          "excerpt": ""
        },
        {
          "sample": "forgetPassword",
          "lineNumber": 141,
          "columnNumber": 39,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
          "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.model.ForgetPassword */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
        },
        {
          "sample": "signUpRequest",
          "lineNumber": 76,
          "columnNumber": 79,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
          "excerpt": "   * @return success and failure message after user registration.\n   */\n  @PostMapping(\"/signup\")\n  public ResponseEntity<CRAPIResponse> registerUser(@Valid @RequestBody SignUpForm signUpRequest) {\n    // Creating user's account\n    CRAPIResponse registerUserResponse = userRegistrationService.registerUser(signUpRequest); /* <=== com.crapi.model.SignUpForm */ \n    if (registerUserResponse != null && registerUserResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(registerUserResponse);\n    } else if (registerUserResponse != null && registerUserResponse.getStatus() == 403) {\n      return ResponseEntity.status(HttpStatus.FORBIDDEN).body(registerUserResponse);\n    } else {"
        },
        {
          "sample": "UserPrinciple",
          "lineNumber": 43,
          "columnNumber": 14,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
          "excerpt": "  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email);\n      System.out.println(user);\n      return UserPrinciple.build(user); /* <=== com.crapi.entity.UserPrinciple */ \n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }\n  }\n}"
        }
      ]
    },
    {
      "sourceId": "Data.Sensitive.AccountData.AccountName",
      "occurrences": [
        {
          "sample": "username",
          "lineNumber": 318,
          "columnNumber": 14,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
          "excerpt": "  @Override\n  public User getUserFromTokenWithoutValidation(HttpServletRequest request) {\n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt); /* <=== java.lang.String */ \n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {"
        }
      ]
    },
    {
      "sourceId": "Data.Sensitive.PersonalIdentification.FirstName",
      "occurrences": [
        {
          "sample": "vehicleDetails",
          "lineNumber": 88,
          "columnNumber": 9,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/VehicleController.java",
          "excerpt": "   * @return VehicleDetails on given car_id.\n   */\n  @GetMapping(\"/vehicle/{carId}/location\")\n  public ResponseEntity<?> getLocationBOLA(@PathVariable(\"carId\") UUID carId) {\n    VehicleLocationResponse vehicleDetails = vehicleService.getVehicleLocation(carId);\n    if (vehicleDetails != null) return ResponseEntity.ok().body(vehicleDetails); /* <=== com.crapi.model.VehicleLocationResponse */ \n    else\n      return ResponseEntity.status(HttpStatus.NOT_FOUND)\n          .body(new CRAPIResponse(UserMessage.DID_NOT_GET_VEHICLE_FOR_USER));\n  }\n}"
        },
        {
          "sample": "this.fullName",
          "lineNumber": 32,
          "columnNumber": 5,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/VehicleLocationResponse.java",
          "excerpt": "\n  public VehicleLocationResponse() {}\n\n  public VehicleLocationResponse(UUID id, String name, VehicleLocation vehicleLocation) {\n    this.carId = id;\n    this.fullName = name; /* <===  */ \n    this.vehicleLocation = vehicleLocation;\n  }\n}"
        },
        {
          "sample": "vehicleLocationForm",
          "lineNumber": 149,
          "columnNumber": 29,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
          "excerpt": "   */\n  @Transactional\n  @Override\n  public VehicleLocationResponse getVehicleLocation(UUID carId) {\n    VehicleDetails vehicleDetails = null;\n    VehicleLocationResponse vehicleLocationForm = null; /* <=== com.crapi.model.VehicleLocationResponse */ \n    UserDetails userDetails = null;\n    Random random = new Random();\n    try {\n      vehicleDetails = vehicleDetailsRepository.findByUuid(carId);\n      if (vehicleDetails != null) {"
        }
      ]
    },
    {
      "sourceId": "Data.Sensitive.PersonalIdentification.Age",
      "occurrences": [
        {
          "sample": "UserMessage",
          "lineNumber": 157,
          "columnNumber": 37,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
          "excerpt": "              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE + user.getEmail(), 404); /* <=== com.crapi.constant.UserMessage */ \n  }\n\n  /**\n   * @param videoId\n   * @param request"
        }
      ]
    },
    {
      "sourceId": "Data.Sensitive.ContactData.Address",
      "occurrences": [
        {
          "sample": "checkVehicle",
          "lineNumber": 185,
          "columnNumber": 33,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
          "excerpt": "  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) { /* <=== com.crapi.entity.VehicleDetails */ \n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");"
        },
        {
          "sample": "pincode",
          "lineNumber": 54,
          "columnNumber": 20,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/VehicleDetails.java",
          "excerpt": "  @JoinColumn(name = \"owner_id\")\n  private User owner;\n\n  public VehicleDetails(String pincode, String vin) {\n\n    this.pincode = pincode; /* <=== java.lang.String */ \n    this.vin = vin;\n    this.status = EStatus.ACTIVE;\n    this.year = LocalDate.now().getYear();\n  }\n"
        },
        {
          "sample": "this.pincode",
          "lineNumber": 27,
          "columnNumber": 12,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/GenerateVIN.java",
          "excerpt": "  String pincode = \"\";\n\n  /** @return random generate pin code for add vehicle */\n  public String generatePincode() {\n    pincode += getNum(3);\n    return pincode; /* <===  */ \n  }\n\n  /** @return rendom generate VIN for vehicle */\n  public String generateVIN() {\n    vin += getNum(0) + getChar(3) + getNum(1) + getChar(3) + getNum(5);"
        },
        {
          "sample": "VehicleDetails",
          "lineNumber": 120,
          "columnNumber": 11,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
          "excerpt": "                    : \"\")),\n            \"Welcome to crAPI\");\n        return new CRAPIResponse(UserMessage.SIGN_UP_SUCCESS_MESSAGE, 200);\n      }\n      throw new EntityNotFoundException(\n          VehicleDetails.class, UserMessage.ERROR, signUpRequest.getName()); /* <=== com.crapi.entity.VehicleDetails */ \n    }\n    logger.info(\"User registration failed {}\", signUpRequest.getEmail());\n    return new CRAPIResponse(UserMessage.SIGN_UP_FAILED + signUpRequest.getEmail(), 400);\n  }\n}"
        }
      ]
    },
    {
      "sourceId": "Data.Sensitive.ContactData.EmailAddress",
      "occurrences": [
        {
          "sample": "loginForm",
          "lineNumber": 100,
          "columnNumber": 41,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
          "excerpt": "          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());\n        } else {\n          logger.info(\"Log4j is disabled\");\n        }\n      }\n      user = userRepository.findByEmail(loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n      if (user == null) {\n        jwtResponse.setMessage(UserMessage.EMAIL_NOT_REGISTERED);\n      } else {\n        authentication =\n            authenticationManager.authenticate("
        },
        {
          "sample": "user",
          "lineNumber": 210,
          "columnNumber": 55,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
          "excerpt": "    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request);\n    userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;\n        break;"
        },
        {
          "sample": "this.newEmail",
          "lineNumber": 46,
          "columnNumber": 5,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ChangeEmailRequest.java",
          "excerpt": "  @OneToOne private User user;\n\n  public ChangeEmailRequest() {}\n\n  public ChangeEmailRequest(String new_email, String oldEmail, String token, User user) {\n    this.newEmail = new_email; /* <===  */ \n    this.emailToken = token;\n    this.oldEmail = oldEmail;\n    this.user = user;\n    this.status = EStatus.ACTIVE.toString();\n  }"
        },
        {
          "sample": "$obj1",
          "lineNumber": -1,
          "columnNumber": -1,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserPrinciple.java",
          "excerpt": ""
        },
        {
          "sample": "forgetPassword",
          "lineNumber": 141,
          "columnNumber": 39,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
          "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.model.ForgetPassword */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
        },
        {
          "sample": "signUpRequest",
          "lineNumber": 76,
          "columnNumber": 79,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
          "excerpt": "   * @return success and failure message after user registration.\n   */\n  @PostMapping(\"/signup\")\n  public ResponseEntity<CRAPIResponse> registerUser(@Valid @RequestBody SignUpForm signUpRequest) {\n    // Creating user's account\n    CRAPIResponse registerUserResponse = userRegistrationService.registerUser(signUpRequest); /* <=== com.crapi.model.SignUpForm */ \n    if (registerUserResponse != null && registerUserResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(registerUserResponse);\n    } else if (registerUserResponse != null && registerUserResponse.getStatus() == 403) {\n      return ResponseEntity.status(HttpStatus.FORBIDDEN).body(registerUserResponse);\n    } else {"
        },
        {
          "sample": "userData",
          "lineNumber": 47,
          "columnNumber": 56,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/UserController.java",
          "excerpt": "   */\n  @GetMapping(\"/dashboard\")\n  public ResponseEntity<?> dashboard(HttpServletRequest request) {\n    DashboardResponse userData = userService.getUserByRequestToken(request);\n    if (userData != null) {\n      return ResponseEntity.status(HttpStatus.OK).body(userData); /* <=== com.crapi.model.DashboardResponse */ \n    } else\n      return ResponseEntity.status(HttpStatus.NOT_FOUND)\n          .body(new CRAPIResponse(UserMessage.EMAIL_NOT_REGISTERED, 404));\n  }\n"
        },
        {
          "sample": "this.email",
          "lineNumber": 64,
          "columnNumber": 74,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/MailConfiguration.java",
          "excerpt": "    props.put(\"mail.smtp.host\", host);\n    props.put(\"mail.smtp.port\", port);\n\n    if (email.isEmpty() || password.isEmpty()) {\n      throw new EntityNotFoundException(\n          ChangeEmailRequest.class, \"email and Password not configure \", email + \" \" + password); /* <===  */ \n    }\n\n    Session session =\n        Session.getInstance(\n            props,"
        },
        {
          "sample": "emailAddress",
          "lineNumber": 55,
          "columnNumber": -1,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
          "excerpt": "        if (mailConfiguration.getHost().trim().endsWith(mhogDomain)) {\n          logger.info(\n              \"SMTP host matches MailHog host. Using MailHog Configuration for sending emails\");\n          useMailHog = true;\n        }\n        for (InternetAddress emailAddress : emails) { /* <=== javax.mail.internet.InternetAddress */ \n          String email = emailAddress.toString();\n          String domain = email.substring(email.indexOf(\"@\") + 1).trim();\n          logger.debug(\n              \"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain);\n          if (mhogDomain.trim().equals(domain)) {"
        },
        {
          "sample": "UserPrinciple",
          "lineNumber": 43,
          "columnNumber": 14,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
          "excerpt": "  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email);\n      System.out.println(user);\n      return UserPrinciple.build(user); /* <=== com.crapi.entity.UserPrinciple */ \n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }\n  }\n}"
        }
      ]
    },
    {
      "sourceId": "Data.Sensitive.LocationData.PreciseLocation",
      "occurrences": [
        {
          "sample": "$obj1",
          "lineNumber": -1,
          "columnNumber": -1,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/VehicleLocationData.java",
          "excerpt": ""
        },
        {
          "sample": "latitude",
          "lineNumber": 33,
          "columnNumber": 21,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/VehicleLocation.java",
          "excerpt": "\n  private String latitude;\n  private String longitude;\n\n  public VehicleLocation(String latitude, String longitude) {\n    this.latitude = latitude; /* <=== java.lang.String */ \n    this.longitude = longitude;\n  }\n\n  public VehicleLocation() {}\n}"
        },
        {
          "sample": "vehicleLocations",
          "lineNumber": 97,
          "columnNumber": 30,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
          "excerpt": "    GenerateVIN generateVIN = new GenerateVIN();\n    VehicleLocation vehicleLocations = null;\n    Random random = new Random();\n    modelList = vehicleModelRepository.findAll();\n    vehicleLocations = getVehicleLocationList();\n    if (modelList != null && vehicleLocations != null) { /* <=== com.crapi.entity.VehicleLocation */ \n      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations);"
        }
      ]
    }
  ],
  "sinks": [
    {
      "sourceType": "Sinks",
      "sinkType": "storages",
      "id": "Storages.SpringFramework.Jdbc.Read",
      "name": "Java Database Connector(Read)",
      "domains": ["oracle.com"],
      "apiUrl": [],
      "databaseDetails": {
        "dbName": "${DB_NAME}",
        "dbVendor": "postgresql",
        "dbLocation": "${DB_HOST}:${DB_PORT}",
        "dbOperation": "Read"
      }
    },
    {
      "sourceType": "Sinks",
      "sinkType": "storages",
      "id": "Sinks.Database.JPA.Read",
      "name": "JPA Repository(Read)",
      "domains": ["springframework.org"],
      "apiUrl": [],
      "databaseDetails": {
        "dbName": "${DB_NAME}",
        "dbVendor": "postgresql",
        "dbLocation": "${DB_HOST}:${DB_PORT}",
        "dbOperation": "Read"
      }
    },
    {
      "sourceType": "Sinks",
      "sinkType": "storages",
      "id": "Storages.SpringFramework.Jdbc.Write",
      "name": "Java Database Connector(Write)",
      "domains": ["oracle.com"],
      "apiUrl": [],
      "databaseDetails": {
        "dbName": "${DB_NAME}",
        "dbVendor": "postgresql",
        "dbLocation": "${DB_HOST}:${DB_PORT}",
        "dbOperation": "Write"
      }
    },
    {
      "sourceType": "Sinks",
      "sinkType": "storages",
      "id": "Sinks.Database.JPA.Write",
      "name": "JPA Repository(Write)",
      "domains": ["springframework.org"],
      "apiUrl": [],
      "databaseDetails": {
        "dbName": "${DB_NAME}",
        "dbVendor": "postgresql",
        "dbLocation": "${DB_HOST}:${DB_PORT}",
        "dbOperation": "Write"
      }
    }
  ],
  "sinkProcessing": [
    {
      "sinkId": "Storages.SpringFramework.Jdbc.Write",
      "occurrences": [
        {
          "sample": "saveAll(vehicleLocationData.getVehicleLocationData())",
          "lineNumber": 59,
          "columnNumber": 7,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
          "excerpt": "  @Autowired PasswordEncoder encoder;\n\n  public void addLocation() {\n    if (CollectionUtils.isEmpty(vehicleLocationRepository.findAll())) {\n      VehicleLocationData vehicleLocationData = new VehicleLocationData();\n      vehicleLocationRepository.saveAll(vehicleLocationData.getVehicleLocationData()); /* <=== com.crapi.repository.VehicleLocationRepository.saveAll */ \n    }\n  }\n\n  public void addVehicleModel() {\n    if (CollectionUtils.isEmpty(vehicleModelRepository.findAll())) {"
        },
        {
          "sample": "profileVideoRepository.delete(profileVideo)",
          "lineNumber": 192,
          "columnNumber": 7,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
          "excerpt": "    optionalProfileVideo = profileVideoRepository.findById(videoId);\n    User user = userService.getUserFromToken(request);\n    if (optionalProfileVideo.isPresent()) {\n      profileVideo = optionalProfileVideo.get();\n      profileVideo.setUser(null);\n      profileVideoRepository.delete(profileVideo); /* <=== com.crapi.repository.ProfileVideoRepository.delete */ \n      return new CRAPIResponse(UserMessage.VIDEO_DELETED_SUCCESS_MESSAGE, 200);\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE, 404);\n  }\n"
        },
        {
          "sample": "vehicleDetailsRepository.save(checkVehicle)",
          "lineNumber": 189,
          "columnNumber": 9,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
          "excerpt": "    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }\n    return new CRAPIResponse(UserMessage.VEHICLE_ALREADY_CREATED, 403);"
        },
        {
          "sample": "otpRepository.save(otp)",
          "lineNumber": 123,
          "columnNumber": 7,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
          "excerpt": "        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp); /* <=== com.crapi.repository.OtpRepository.save */ \n      return validateOTPResponse;\n    }\n    throw new EntityNotFoundException(User.class, \"userEmail\", otpForm.getEmail());\n  }\n"
        },
        {
          "sample": "userRepository.saveAndFlush(user)",
          "lineNumber": 146,
          "columnNumber": 7,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
          "excerpt": "  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user); /* <=== com.crapi.repository.UserRepository.saveAndFlush */ \n    }\n  }\n\n  /**\n   * @param loginForm Contains user email, password and number"
        }
      ]
    },
    {
      "sinkId": "Storages.SpringFramework.Jdbc.Read",
      "occurrences": [
        {
          "sample": "changeEmailRepository.findByUser(user)",
          "lineNumber": 233,
          "columnNumber": 26,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
          "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.repository.ChangeEmailRepository.findByUser */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
        },
        {
          "sample": "findAll()",
          "lineNumber": 57,
          "columnNumber": 33,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
          "excerpt": "  @Autowired VehicleService vehicleService;\n\n  @Autowired PasswordEncoder encoder;\n\n  public void addLocation() {\n    if (CollectionUtils.isEmpty(vehicleLocationRepository.findAll())) { /* <=== com.crapi.repository.VehicleLocationRepository.findAll */ \n      VehicleLocationData vehicleLocationData = new VehicleLocationData();\n      vehicleLocationRepository.saveAll(vehicleLocationData.getVehicleLocationData());\n    }\n  }\n"
        },
        {
          "sample": "otpRepository.findByUser(user)",
          "lineNumber": 105,
          "columnNumber": 13,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
          "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
        },
        {
          "sample": "findByVin(vehicleForm.getVin())",
          "lineNumber": 183,
          "columnNumber": 20,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
          "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.repository.VehicleDetailsRepository.findByVin */ \n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);"
        },
        {
          "sample": "profileVideoRepository.findById(videoId)",
          "lineNumber": 170,
          "columnNumber": 28,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
          "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse deleteProfileVideo(Long videoId, HttpServletRequest request) {\n    Optional<ProfileVideo> optionalProfileVideo;\n    ProfileVideo profileVideo;\n    optionalProfileVideo = profileVideoRepository.findById(videoId); /* <=== com.crapi.repository.ProfileVideoRepository.findById */ \n    if (optionalProfileVideo.isPresent()) {\n      return new CRAPIResponse(UserMessage.THIS_IS_ADMIN_FUNCTION, 403);\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE, 404);\n  }"
        },
        {
          "sample": "userRepository.findByEmail(email)",
          "lineNumber": 41,
          "columnNumber": 19,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
          "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
        }
      ]
    },
    {
      "sinkId": "Sinks.Database.JPA.Read",
      "occurrences": [
        {
          "sample": "changeEmailRepository.findByUser(user)",
          "lineNumber": 233,
          "columnNumber": 26,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
          "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.repository.ChangeEmailRepository.findByUser */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
        },
        {
          "sample": "findAll()",
          "lineNumber": 57,
          "columnNumber": 33,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
          "excerpt": "  @Autowired VehicleService vehicleService;\n\n  @Autowired PasswordEncoder encoder;\n\n  public void addLocation() {\n    if (CollectionUtils.isEmpty(vehicleLocationRepository.findAll())) { /* <=== com.crapi.repository.VehicleLocationRepository.findAll */ \n      VehicleLocationData vehicleLocationData = new VehicleLocationData();\n      vehicleLocationRepository.saveAll(vehicleLocationData.getVehicleLocationData());\n    }\n  }\n"
        },
        {
          "sample": "otpRepository.findByUser(user)",
          "lineNumber": 105,
          "columnNumber": 13,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
          "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
        },
        {
          "sample": "findByVin(vehicleForm.getVin())",
          "lineNumber": 183,
          "columnNumber": 20,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
          "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.repository.VehicleDetailsRepository.findByVin */ \n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);"
        },
        {
          "sample": "profileVideoRepository.findById(videoId)",
          "lineNumber": 170,
          "columnNumber": 28,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
          "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse deleteProfileVideo(Long videoId, HttpServletRequest request) {\n    Optional<ProfileVideo> optionalProfileVideo;\n    ProfileVideo profileVideo;\n    optionalProfileVideo = profileVideoRepository.findById(videoId); /* <=== com.crapi.repository.ProfileVideoRepository.findById */ \n    if (optionalProfileVideo.isPresent()) {\n      return new CRAPIResponse(UserMessage.THIS_IS_ADMIN_FUNCTION, 403);\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE, 404);\n  }"
        },
        {
          "sample": "userRepository.findByEmail(email)",
          "lineNumber": 41,
          "columnNumber": 19,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
          "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
        }
      ]
    },
    {
      "sinkId": "Sinks.Database.JPA.Write",
      "occurrences": [
        {
          "sample": "saveAll(vehicleLocationData.getVehicleLocationData())",
          "lineNumber": 59,
          "columnNumber": 7,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
          "excerpt": "  @Autowired PasswordEncoder encoder;\n\n  public void addLocation() {\n    if (CollectionUtils.isEmpty(vehicleLocationRepository.findAll())) {\n      VehicleLocationData vehicleLocationData = new VehicleLocationData();\n      vehicleLocationRepository.saveAll(vehicleLocationData.getVehicleLocationData()); /* <=== com.crapi.repository.VehicleLocationRepository.saveAll */ \n    }\n  }\n\n  public void addVehicleModel() {\n    if (CollectionUtils.isEmpty(vehicleModelRepository.findAll())) {"
        },
        {
          "sample": "profileVideoRepository.delete(profileVideo)",
          "lineNumber": 192,
          "columnNumber": 7,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
          "excerpt": "    optionalProfileVideo = profileVideoRepository.findById(videoId);\n    User user = userService.getUserFromToken(request);\n    if (optionalProfileVideo.isPresent()) {\n      profileVideo = optionalProfileVideo.get();\n      profileVideo.setUser(null);\n      profileVideoRepository.delete(profileVideo); /* <=== com.crapi.repository.ProfileVideoRepository.delete */ \n      return new CRAPIResponse(UserMessage.VIDEO_DELETED_SUCCESS_MESSAGE, 200);\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE, 404);\n  }\n"
        },
        {
          "sample": "vehicleDetailsRepository.save(checkVehicle)",
          "lineNumber": 189,
          "columnNumber": 9,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
          "excerpt": "    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }\n    return new CRAPIResponse(UserMessage.VEHICLE_ALREADY_CREATED, 403);"
        },
        {
          "sample": "otpRepository.save(otp)",
          "lineNumber": 123,
          "columnNumber": 7,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
          "excerpt": "        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp); /* <=== com.crapi.repository.OtpRepository.save */ \n      return validateOTPResponse;\n    }\n    throw new EntityNotFoundException(User.class, \"userEmail\", otpForm.getEmail());\n  }\n"
        },
        {
          "sample": "userRepository.saveAndFlush(user)",
          "lineNumber": 146,
          "columnNumber": 7,
          "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
          "excerpt": "  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user); /* <=== com.crapi.repository.UserRepository.saveAndFlush */ \n    }\n  }\n\n  /**\n   * @param loginForm Contains user email, password and number"
        }
      ]
    }
  ],
  "probableSinks": [
    "com.crapi.entity.VehicleDetails.setOwner",
    "com.crapi.enums.EStatus.toString",
    "com.nimbusds.jose.jwk.JWKSet.load",
    "com.nimbusds.jose.jwk.JWKSet.getKeys",
    "com.nimbusds.jose.Algorithm.getName",
    "com.nimbusds.jose.jwk.JWK.getAlgorithm",
    "com.nimbusds.jose.jwk.JWK.toRSAKey",
    "com.nimbusds.jose.jwk.RSAKey.toPublicJWK",
    "com.nimbusds.jose.jwk.RSAKey.toKeyPair",
    "com.nimbusds.jose.jwk.JWKSet.toJSONObject",
    "com.google.gson.GsonBuilder.create",
    "com.google.gson.GsonBuilder.setPrettyPrinting",
    "com.google.gson.GsonBuilder.<init>",
    "com.google.gson.Gson.toJson",
    "io.jsonwebtoken.JwtBuilder.setSubject",
    "io.jsonwebtoken.Jwts.builder",
    "com.crapi.entity.User.getEmail",
    "com.crapi.entity.User.getRole",
    "com.nimbusds.jwt.JWTClaimsSet.getSubject",
    "com.nimbusds.jwt.JWT.getJWTClaimsSet",
    "com.nimbusds.jwt.JWTParser.parse",
    "com.nimbusds.jose.JWSHeader.getJWKURL",
    "com.nimbusds.jose.jwk.JWKSet.toString",
    "com.nimbusds.jose.jwk.JWKSet.getKeyByKeyId",
    "com.nimbusds.jose.JWSHeader.getKeyID",
    "com.nimbusds.jose.jwk.RSAKey.toPublicKey",
    "com.nimbusds.jwt.SignedJWT.parse",
    "com.nimbusds.jwt.SignedJWT.getHeader",
    "com.nimbusds.jose.JWSHeader.getAlgorithm",
    "io.jsonwebtoken.JwtParser.parseClaimsJws",
    "io.jsonwebtoken.JwtParser.setSigningKey",
    "io.jsonwebtoken.Jwts.parser",
    "com.nimbusds.jose.crypto.RSASSAVerifier.<init>",
    "com.nimbusds.jose.jwk.RSAKey.toJSONString",
    "com.nimbusds.jwt.SignedJWT.verify",
    "com.crapi.model.JwtResponse.getToken",
    "com.crapi.model.CRAPIResponse.getStatus",
    "com.crapi.model.JwtTokenForm.getToken",
    "com.crapi.entity.User.getId",
    "com.crapi.entity.User.getPassword",
    "com.crapi.enums.ERole.<init>",
    "com.crapi.enums.ERole.values",
    "com.crapi.exception.CRAPIExceptionHandler.getMessage",
    "com.crapi.exception.CRAPIExceptionHandler.getStatus",
    "com.crapi.entity.Otp.setStatus",
    "com.crapi.model.OtpForm.getEmail",
    "com.crapi.entity.User.setPassword",
    "com.crapi.model.OtpForm.getPassword",
    "com.crapi.entity.Otp.setCount",
    "com.crapi.entity.Otp.getCount",
    "com.crapi.exception.EntityNotFoundException.<init>",
    "com.crapi.model.ForgetPassword.getEmail",
    "com.crapi.entity.Otp.setOtp",
    "com.crapi.entity.Otp.getStatus",
    "com.crapi.entity.Otp.getOtp",
    "com.crapi.model.OtpForm.getOtp",
    "com.crapi.entity.Otp.getUser",
    "com.crapi.model.VideoForm.getVideoName",
    "com.crapi.model.VideoForm.getConversion_params",
    "com.crapi.model.SignUpForm.getNumber",
    "com.crapi.model.SignUpForm.getEmail",
    "com.crapi.model.SignUpForm.getPassword",
    "com.crapi.model.SignUpForm.getName",
    "com.crapi.model.LoginForm.getEmail",
    "com.crapi.model.JwtResponse.setMessage",
    "org.slf4j.Logger.getClass",
    "com.crapi.model.LoginForm.getPassword",
    "com.crapi.model.JwtResponse.setToken",
    "com.crapi.entity.User.setJwtToken",
    "com.crapi.entity.User.getNumber",
    "com.crapi.model.DashboardResponse.setPicture_url",
    "com.crapi.model.DashboardResponse.setVideo_name",
    "com.crapi.model.DashboardResponse.setVideo_url",
    "com.crapi.model.DashboardResponse.setVideo_id",
    "com.crapi.model.ChangeEmailForm.getNew_email",
    "com.crapi.model.ChangeEmailForm.getOld_email",
    "com.crapi.entity.ChangeEmailRequest.setEmailToken",
    "com.crapi.entity.ChangeEmailRequest.setNewEmail",
    "com.crapi.entity.ChangeEmailRequest.setOldEmail",
    "com.crapi.model.ChangeEmailForm.setToken",
    "com.crapi.model.ChangeEmailForm.getToken",
    "com.crapi.entity.ChangeEmailRequest.getOldEmail",
    "com.crapi.entity.ChangeEmailRequest.getNewEmail",
    "com.crapi.entity.User.setEmail",
    "com.crapi.model.LoginWithEmailToken.getEmail",
    "com.crapi.model.LoginWithEmailToken.getToken",
    "com.crapi.model.VehicleForm.getVin",
    "com.crapi.entity.VehicleDetails.getPincode",
    "com.crapi.model.VehicleForm.getPincode",
    "com.crapi.entity.VehicleDetails.setStatus",
    "com.crapi.entity.VehicleDetails.setModel",
    "com.crapi.entity.VehicleDetails.setVehicleLocation",
    "com.crapi.exception.CRAPIExceptionHandler.<init>",
    "com.crapi.entity.VehicleDetails.getOwner",
    "com.crapi.entity.VehicleDetails.getVehicleLocation",
    "com.crapi.entity.VehicleDetails.getVin",
    "org.mockito.Mockito.when",
    "org.mockito.Mockito.any",
    "com.crapi.model.OtpForm.setOtp",
    "org.mockito.Mockito.anyString",
    "org.mockito.Mockito.verify",
    "org.mockito.Mockito.times",
    "com.crapi.model.CRAPIResponse.getMessage",
    "org.mockito.Mockito.doNothing",
    "com.crapi.model.ForgetPassword.setEmail",
    "com.crapi.model.OtpForm.setEmail",
    "com.crapi.model.OtpForm.setPassword",
    "com.crapi.entity.Otp.setId",
    "com.crapi.entity.Otp.setUser",
    "com.crapi.entity.User.setId",
    "org.mockito.Mockito.anyLong",
    "org.mockito.Mockito.doReturn",
    "com.crapi.model.VideoForm.setConversion_params",
    "com.crapi.model.VideoForm.getId",
    "com.crapi.model.VideoForm.setId",
    "com.crapi.model.VideoForm.setVideo_url",
    "com.crapi.model.VideoForm.setVideoName",
    "com.crapi.model.LoginWithEmailToken.setEmail",
    "com.crapi.model.LoginWithEmailToken.setToken",
    "com.crapi.entity.ChangeEmailRequest.setStatus",
    "com.crapi.entity.ChangeEmailRequest.setUser",
    "com.crapi.entity.ChangeEmailRequest.setId",
    "com.crapi.model.ChangeEmailForm.setNew_email",
    "com.crapi.model.ChangeEmailForm.setOld_email",
    "com.crapi.model.SignUpForm.setPassword",
    "com.crapi.model.LoginForm.setPassword",
    "com.crapi.model.LoginForm.setNumber",
    "com.crapi.model.LoginForm.setEmail",
    "com.crapi.model.CRAPIResponse.setMessage",
    "com.crapi.model.CRAPIResponse.setStatus",
    "org.mockito.Mockito.when.getUserFromToken",
    "org.mockito.Mockito.when.thenReturn",
    "com.crapi.service.Impl.UserServiceImplTest.when",
    "com.crapi.model.JwtResponse.getMessage",
    "com.crapi.entity.User.getJwtToken",
    "org.mockito.Mockito.when.getUserFromTokenWithoutValidation",
    "com.crapi.model.DashboardResponse.getPicture_url",
    "com.crapi.model.DashboardResponse.getVideo_name",
    "com.crapi.model.DashboardResponse.getVideo_id",
    "com.crapi.model.DashboardResponse.getVideo_url",
    "org.mockito.Mockito.when.save",
    "org.mockito.Mockito.when.sendMail",
    "org.mockito.Mockito.when.generateJwtToken",
    "com.crapi.entity.VehicleDetails.setPincode",
    "com.crapi.service.Impl.VehicleServiceImplTest.assertEquals",
    "com.crapi.entity.VehicleDetails.getUuid",
    "com.crapi.model.VehicleLocationResponse.getFullName",
    "com.crapi.entity.VehicleDetails.setId",
    "com.crapi.entity.VehicleDetails.setUuid",
    "com.crapi.entity.VehicleDetails.setVin",
    "com.crapi.entity.VehicleDetails.setYear",
    "com.crapi.entity.VehicleModel.setFuel_type",
    "com.crapi.entity.VehicleModel.setId",
    "com.crapi.entity.VehicleModel.setModel",
    "com.crapi.entity.VehicleModel.setVehicle_img",
    "com.crapi.entity.VehicleModel.setVehiclecompany",
    "com.crapi.entity.VehicleCompany.setId",
    "com.crapi.entity.VehicleCompany.setName",
    "com.crapi.entity.VehicleLocation.setId",
    "com.crapi.entity.VehicleLocation.setLatitude",
    "com.crapi.entity.VehicleLocation.setLongitude",
    "com.crapi.model.VehicleForm.setPincode",
    "com.crapi.model.VehicleForm.setVin"
  ],
  "dataFlow": {
    "storages": [
      {
        "sourceId": "Data.Sensitive.AccountData.AccountName",
        "sinks": [
          {
            "sinkType": "storages",
            "id": "Storages.SpringFramework.Jdbc.Write",
            "name": "Java Database Connector(Write)",
            "category": "",
            "domains": ["oracle.com"],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "${DB_NAME}",
              "dbVendor": "postgresql",
              "dbLocation": "${DB_HOST}:${DB_PORT}",
              "dbOperation": "Write"
            },
            "paths": [
              {
                "pathId": "9005-9017-9013-9012-9020-9023-9067-8795-8794-8803-8799-8798-8806-8823-8826-8830-8840-8836",
                "path": [
                  {
                    "sample": "username",
                    "lineNumber": 298,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public User getUserFromToken(HttpServletRequest request) {\n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) { /* <=== java.lang.String */ \n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "username",
                    "lineNumber": 299,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== java.lang.String */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "userRepository.findByEmail(username)",
                    "lineNumber": 299,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 299,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.entity.User */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 301,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) { /* <=== com.crapi.entity.User */ \n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 302,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 293,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param request request getting jwt token for user from request header\n   * @return User object from token throw entity not found if user not found.\n   */\n  @Transactional\n  @Override\n  public User getUserFromToken(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromToken(request)",
                    "lineNumber": 231,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromToken */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 231,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 233,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  },
                  {
                    "sample": "changeEmailRepository.findByUser(user)",
                    "lineNumber": 233,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.repository.ChangeEmailRepository.findByUser */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 233,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.entity.ChangeEmailRequest */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 234,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) { /* <=== com.crapi.entity.ChangeEmailRequest */ \n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 241,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {\n      // updating the existing changeEmail data for user\n      changeEmailRequest.setEmailToken(token); /* <=== com.crapi.entity.ChangeEmailRequest */ \n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest);"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 242,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {\n      // updating the existing changeEmail data for user\n      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email()); /* <=== com.crapi.entity.ChangeEmailRequest */ \n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest);\n    smtpMailServer.sendMail("
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 243,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {\n      // updating the existing changeEmail data for user\n      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email()); /* <=== com.crapi.entity.ChangeEmailRequest */ \n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest);\n    smtpMailServer.sendMail(\n        changeEmailForm.getNew_email(),"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 246,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest); /* <=== com.crapi.entity.ChangeEmailRequest */ \n    smtpMailServer.sendMail(\n        changeEmailForm.getNew_email(),\n        MailBody.changeMailBody(changeEmailForm),\n        \"crAPI: Change Email Token\");\n    return new CRAPIResponse("
                  },
                  {
                    "sample": "changeEmailRepository.save(changeEmailRequest)",
                    "lineNumber": 246,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest); /* <=== com.crapi.repository.ChangeEmailRepository.save */ \n    smtpMailServer.sendMail(\n        changeEmailForm.getNew_email(),\n        MailBody.changeMailBody(changeEmailForm),\n        \"crAPI: Change Email Token\");\n    return new CRAPIResponse("
                  }
                ]
              },
              {
                "pathId": "9005-9017-9013-9012-9020-9023-9067-8887-8886-8897-8909-8913-8919-8915",
                "path": [
                  {
                    "sample": "username",
                    "lineNumber": 298,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public User getUserFromToken(HttpServletRequest request) {\n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) { /* <=== java.lang.String */ \n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "username",
                    "lineNumber": 299,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== java.lang.String */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "userRepository.findByEmail(username)",
                    "lineNumber": 299,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 299,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.entity.User */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 301,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) { /* <=== com.crapi.entity.User */ \n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 302,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 293,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param request request getting jwt token for user from request header\n   * @return User object from token throw entity not found if user not found.\n   */\n  @Transactional\n  @Override\n  public User getUserFromToken(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromToken(request)",
                    "lineNumber": 269,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public CRAPIResponse verifyEmailToken(\n      HttpServletRequest request, ChangeEmailForm changeEmailForm) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromToken */ \n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 269,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public CRAPIResponse verifyEmailToken(\n      HttpServletRequest request, ChangeEmailForm changeEmailForm) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 271,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) { /* <=== com.crapi.entity.User */ \n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");\n          userRepository.save(user);\n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 273,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail()); /* <=== com.crapi.entity.User */ \n          user.setJwtToken(\"\");\n          userRepository.save(user);\n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 274,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\"); /* <=== com.crapi.entity.User */ \n          userRepository.save(user);\n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);\n        }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 275,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");\n          userRepository.save(user); /* <=== com.crapi.entity.User */ \n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);\n        }\n      } else {"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 275,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");\n          userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);\n        }\n      } else {"
                  }
                ]
              },
              {
                "pathId": "9005-9017-9013-9012-9020-9023-9067-8566-8565-8570-8574-8585-8581",
                "path": [
                  {
                    "sample": "username",
                    "lineNumber": 298,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public User getUserFromToken(HttpServletRequest request) {\n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) { /* <=== java.lang.String */ \n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "username",
                    "lineNumber": 299,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== java.lang.String */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "userRepository.findByEmail(username)",
                    "lineNumber": 299,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 299,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.entity.User */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 301,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) { /* <=== com.crapi.entity.User */ \n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 302,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 293,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param request request getting jwt token for user from request header\n   * @return User object from token throw entity not found if user not found.\n   */\n  @Transactional\n  @Override\n  public User getUserFromToken(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromToken(request)",
                    "lineNumber": 158,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @return boolean for user reset password\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromToken */ \n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword()));\n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 158,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @return boolean for user reset password\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword()));\n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 159,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      user.setPassword(encoder.encode(loginForm.getPassword()));\n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 160,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <=== com.crapi.entity.User */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 161,
                    "columnNumber": 35,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword()));\n      userRepository.saveAndFlush(user); /* <=== com.crapi.entity.User */ \n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }\n"
                  },
                  {
                    "sample": "userRepository.saveAndFlush(user)",
                    "lineNumber": 161,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword()));\n      userRepository.saveAndFlush(user); /* <=== com.crapi.repository.UserRepository.saveAndFlush */ \n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }\n"
                  }
                ]
              }
            ]
          },
          {
            "sinkType": "storages",
            "id": "Storages.SpringFramework.Jdbc.Read",
            "name": "Java Database Connector(Read)",
            "category": "",
            "domains": ["oracle.com"],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "${DB_NAME}",
              "dbVendor": "postgresql",
              "dbLocation": "${DB_HOST}:${DB_PORT}",
              "dbOperation": "Read"
            },
            "paths": [
              {
                "pathId": "9101-9113-9109",
                "path": [
                  {
                    "sample": "username",
                    "lineNumber": 319,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public User getUserFromTokenWithoutValidation(HttpServletRequest request) {\n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) { /* <=== java.lang.String */ \n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user;"
                  },
                  {
                    "sample": "username",
                    "lineNumber": 320,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== java.lang.String */ \n      }\n\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "userRepository.findByEmail(username)",
                    "lineNumber": 320,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      }\n\n      if (user != null) {\n        return user;\n      } else {"
                  }
                ]
              },
              {
                "pathId": "9005-9017-9013-9012-9020-9023-9067-8795-8794-8803-8799",
                "path": [
                  {
                    "sample": "username",
                    "lineNumber": 298,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public User getUserFromToken(HttpServletRequest request) {\n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) { /* <=== java.lang.String */ \n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "username",
                    "lineNumber": 299,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== java.lang.String */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "userRepository.findByEmail(username)",
                    "lineNumber": 299,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 299,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.entity.User */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 301,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) { /* <=== com.crapi.entity.User */ \n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 302,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 293,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param request request getting jwt token for user from request header\n   * @return User object from token throw entity not found if user not found.\n   */\n  @Transactional\n  @Override\n  public User getUserFromToken(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromToken(request)",
                    "lineNumber": 231,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromToken */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 231,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 233,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  },
                  {
                    "sample": "changeEmailRepository.findByUser(user)",
                    "lineNumber": 233,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.repository.ChangeEmailRepository.findByUser */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  }
                ]
              },
              {
                "pathId": "9005-9017-9013",
                "path": [
                  {
                    "sample": "username",
                    "lineNumber": 298,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public User getUserFromToken(HttpServletRequest request) {\n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) { /* <=== java.lang.String */ \n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "username",
                    "lineNumber": 299,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== java.lang.String */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  },
                  {
                    "sample": "userRepository.findByEmail(username)",
                    "lineNumber": 299,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      }\n      if (user != null) {\n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);"
                  }
                ]
              },
              {
                "pathId": "9101-9113-9109-9108-9116-9119-9162-8630-8629-8639-8647-8642",
                "path": [
                  {
                    "sample": "username",
                    "lineNumber": 319,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public User getUserFromTokenWithoutValidation(HttpServletRequest request) {\n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) { /* <=== java.lang.String */ \n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user;"
                  },
                  {
                    "sample": "username",
                    "lineNumber": 320,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== java.lang.String */ \n      }\n\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "userRepository.findByEmail(username)",
                    "lineNumber": 320,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      }\n\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 320,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.entity.User */ \n      }\n\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 323,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) { /* <=== com.crapi.entity.User */ \n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 324,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 314,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    }\n  }\n\n  @Transactional\n  @Override\n  public User getUserFromTokenWithoutValidation(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromTokenWithoutValidation(request)",
                    "lineNumber": 181,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromTokenWithoutValidation */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 181,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.entity.User */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 182,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 183,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),\n              user.getEmail(),"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 183,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),\n              user.getEmail(),"
                  }
                ]
              },
              {
                "pathId": "9101-9113-9109-9108-9116-9119-9162-8630-8629-8639-8634",
                "path": [
                  {
                    "sample": "username",
                    "lineNumber": 319,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public User getUserFromTokenWithoutValidation(HttpServletRequest request) {\n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) { /* <=== java.lang.String */ \n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user;"
                  },
                  {
                    "sample": "username",
                    "lineNumber": 320,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== java.lang.String */ \n      }\n\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "userRepository.findByEmail(username)",
                    "lineNumber": 320,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      }\n\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 320,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username); /* <=== com.crapi.entity.User */ \n      }\n\n      if (user != null) {\n        return user;\n      } else {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 323,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) { /* <=== com.crapi.entity.User */ \n        return user;\n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 324,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 314,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    }\n  }\n\n  @Transactional\n  @Override\n  public User getUserFromTokenWithoutValidation(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromTokenWithoutValidation(request)",
                    "lineNumber": 181,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromTokenWithoutValidation */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 181,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.entity.User */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 182,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 182,
                    "columnNumber": 21,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.UserDetailsRepository.findByUser_id */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),"
                  }
                ]
              },
              {
                "pathId": "476-489-7907-7918-7914",
                "path": [
                  {
                    "sample": "username",
                    "lineNumber": 56,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/JwtAuthTokenFilter.java",
                    "excerpt": "      HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n      throws ServletException, IOException {\n\n    try {\n      String username = getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) { /* <=== java.lang.String */ \n        UserDetails userDetails = userDetailsService.loadUserByUsername(username);\n        UsernamePasswordAuthenticationToken authentication =\n            new UsernamePasswordAuthenticationToken(\n                userDetails, null, userDetails.getAuthorities());\n        authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));"
                  },
                  {
                    "sample": "username",
                    "lineNumber": 57,
                    "columnNumber": 73,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/JwtAuthTokenFilter.java",
                    "excerpt": "      throws ServletException, IOException {\n\n    try {\n      String username = getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        UserDetails userDetails = userDetailsService.loadUserByUsername(username); /* <=== java.lang.String */ \n        UsernamePasswordAuthenticationToken authentication =\n            new UsernamePasswordAuthenticationToken(\n                userDetails, null, userDetails.getAuthorities());\n        authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n        SecurityContextHolder.getContext().setAuthentication(authentication);"
                  },
                  {
                    "sample": "String email",
                    "lineNumber": 39,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "   * @return UserDatils after validating the user into database\n   * @throws UsernameNotFoundException\n   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) { /* <===  */ \n    try {\n      User user = userRepository.findByEmail(email);\n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "email",
                    "lineNumber": 41,
                    "columnNumber": 46,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== java.lang.String */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
                  },
                  {
                    "sample": "userRepository.findByEmail(email)",
                    "lineNumber": 41,
                    "columnNumber": 19,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId": "Data.Sensitive.LocationData.PreciseLocation",
        "sinks": [
          {
            "sinkType": "storages",
            "id": "Storages.SpringFramework.Jdbc.Write",
            "name": "Java Database Connector(Write)",
            "category": "",
            "domains": ["oracle.com"],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "${DB_NAME}",
              "dbVendor": "postgresql",
              "dbLocation": "${DB_HOST}:${DB_PORT}",
              "dbOperation": "Write"
            },
            "paths": [
              {
                "pathId": "9484-9492-9521-9520-9526-9522",
                "path": [
                  {
                    "sample": "java.lang.String latitude",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/VehicleLocation.java",
                    "excerpt": "\n  @Id\n  @GeneratedValue(strategy = GenerationType.AUTO)\n  private long id;\n\n  private String latitude; /* <=== 'latitude' is a member of 'com.crapi.entity.VehicleLocation' class */ \n  private String longitude;\n\n  public VehicleLocation(String latitude, String longitude) {\n    this.latitude = latitude;\n    this.longitude = longitude;"
                  },
                  {
                    "sample": "vehicleLocations",
                    "lineNumber": 96,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    List<VehicleModel> modelList = null;\n    GenerateVIN generateVIN = new GenerateVIN();\n    VehicleLocation vehicleLocations = null;\n    Random random = new Random();\n    modelList = vehicleModelRepository.findAll();\n    vehicleLocations = getVehicleLocationList(); /* <=== com.crapi.entity.VehicleLocation */ \n    if (modelList != null && vehicleLocations != null) {\n      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));"
                  },
                  {
                    "sample": "vehicleLocations",
                    "lineNumber": 97,
                    "columnNumber": 30,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    GenerateVIN generateVIN = new GenerateVIN();\n    VehicleLocation vehicleLocations = null;\n    Random random = new Random();\n    modelList = vehicleModelRepository.findAll();\n    vehicleLocations = getVehicleLocationList();\n    if (modelList != null && vehicleLocations != null) { /* <=== com.crapi.entity.VehicleLocation */ \n      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations);"
                  },
                  {
                    "sample": "vehicleLocations",
                    "lineNumber": 102,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    if (modelList != null && vehicleLocations != null) {\n      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations); /* <=== com.crapi.entity.VehicleLocation */ \n      vehicleDetailsRepository.save(vehicleDetails);\n      return vehicleDetails;\n    }\n    throw new CRAPIExceptionHandler(\n        UserMessage.CUSTOM_IO_EXCEPTION,"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 102,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    if (modelList != null && vehicleLocations != null) {\n      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations); /* <=== com.crapi.entity.VehicleDetails */ \n      vehicleDetailsRepository.save(vehicleDetails);\n      return vehicleDetails;\n    }\n    throw new CRAPIExceptionHandler(\n        UserMessage.CUSTOM_IO_EXCEPTION,"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 103,
                    "columnNumber": 37,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations);\n      vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.entity.VehicleDetails */ \n      return vehicleDetails;\n    }\n    throw new CRAPIExceptionHandler(\n        UserMessage.CUSTOM_IO_EXCEPTION,\n        UserMessage.CUSTOM_IO_EXCEPTION_UNABLE_TO_CREATE_VEHICLE,"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(vehicleDetails)",
                    "lineNumber": 103,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations);\n      vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n      return vehicleDetails;\n    }\n    throw new CRAPIExceptionHandler(\n        UserMessage.CUSTOM_IO_EXCEPTION,\n        UserMessage.CUSTOM_IO_EXCEPTION_UNABLE_TO_CREATE_VEHICLE,"
                  }
                ]
              },
              {
                "pathId": "11647-11650-4526-4563-11649-11645-11644-11654-11658-111-107",
                "path": [
                  {
                    "sample": "java.lang.String latitude",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/VehicleLocation.java",
                    "excerpt": "\n  @Id\n  @GeneratedValue(strategy = GenerationType.AUTO)\n  private long id;\n\n  private String latitude; /* <=== 'latitude' is a member of 'com.crapi.entity.VehicleLocation' class */ \n  private String longitude;\n\n  public VehicleLocation(String latitude, String longitude) {\n    this.latitude = latitude;\n    this.longitude = longitude;"
                  },
                  {
                    "sample": "$obj10",
                    "lineNumber": -1,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/VehicleLocationData.java",
                    "excerpt": ""
                  },
                  {
                    "sample": "$obj10",
                    "lineNumber": -1,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/VehicleLocationData.java",
                    "excerpt": ""
                  },
                  {
                    "sample": "this",
                    "lineNumber": 32,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/VehicleLocation.java",
                    "excerpt": "  private long id;\n\n  private String latitude;\n  private String longitude;\n\n  public VehicleLocation(String latitude, String longitude) { /* <===  */ \n    this.latitude = latitude;\n    this.longitude = longitude;\n  }\n\n  public VehicleLocation() {}"
                  },
                  {
                    "sample": "void",
                    "lineNumber": 35,
                    "columnNumber": 3,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/VehicleLocation.java",
                    "excerpt": "  private String longitude;\n\n  public VehicleLocation(String latitude, String longitude) {\n    this.latitude = latitude;\n    this.longitude = longitude;\n  } /* <===  */ \n\n  public VehicleLocation() {}\n}"
                  },
                  {
                    "sample": "new VehicleLocation(\"38.9518424\", \"-77.1483682\")",
                    "lineNumber": 35,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/VehicleLocationData.java",
                    "excerpt": "    vehicleLocationData.add(new VehicleLocation(\"37.4171615\", \"-122.0271935\"));\n    vehicleLocationData.add(new VehicleLocation(\"31.9726318\", \"34.7958503\"));\n    vehicleLocationData.add(new VehicleLocation(\"37.233333\", \"-115.808333\"));\n    vehicleLocationData.add(new VehicleLocation(\"28.6297622\", \"77.2058573\"));\n    vehicleLocationData.add(new VehicleLocation(\"30.264007\", \"-97.773161\"));\n    vehicleLocationData.add(new VehicleLocation(\"38.9518424\", \"-77.1483682\")); /* <=== com.crapi.entity.VehicleLocation.<init> */ \n\n    return vehicleLocationData;\n  }\n}"
                  },
                  {
                    "sample": "vehicleLocationData",
                    "lineNumber": 35,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/VehicleLocationData.java",
                    "excerpt": "    vehicleLocationData.add(new VehicleLocation(\"37.4171615\", \"-122.0271935\"));\n    vehicleLocationData.add(new VehicleLocation(\"31.9726318\", \"34.7958503\"));\n    vehicleLocationData.add(new VehicleLocation(\"37.233333\", \"-115.808333\"));\n    vehicleLocationData.add(new VehicleLocation(\"28.6297622\", \"77.2058573\"));\n    vehicleLocationData.add(new VehicleLocation(\"30.264007\", \"-97.773161\"));\n    vehicleLocationData.add(new VehicleLocation(\"38.9518424\", \"-77.1483682\")); /* <=== java.util.List */ \n\n    return vehicleLocationData;\n  }\n}"
                  },
                  {
                    "sample": "return vehicleLocationData;",
                    "lineNumber": 37,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/VehicleLocationData.java",
                    "excerpt": "    vehicleLocationData.add(new VehicleLocation(\"37.233333\", \"-115.808333\"));\n    vehicleLocationData.add(new VehicleLocation(\"28.6297622\", \"77.2058573\"));\n    vehicleLocationData.add(new VehicleLocation(\"30.264007\", \"-97.773161\"));\n    vehicleLocationData.add(new VehicleLocation(\"38.9518424\", \"-77.1483682\"));\n\n    return vehicleLocationData; /* <===  */ \n  }\n}"
                  },
                  {
                    "sample": "java.util.List",
                    "lineNumber": 24,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/VehicleLocationData.java",
                    "excerpt": "import java.util.List;\n\npublic class VehicleLocationData {\n\n  /** @return List of hard coded Vehicle Location for pre data setup */\n  public List<VehicleLocation> getVehicleLocationData() { /* <===  */ \n    List<VehicleLocation> vehicleLocationData = new ArrayList<>();\n    vehicleLocationData.add(new VehicleLocation(\"33.7967129\", \"-84.3909149\"));\n    vehicleLocationData.add(new VehicleLocation(\"39.0247621\", \"-77.1402267\"));\n    vehicleLocationData.add(new VehicleLocation(\"37.7775112\", \"-122.3970889\"));\n    vehicleLocationData.add(new VehicleLocation(\"37.4850772\", \"-122.1504711\"));"
                  },
                  {
                    "sample": "vehicleLocationData.getVehicleLocationData()",
                    "lineNumber": 59,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "  @Autowired PasswordEncoder encoder;\n\n  public void addLocation() {\n    if (CollectionUtils.isEmpty(vehicleLocationRepository.findAll())) {\n      VehicleLocationData vehicleLocationData = new VehicleLocationData();\n      vehicleLocationRepository.saveAll(vehicleLocationData.getVehicleLocationData()); /* <=== com.crapi.utils.VehicleLocationData.getVehicleLocationData */ \n    }\n  }\n\n  public void addVehicleModel() {\n    if (CollectionUtils.isEmpty(vehicleModelRepository.findAll())) {"
                  },
                  {
                    "sample": "saveAll(vehicleLocationData.getVehicleLocationData())",
                    "lineNumber": 59,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "  @Autowired PasswordEncoder encoder;\n\n  public void addLocation() {\n    if (CollectionUtils.isEmpty(vehicleLocationRepository.findAll())) {\n      VehicleLocationData vehicleLocationData = new VehicleLocationData();\n      vehicleLocationRepository.saveAll(vehicleLocationData.getVehicleLocationData()); /* <=== com.crapi.repository.VehicleLocationRepository.saveAll */ \n    }\n  }\n\n  public void addVehicleModel() {\n    if (CollectionUtils.isEmpty(vehicleModelRepository.findAll())) {"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId": "Data.Sensitive.AccountData.AccountPassword",
        "sinks": [
          {
            "sinkType": "storages",
            "id": "Storages.SpringFramework.Jdbc.Write",
            "name": "Java Database Connector(Write)",
            "category": "",
            "domains": ["oracle.com"],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "${DB_NAME}",
              "dbVendor": "postgresql",
              "dbLocation": "${DB_HOST}:${DB_PORT}",
              "dbOperation": "Write"
            },
            "paths": [
              {
                "pathId": "3801-3799-21695-7560-7562",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 91,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) {\n    this.user = user; /* <=== com.crapi.entity.User */ \n  }\n\n  @JsonProperty(\"profileVideo\")\n  public String getVideoBase64() {\n    // just assuming it is a jpeg. you would need to cater for different media types"
                  },
                  {
                    "sample": "this.user",
                    "lineNumber": 91,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) {\n    this.user = user; /* <===  */ \n  }\n\n  @JsonProperty(\"profileVideo\")\n  public String getVideoBase64() {\n    // just assuming it is a jpeg. you would need to cater for different media types"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 90,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  @JsonIgnore\n  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) { /* <===  */ \n    this.user = user;\n  }\n\n  @JsonProperty(\"profileVideo\")\n  public String getVideoBase64() {"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 191,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    optionalProfileVideo = profileVideoRepository.findById(videoId);\n    User user = userService.getUserFromToken(request);\n    if (optionalProfileVideo.isPresent()) {\n      profileVideo = optionalProfileVideo.get();\n      profileVideo.setUser(null); /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideoRepository.delete(profileVideo);\n      return new CRAPIResponse(UserMessage.VIDEO_DELETED_SUCCESS_MESSAGE, 200);\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE, 404);\n  }"
                  },
                  {
                    "sample": "profileVideoRepository.delete(profileVideo)",
                    "lineNumber": 192,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    optionalProfileVideo = profileVideoRepository.findById(videoId);\n    User user = userService.getUserFromToken(request);\n    if (optionalProfileVideo.isPresent()) {\n      profileVideo = optionalProfileVideo.get();\n      profileVideo.setUser(null);\n      profileVideoRepository.delete(profileVideo); /* <=== com.crapi.repository.ProfileVideoRepository.delete */ \n      return new CRAPIResponse(UserMessage.VIDEO_DELETED_SUCCESS_MESSAGE, 200);\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE, 404);\n  }\n"
                  }
                ]
              },
              {
                "pathId": "6958-6953-6952-6961-6980-7000-3574-3583-3581-21685-6998-7002-7007",
                "path": [
                  {
                    "sample": "forgetPassword",
                    "lineNumber": 141,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.model.ForgetPassword */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "findByEmail(forgetPassword.getEmail())",
                    "lineNumber": 141,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 141,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 142,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 147,
                    "columnNumber": 58,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n        if (checkOtpEnteryForUser != null) {\n          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 154,
                    "columnNumber": 48,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {\n          // Create new OTP object\n          checkOtpEnteryForUser = new Otp(otp, user); /* <=== com.crapi.entity.User */ \n        }\n        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString());\n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser);\n        // Sent OTP mail to user email address."
                  },
                  {
                    "sample": "User user",
                    "lineNumber": 37,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/Otp.java",
                    "excerpt": "\n  @OneToOne private User user;\n\n  public Otp() {}\n\n  public Otp(String otp, User user) { /* <===  */ \n    this.otp = otp;\n    this.user = user;\n  }\n}"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 39,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/Otp.java",
                    "excerpt": "\n  public Otp() {}\n\n  public Otp(String otp, User user) {\n    this.otp = otp;\n    this.user = user; /* <=== com.crapi.entity.User */ \n  }\n}"
                  },
                  {
                    "sample": "this.user",
                    "lineNumber": 39,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/Otp.java",
                    "excerpt": "\n  public Otp() {}\n\n  public Otp(String otp, User user) {\n    this.otp = otp;\n    this.user = user; /* <===  */ \n  }\n}"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 37,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/Otp.java",
                    "excerpt": "\n  @OneToOne private User user;\n\n  public Otp() {}\n\n  public Otp(String otp, User user) { /* <===  */ \n    this.otp = otp;\n    this.user = user;\n  }\n}"
                  },
                  {
                    "sample": "checkOtpEnteryForUser",
                    "lineNumber": 154,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {\n          // Create new OTP object\n          checkOtpEnteryForUser = new Otp(otp, user); /* <=== com.crapi.entity.Otp */ \n        }\n        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString());\n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser);\n        // Sent OTP mail to user email address."
                  },
                  {
                    "sample": "checkOtpEnteryForUser",
                    "lineNumber": 156,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "          checkOtpEnteryForUser.setOtp(otp);\n        } else {\n          // Create new OTP object\n          checkOtpEnteryForUser = new Otp(otp, user);\n        }\n        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString()); /* <=== com.crapi.entity.Otp */ \n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser);\n        // Sent OTP mail to user email address.\n        smtpMailServer.sendMail(\n            user.getEmail(), MailBody.otpMailBody(checkOtpEnteryForUser), \"crAPI OTP\");"
                  },
                  {
                    "sample": "otpRepository.save(checkOtpEnteryForUser)",
                    "lineNumber": 158,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "          // Create new OTP object\n          checkOtpEnteryForUser = new Otp(otp, user);\n        }\n        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString());\n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser); /* <=== com.crapi.repository.OtpRepository.save */ \n        // Sent OTP mail to user email address.\n        smtpMailServer.sendMail(\n            user.getEmail(), MailBody.otpMailBody(checkOtpEnteryForUser), \"crAPI OTP\");\n        return new CRAPIResponse(UserMessage.OTP_SEND_SUCCESS_ON_EMAIL + user.getEmail(), 200);\n      }"
                  }
                ]
              },
              {
                "pathId": "7325-3674-3688-3686-21690-7320-7326",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 86,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {\n        profileVideo = new ProfileVideo(file.getOriginalFilename(), file.getBytes(), user); /* <=== com.crapi.entity.User */ \n      }\n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload video -> Message: {} \", exception);"
                  },
                  {
                    "sample": "User user",
                    "lineNumber": 44,
                    "columnNumber": 55,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "    this.video_name = video_name;\n    this.user = user;\n  }\n\n  // constructor for new object\n  public ProfileVideo(String video_name, byte[] file, User user) { /* <===  */ \n    this.video_name = video_name;\n    this.user = user;\n    this.video = file;\n  }\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 46,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  }\n\n  // constructor for new object\n  public ProfileVideo(String video_name, byte[] file, User user) {\n    this.video_name = video_name;\n    this.user = user; /* <=== com.crapi.entity.User */ \n    this.video = file;\n  }\n\n  public ProfileVideo() {}\n"
                  },
                  {
                    "sample": "this.user",
                    "lineNumber": 46,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  }\n\n  // constructor for new object\n  public ProfileVideo(String video_name, byte[] file, User user) {\n    this.video_name = video_name;\n    this.user = user; /* <===  */ \n    this.video = file;\n  }\n\n  public ProfileVideo() {}\n"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 44,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "    this.video_name = video_name;\n    this.user = user;\n  }\n\n  // constructor for new object\n  public ProfileVideo(String video_name, byte[] file, User user) { /* <===  */ \n    this.video_name = video_name;\n    this.user = user;\n    this.video = file;\n  }\n"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 106,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {\n        profileVideo = new ProfileVideo(file.getOriginalFilename(), file.getBytes(), user); /* <=== com.crapi.entity.ProfileVideo */ \n      }\n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload video -> Message: {} \", exception);"
                  },
                  {
                    "sample": "profileVideoRepository.save(profileVideo)",
                    "lineNumber": 108,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {\n        profileVideo = new ProfileVideo(file.getOriginalFilename(), file.getBytes(), user);\n      }\n      profileVideoRepository.save(profileVideo); /* <=== com.crapi.repository.ProfileVideoRepository.save */ \n      return profileVideo;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload video -> Message: {} \", exception);\n      throw new IOExceptionHandler(ProfileServiceImpl.class, UserMessage.CUSTOM_IO_EXCEPTION);\n    }"
                  }
                ]
              },
              {
                "pathId": "9746-9771-9770-9773-9781-9777",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 184,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 187,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user); /* <=== com.crapi.entity.User */ \n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 187,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user); /* <=== com.crapi.entity.VehicleDetails */ \n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 188,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE); /* <=== com.crapi.entity.VehicleDetails */ \n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 189,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle); /* <=== com.crapi.entity.VehicleDetails */ \n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }\n    return new CRAPIResponse(UserMessage.VEHICLE_ALREADY_CREATED, 403);"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(checkVehicle)",
                    "lineNumber": 189,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }\n    return new CRAPIResponse(UserMessage.VEHICLE_ALREADY_CREATED, 403);"
                  }
                ]
              },
              {
                "pathId": "9024-9023-9067-8795-8794-8803-8799-8798-8806-8823-8826-8830-8840-8836",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 302,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <=== com.crapi.entity.User */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 302,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 293,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param request request getting jwt token for user from request header\n   * @return User object from token throw entity not found if user not found.\n   */\n  @Transactional\n  @Override\n  public User getUserFromToken(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromToken(request)",
                    "lineNumber": 231,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromToken */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 231,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 233,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  },
                  {
                    "sample": "changeEmailRepository.findByUser(user)",
                    "lineNumber": 233,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.repository.ChangeEmailRepository.findByUser */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 233,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.entity.ChangeEmailRequest */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 234,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) { /* <=== com.crapi.entity.ChangeEmailRequest */ \n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 241,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {\n      // updating the existing changeEmail data for user\n      changeEmailRequest.setEmailToken(token); /* <=== com.crapi.entity.ChangeEmailRequest */ \n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest);"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 242,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {\n      // updating the existing changeEmail data for user\n      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email()); /* <=== com.crapi.entity.ChangeEmailRequest */ \n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest);\n    smtpMailServer.sendMail("
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 243,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {\n      // updating the existing changeEmail data for user\n      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email()); /* <=== com.crapi.entity.ChangeEmailRequest */ \n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest);\n    smtpMailServer.sendMail(\n        changeEmailForm.getNew_email(),"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 246,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest); /* <=== com.crapi.entity.ChangeEmailRequest */ \n    smtpMailServer.sendMail(\n        changeEmailForm.getNew_email(),\n        MailBody.changeMailBody(changeEmailForm),\n        \"crAPI: Change Email Token\");\n    return new CRAPIResponse("
                  },
                  {
                    "sample": "changeEmailRepository.save(changeEmailRequest)",
                    "lineNumber": 246,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest); /* <=== com.crapi.repository.ChangeEmailRepository.save */ \n    smtpMailServer.sendMail(\n        changeEmailForm.getNew_email(),\n        MailBody.changeMailBody(changeEmailForm),\n        \"crAPI: Change Email Token\");\n    return new CRAPIResponse("
                  }
                ]
              },
              {
                "pathId": "9024-9023-9067-8887-8886-8897-8909-8913-8919-8915",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 302,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <=== com.crapi.entity.User */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 302,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 293,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param request request getting jwt token for user from request header\n   * @return User object from token throw entity not found if user not found.\n   */\n  @Transactional\n  @Override\n  public User getUserFromToken(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromToken(request)",
                    "lineNumber": 269,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public CRAPIResponse verifyEmailToken(\n      HttpServletRequest request, ChangeEmailForm changeEmailForm) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromToken */ \n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 269,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public CRAPIResponse verifyEmailToken(\n      HttpServletRequest request, ChangeEmailForm changeEmailForm) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 271,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) { /* <=== com.crapi.entity.User */ \n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");\n          userRepository.save(user);\n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 273,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail()); /* <=== com.crapi.entity.User */ \n          user.setJwtToken(\"\");\n          userRepository.save(user);\n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 274,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\"); /* <=== com.crapi.entity.User */ \n          userRepository.save(user);\n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);\n        }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 275,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");\n          userRepository.save(user); /* <=== com.crapi.entity.User */ \n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);\n        }\n      } else {"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 275,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");\n          userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);\n        }\n      } else {"
                  }
                ]
              },
              {
                "pathId": "6789-6784-6783-6792-6801-6797-6796-6804-7067-7072-7080-7087-7093-21895-6804-6839-6863-6870-6868-6867-6882-6617-6622-6630",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 3, max = 4)\n  private String otp;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.OtpForm' class */ \n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email;\n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 103,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 103,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 103,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 104,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 105,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 105,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 105,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.Otp */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 106,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 174,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) { /* <=== com.crapi.entity.Otp */ \n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 175,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString()) /* <=== com.crapi.entity.Otp */ \n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 176,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp()) /* <=== com.crapi.entity.Otp */ \n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;\n    }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 177,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) { /* <=== com.crapi.entity.Otp */ \n        return true;\n      }\n      return false;\n    }\n    throw new EntityNotFoundException(Otp.class, \"OTP Details Not Found\", otpForm.getEmail());"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 106,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 111,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) { /* <=== com.crapi.entity.Otp */ \n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 115,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) { /* <=== com.crapi.entity.Otp */ \n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 116,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp.getCount() + 1",
                    "lineNumber": 116,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <===  */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 116,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 118,
                    "columnNumber": 23,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp); /* <=== com.crapi.entity.Otp */ \n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 58,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   *\n   * @param {Otp} otp\n   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) { /* <===  */ \n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 60,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) {\n    try {\n      otp.setStatus(EStatus.INACTIVE.toString()); /* <=== com.crapi.entity.Otp */ \n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {\n      logger.error(\"Fail to invalidate otp -> Message: {}\", e);\n      return false;"
                  },
                  {
                    "sample": "otpRepository.save(otp)",
                    "lineNumber": 61,
                    "columnNumber": 21,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) {\n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp); /* <=== com.crapi.repository.OtpRepository.save */ \n      return true;\n    } catch (Exception e) {\n      logger.error(\"Fail to invalidate otp -> Message: {}\", e);\n      return false;\n    }"
                  }
                ]
              },
              {
                "pathId": "6690-6699-21890-12059-6653-6674-6669-6668-6677-6686-6682-6681-6689-7067-7072-7080-7087-7093-21895-6689-6726-6724-6723-6737",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 3, max = 4)\n  private String otp;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.OtpForm' class */ \n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email;\n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 82,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "this.getDummyOtpForm()",
                    "lineNumber": 83,
                    "columnNumber": 28,
                    "fileName": "/app/code/services/identity/src/test/java/com/crapi/service/Impl/OtpServiceImplTest.java",
                    "excerpt": "  }\n\n  @Test(expected = EntityNotFoundException.class)\n  public void validateOtpThrowsExceptionWhenUserNotFound() {\n    Mockito.when(userRepository.findByEmail(Mockito.anyString())).thenReturn(null);\n    otpService.validateOtp(getDummyOtpForm()); /* <=== com.crapi.service.Impl.OtpServiceImplTest.getDummyOtpForm */ \n  }\n\n  @Test\n  public void validateOtpSuccess() {\n    Otp otp = getDummyOtp();"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 79,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 79,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 79,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 80,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 81,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 81,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 81,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.Otp */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 82,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 174,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) { /* <=== com.crapi.entity.Otp */ \n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 175,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString()) /* <=== com.crapi.entity.Otp */ \n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 176,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp()) /* <=== com.crapi.entity.Otp */ \n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;\n    }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 177,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) { /* <=== com.crapi.entity.Otp */ \n        return true;\n      }\n      return false;\n    }\n    throw new EntityNotFoundException(Otp.class, \"OTP Details Not Found\", otpForm.getEmail());"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 82,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 88,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);\n      return validateOTPResponse;\n    }"
                  },
                  {
                    "sample": "otp.getCount() + 1",
                    "lineNumber": 88,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1); /* <===  */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);\n      return validateOTPResponse;\n    }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 88,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);\n      return validateOTPResponse;\n    }"
                  },
                  {
                    "sample": "otpRepository.save(otp)",
                    "lineNumber": 91,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp); /* <=== com.crapi.repository.OtpRepository.save */ \n      return validateOTPResponse;\n    }\n    throw new EntityNotFoundException(User.class, \"userEmail\", otpForm.getEmail());\n  }\n"
                  }
                ]
              },
              {
                "pathId": "6690-6699-6698-6695-6694-6693-6704-6700",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 3, max = 4)\n  private String otp;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.OtpForm' class */ \n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email;\n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 82,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "getPassword()",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm.getPassword */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "this.encoder",
                    "lineNumber": 83,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <===  */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "encode(otpForm.getPassword())",
                    "lineNumber": 83,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== org.springframework.security.crypto.password.PasswordEncoder.encode */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 83,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.entity.User */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 84,
                    "columnNumber": 29,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user); /* <=== com.crapi.entity.User */ \n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 84,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  }
                ]
              },
              {
                "pathId": "8462-8461-8531-8540-8536-8535-8543-8547-8553-8549",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 30,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "  @Size(min = 3, max = 100)\n  private String email;\n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.LoginForm' class */ \n\n  private String number;\n}"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 110,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "            authenticationManager.authenticate(\n                new UsernamePasswordAuthenticationToken(\n                    loginForm.getEmail(), loginForm.getPassword()));\n        String jwt = jwtProvider.generateJwtToken(user);\n        if (jwt != null) {\n          updateUserToken(jwt, loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n          jwtResponse.setToken(jwt);\n        } else {\n          jwtResponse.setMessage(UserMessage.INVALID_CREDENTIALS);\n        }\n      }"
                  },
                  {
                    "sample": "getEmail()",
                    "lineNumber": 110,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "            authenticationManager.authenticate(\n                new UsernamePasswordAuthenticationToken(\n                    loginForm.getEmail(), loginForm.getPassword()));\n        String jwt = jwtProvider.generateJwtToken(user);\n        if (jwt != null) {\n          updateUserToken(jwt, loginForm.getEmail()); /* <=== com.crapi.model.LoginForm.getEmail */ \n          jwtResponse.setToken(jwt);\n        } else {\n          jwtResponse.setMessage(UserMessage.INVALID_CREDENTIALS);\n        }\n      }"
                  },
                  {
                    "sample": "String email",
                    "lineNumber": 142,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param jwt update token in database\n   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) { /* <===  */ \n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }"
                  },
                  {
                    "sample": "email",
                    "lineNumber": 143,
                    "columnNumber": 44,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== java.lang.String */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  },
                  {
                    "sample": "userRepository.findByEmail(email)",
                    "lineNumber": 143,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 143,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 144,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 145,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt); /* <=== com.crapi.entity.User */ \n      userRepository.saveAndFlush(user);\n    }\n  }\n\n  /**"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 146,
                    "columnNumber": 35,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user); /* <=== com.crapi.entity.User */ \n    }\n  }\n\n  /**\n   * @param loginForm Contains user email, password and number"
                  },
                  {
                    "sample": "userRepository.saveAndFlush(user)",
                    "lineNumber": 146,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user); /* <=== com.crapi.repository.UserRepository.saveAndFlush */ \n    }\n  }\n\n  /**\n   * @param loginForm Contains user email, password and number"
                  }
                ]
              },
              {
                "pathId": "6789-6784-6783-6792-6801-6797-6796-6804-7067-7072-7080-7087-7093-21895-6804-6839-6863-6870-6868-6867-6882-6617-6622-6634-21889-6882-6900",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 3, max = 4)\n  private String otp;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.OtpForm' class */ \n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email;\n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 103,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 103,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 103,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 104,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 105,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 105,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 105,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.Otp */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 106,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 174,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) { /* <=== com.crapi.entity.Otp */ \n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 175,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString()) /* <=== com.crapi.entity.Otp */ \n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 176,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp()) /* <=== com.crapi.entity.Otp */ \n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;\n    }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 177,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) { /* <=== com.crapi.entity.Otp */ \n        return true;\n      }\n      return false;\n    }\n    throw new EntityNotFoundException(Otp.class, \"OTP Details Not Found\", otpForm.getEmail());"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 106,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 111,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) { /* <=== com.crapi.entity.Otp */ \n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 115,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) { /* <=== com.crapi.entity.Otp */ \n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 116,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp.getCount() + 1",
                    "lineNumber": 116,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <===  */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 116,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 118,
                    "columnNumber": 23,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp); /* <=== com.crapi.entity.Otp */ \n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 58,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   *\n   * @param {Otp} otp\n   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) { /* <===  */ \n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 60,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) {\n    try {\n      otp.setStatus(EStatus.INACTIVE.toString()); /* <=== com.crapi.entity.Otp */ \n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {\n      logger.error(\"Fail to invalidate otp -> Message: {}\", e);\n      return false;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 61,
                    "columnNumber": 40,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) {\n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp); /* <=== com.crapi.entity.Otp */ \n      return true;\n    } catch (Exception e) {\n      logger.error(\"Fail to invalidate otp -> Message: {}\", e);\n      return false;\n    }"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 58,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   *\n   * @param {Otp} otp\n   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) { /* <===  */ \n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 118,
                    "columnNumber": 23,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp); /* <=== com.crapi.entity.Otp */ \n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);"
                  },
                  {
                    "sample": "otpRepository.save(otp)",
                    "lineNumber": 123,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp); /* <=== com.crapi.repository.OtpRepository.save */ \n      return validateOTPResponse;\n    }\n    throw new EntityNotFoundException(User.class, \"userEmail\", otpForm.getEmail());\n  }\n"
                  }
                ]
              },
              {
                "pathId": "6805-6814-6813-6810-6809-6808-6819-6815",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 3, max = 4)\n  private String otp;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.OtpForm' class */ \n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email;\n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 106,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 107,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "getPassword()",
                    "lineNumber": 107,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm.getPassword */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "this.encoder",
                    "lineNumber": 107,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <===  */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "encode(otpForm.getPassword())",
                    "lineNumber": 107,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== org.springframework.security.crypto.password.PasswordEncoder.encode */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 107,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.entity.User */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 108,
                    "columnNumber": 29,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user); /* <=== com.crapi.entity.User */ \n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 108,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);"
                  }
                ]
              },
              {
                "pathId": "7234-4118-4123-4121-21724-7233-7235",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 77,
                    "columnNumber": 29,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);\n        userDetails.setPicture(file.getBytes());\n        userDetails.setUser(user); /* <=== com.crapi.entity.User */ \n      }\n      userDetailsRepository.save(userDetails);\n      return userDetails;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload image -> Message: %d\", exception);"
                  },
                  {
                    "sample": "User user",
                    "lineNumber": 86,
                    "columnNumber": 23,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserDetails.java",
                    "excerpt": "\n  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) { /* <===  */ \n    this.user = user;\n  }\n\n  @JsonProperty(\"picture\")\n  public String getPhotoBase64() {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 87,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserDetails.java",
                    "excerpt": "  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) {\n    this.user = user; /* <=== com.crapi.entity.User */ \n  }\n\n  @JsonProperty(\"picture\")\n  public String getPhotoBase64() {\n    // just assuming it is a jpeg. you would need to cater for different media types"
                  },
                  {
                    "sample": "this.user",
                    "lineNumber": 87,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserDetails.java",
                    "excerpt": "  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) {\n    this.user = user; /* <===  */ \n  }\n\n  @JsonProperty(\"picture\")\n  public String getPhotoBase64() {\n    // just assuming it is a jpeg. you would need to cater for different media types"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 86,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserDetails.java",
                    "excerpt": "\n  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) { /* <===  */ \n    this.user = user;\n  }\n\n  @JsonProperty(\"picture\")\n  public String getPhotoBase64() {"
                  },
                  {
                    "sample": "userDetails",
                    "lineNumber": 77,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);\n        userDetails.setPicture(file.getBytes());\n        userDetails.setUser(user); /* <=== com.crapi.entity.UserDetails */ \n      }\n      userDetailsRepository.save(userDetails);\n      return userDetails;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload image -> Message: %d\", exception);"
                  },
                  {
                    "sample": "userDetailsRepository.save(userDetails)",
                    "lineNumber": 79,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);\n        userDetails.setPicture(file.getBytes());\n        userDetails.setUser(user);\n      }\n      userDetailsRepository.save(userDetails); /* <=== com.crapi.repository.UserDetailsRepository.save */ \n      return userDetails;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload image -> Message: %d\", exception);\n      throw new IOExceptionHandler(ProfileServiceImpl.class, UserMessage.CUSTOM_IO_EXCEPTION);\n    }"
                  }
                ]
              },
              {
                "pathId": "8084-8087-8107-8103",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 90,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    if (userRepository.existsByEmail(signUpRequest.getEmail())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user = /* <=== com.crapi.entity.User */ \n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 90,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    if (userRepository.existsByEmail(signUpRequest.getEmail())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user = /* <=== com.crapi.entity.User */ \n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 96,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 96,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  }
                ]
              },
              {
                "pathId": "7421-7434-7429-7428-7437-7441-3602-21692-7441-7454-3744-3746-3752-7453-7446-3754-3759-3757-21693-7445-7455",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 146,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 147,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 147,
                    "columnNumber": 20,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 147,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.ProfileVideo */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 148,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) { /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 149,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName()); /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo);"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 64,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public String getVideo_name() {\n    return video_name;\n  }\n\n  public void setVideo_name(String video_name) { /* <===  */ \n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() {\n    return conversion_params;"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 64,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public String getVideo_name() {\n    return video_name;\n  }\n\n  public void setVideo_name(String video_name) { /* <===  */ \n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() {\n    return conversion_params;"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 149,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName()); /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo);"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 153,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params())); /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE + user.getEmail(), 404);\n  }"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 68,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public void setVideo_name(String video_name) {\n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() { /* <===  */ \n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params;"
                  },
                  {
                    "sample": "return conversion_params;",
                    "lineNumber": 69,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public void setVideo_name(String video_name) {\n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() {\n    return conversion_params; /* <===  */ \n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params;\n  }"
                  },
                  {
                    "sample": "java.lang.String",
                    "lineNumber": 68,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public void setVideo_name(String video_name) {\n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() { /* <===  */ \n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params;"
                  },
                  {
                    "sample": "profileVideo.getConversion_params()",
                    "lineNumber": 153,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params())); /* <=== com.crapi.entity.ProfileVideo.getConversion_params */ \n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE + user.getEmail(), 404);\n  }"
                  },
                  {
                    "sample": "videoForm.getConversion_params() != null ? videoForm.getConversion_params() : profileVideo.getConversion_params()",
                    "lineNumber": 151,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null /* <===  */ \n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    }"
                  },
                  {
                    "sample": "String conversion_params",
                    "lineNumber": 72,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public String getConversion_params() {\n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) { /* <===  */ \n    this.conversion_params = conversion_params;\n  }\n\n  @JsonIgnore\n  public byte[] getVideo() {"
                  },
                  {
                    "sample": "conversion_params",
                    "lineNumber": 73,
                    "columnNumber": 30,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public String getConversion_params() {\n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params; /* <=== java.lang.String */ \n  }\n\n  @JsonIgnore\n  public byte[] getVideo() {\n    return video;"
                  },
                  {
                    "sample": "this.conversion_params",
                    "lineNumber": 73,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public String getConversion_params() {\n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params; /* <===  */ \n  }\n\n  @JsonIgnore\n  public byte[] getVideo() {\n    return video;"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 72,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public String getConversion_params() {\n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) { /* <===  */ \n    this.conversion_params = conversion_params;\n  }\n\n  @JsonIgnore\n  public byte[] getVideo() {"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 150,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params( /* <=== com.crapi.entity.ProfileVideo */ \n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo);\n      return profileVideo;"
                  },
                  {
                    "sample": "profileVideoRepository.save(profileVideo)",
                    "lineNumber": 154,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo); /* <=== com.crapi.repository.ProfileVideoRepository.save */ \n      return profileVideo;\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE + user.getEmail(), 404);\n  }\n"
                  }
                ]
              },
              {
                "pathId": "267-270-285-281",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      String name, String email, String password, String number, ERole role) {\n    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role); /* <=== com.crapi.entity.User */ \n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      String name, String email, String password, String number, ERole role) {\n    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role); /* <=== com.crapi.entity.User */ \n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 107,
                    "columnNumber": 34,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 107,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  }
                ]
              },
              {
                "pathId": "9401-9409-9414-9413-9416-9424-9420",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 67,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public boolean addVehicleDetails(VehicleForm vehicleForm, HttpServletRequest request) {\n    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 68,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) { /* <=== com.crapi.entity.User */ \n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 69,
                    "columnNumber": 35,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user); /* <=== com.crapi.entity.User */ \n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 69,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user); /* <=== com.crapi.entity.VehicleDetails */ \n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 70,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE); /* <=== com.crapi.entity.VehicleDetails */ \n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }\n      }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 71,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.entity.VehicleDetails */ \n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }\n      }\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(vehicleDetails)",
                    "lineNumber": 71,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }\n      }\n    } catch (Exception e) {"
                  }
                ]
              },
              {
                "pathId": "8580-8579-8576-8575-8574-8585-8581",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 30,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "  @Size(min = 3, max = 100)\n  private String email;\n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.LoginForm' class */ \n\n  private String number;\n}"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 160,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <=== com.crapi.model.LoginForm */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "getPassword()",
                    "lineNumber": 160,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <=== com.crapi.model.LoginForm.getPassword */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "this.encoder",
                    "lineNumber": 160,
                    "columnNumber": 24,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <===  */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "encode(loginForm.getPassword())",
                    "lineNumber": 160,
                    "columnNumber": 24,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <=== org.springframework.security.crypto.password.PasswordEncoder.encode */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 160,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <=== com.crapi.entity.User */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 161,
                    "columnNumber": 35,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword()));\n      userRepository.saveAndFlush(user); /* <=== com.crapi.entity.User */ \n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }\n"
                  },
                  {
                    "sample": "userRepository.saveAndFlush(user)",
                    "lineNumber": 161,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword()));\n      userRepository.saveAndFlush(user); /* <=== com.crapi.repository.UserRepository.saveAndFlush */ \n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }\n"
                  }
                ]
              },
              {
                "pathId": "267-270-285-281-280-291-310-309-315-311",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      String name, String email, String password, String number, ERole role) {\n    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role); /* <=== com.crapi.entity.User */ \n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      String name, String email, String password, String number, ERole role) {\n    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role); /* <=== com.crapi.entity.User */ \n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 107,
                    "columnNumber": 34,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 107,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 107,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 108,
                    "columnNumber": 53,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user); /* <=== com.crapi.entity.User */ \n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 112,
                    "columnNumber": 33,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user); /* <=== com.crapi.entity.User */ \n        vehicleDetailsRepository.save(vehicleDetails);\n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 112,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user); /* <=== com.crapi.entity.VehicleDetails */ \n        vehicleDetailsRepository.save(vehicleDetails);\n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 113,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.entity.VehicleDetails */ \n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(vehicleDetails)",
                    "lineNumber": 113,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;\n    } catch (Exception e) {"
                  }
                ]
              }
            ]
          },
          {
            "sinkType": "storages",
            "id": "Storages.SpringFramework.Jdbc.Read",
            "name": "Java Database Connector(Read)",
            "category": "",
            "domains": ["oracle.com"],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "${DB_NAME}",
              "dbVendor": "postgresql",
              "dbLocation": "${DB_HOST}:${DB_PORT}",
              "dbOperation": "Read"
            },
            "paths": [
              {
                "pathId": "9024-9023-9067-8795-8794-8803-8799",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 302,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <=== com.crapi.entity.User */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 302,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 293,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param request request getting jwt token for user from request header\n   * @return User object from token throw entity not found if user not found.\n   */\n  @Transactional\n  @Override\n  public User getUserFromToken(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromToken(request)",
                    "lineNumber": 231,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromToken */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 231,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 233,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  },
                  {
                    "sample": "changeEmailRepository.findByUser(user)",
                    "lineNumber": 233,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.repository.ChangeEmailRepository.findByUser */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  }
                ]
              },
              {
                "pathId": "6958-6953",
                "path": [
                  {
                    "sample": "forgetPassword",
                    "lineNumber": 141,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.model.ForgetPassword */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "findByEmail(forgetPassword.getEmail())",
                    "lineNumber": 141,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  }
                ]
              },
              {
                "pathId": "6690-6699-21890-12059-6653-6674-6669",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 3, max = 4)\n  private String otp;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.OtpForm' class */ \n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email;\n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 82,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "this.getDummyOtpForm()",
                    "lineNumber": 83,
                    "columnNumber": 28,
                    "fileName": "/app/code/services/identity/src/test/java/com/crapi/service/Impl/OtpServiceImplTest.java",
                    "excerpt": "  }\n\n  @Test(expected = EntityNotFoundException.class)\n  public void validateOtpThrowsExceptionWhenUserNotFound() {\n    Mockito.when(userRepository.findByEmail(Mockito.anyString())).thenReturn(null);\n    otpService.validateOtp(getDummyOtpForm()); /* <=== com.crapi.service.Impl.OtpServiceImplTest.getDummyOtpForm */ \n  }\n\n  @Test\n  public void validateOtpSuccess() {\n    Otp otp = getDummyOtp();"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 79,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 79,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  }
                ]
              },
              {
                "pathId": "8462-8461-8531-8540-8536",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 30,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "  @Size(min = 3, max = 100)\n  private String email;\n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.LoginForm' class */ \n\n  private String number;\n}"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 110,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "            authenticationManager.authenticate(\n                new UsernamePasswordAuthenticationToken(\n                    loginForm.getEmail(), loginForm.getPassword()));\n        String jwt = jwtProvider.generateJwtToken(user);\n        if (jwt != null) {\n          updateUserToken(jwt, loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n          jwtResponse.setToken(jwt);\n        } else {\n          jwtResponse.setMessage(UserMessage.INVALID_CREDENTIALS);\n        }\n      }"
                  },
                  {
                    "sample": "getEmail()",
                    "lineNumber": 110,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "            authenticationManager.authenticate(\n                new UsernamePasswordAuthenticationToken(\n                    loginForm.getEmail(), loginForm.getPassword()));\n        String jwt = jwtProvider.generateJwtToken(user);\n        if (jwt != null) {\n          updateUserToken(jwt, loginForm.getEmail()); /* <=== com.crapi.model.LoginForm.getEmail */ \n          jwtResponse.setToken(jwt);\n        } else {\n          jwtResponse.setMessage(UserMessage.INVALID_CREDENTIALS);\n        }\n      }"
                  },
                  {
                    "sample": "String email",
                    "lineNumber": 142,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param jwt update token in database\n   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) { /* <===  */ \n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }"
                  },
                  {
                    "sample": "email",
                    "lineNumber": 143,
                    "columnNumber": 44,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== java.lang.String */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  },
                  {
                    "sample": "userRepository.findByEmail(email)",
                    "lineNumber": 143,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  }
                ]
              },
              {
                "pathId": "7369-7382-7377",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 126,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public ProfileVideo getProfileVideo(Long videoId, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      if (profileVideo.getId() == videoId) {\n        return profileVideo;\n      }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 127,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo getProfileVideo(Long videoId, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    if (profileVideo != null) {\n      if (profileVideo.getId() == videoId) {\n        return profileVideo;\n      }\n    }"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 127,
                    "columnNumber": 20,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo getProfileVideo(Long videoId, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n    if (profileVideo != null) {\n      if (profileVideo.getId() == videoId) {\n        return profileVideo;\n      }\n    }"
                  }
                ]
              },
              {
                "pathId": "9830-9843-9838",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 209,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public CRAPIResponse sendVehicleDetails(HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    userDetails = userDetailsRepository.findByUser_id(user.getId());\n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 210,
                    "columnNumber": 55,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request);\n    userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;\n        break;"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 210,
                    "columnNumber": 19,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request);\n    userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.UserDetailsRepository.findByUser_id */ \n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;\n        break;"
                  }
                ]
              },
              {
                "pathId": "7189-7202-7197",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 69,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public UserDetails uploadProfilePicture(MultipartFile file, HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    try {\n      user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      if (userDetails != null && ProfileValidator.validateFile(file) != null) {\n        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 70,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  public UserDetails uploadProfilePicture(MultipartFile file, HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    try {\n      user = userService.getUserFromToken(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      if (userDetails != null && ProfileValidator.validateFile(file) != null) {\n        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 70,
                    "columnNumber": 21,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  public UserDetails uploadProfilePicture(MultipartFile file, HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    try {\n      user = userService.getUserFromToken(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.UserDetailsRepository.findByUser_id */ \n      if (userDetails != null && ProfileValidator.validateFile(file) != null) {\n        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);"
                  }
                ]
              },
              {
                "pathId": "9564-9572-9582-9577",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 121,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Override\n  public List<VehicleDetails> getVehicleDetails(HttpServletRequest request) {\n    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n      if (user != null) {\n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId());\n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 122,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public List<VehicleDetails> getVehicleDetails(HttpServletRequest request) {\n    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request);\n      if (user != null) { /* <=== com.crapi.entity.User */ \n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId());\n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);\n          }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 123,
                    "columnNumber": 73,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request);\n      if (user != null) {\n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId()); /* <=== com.crapi.entity.User */ \n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);\n          }\n          return vehicleDetailsList;"
                  },
                  {
                    "sample": "findAllByOwner_id(user.getId())",
                    "lineNumber": 123,
                    "columnNumber": 30,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request);\n      if (user != null) {\n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId()); /* <=== com.crapi.repository.VehicleDetailsRepository.findAllByOwner_id */ \n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);\n          }\n          return vehicleDetailsList;"
                  }
                ]
              },
              {
                "pathId": "6690-6699-21890-12059-6653-6674-6669-6668-6677-6686-6682",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 3, max = 4)\n  private String otp;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.OtpForm' class */ \n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email;\n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 82,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "this.getDummyOtpForm()",
                    "lineNumber": 83,
                    "columnNumber": 28,
                    "fileName": "/app/code/services/identity/src/test/java/com/crapi/service/Impl/OtpServiceImplTest.java",
                    "excerpt": "  }\n\n  @Test(expected = EntityNotFoundException.class)\n  public void validateOtpThrowsExceptionWhenUserNotFound() {\n    Mockito.when(userRepository.findByEmail(Mockito.anyString())).thenReturn(null);\n    otpService.validateOtp(getDummyOtpForm()); /* <=== com.crapi.service.Impl.OtpServiceImplTest.getDummyOtpForm */ \n  }\n\n  @Test\n  public void validateOtpSuccess() {\n    Otp otp = getDummyOtp();"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 79,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 79,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 79,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 80,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 81,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 81,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  }
                ]
              },
              {
                "pathId": "6789-6784-6783-6792-6801-6797",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 3, max = 4)\n  private String otp;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.OtpForm' class */ \n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email;\n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 103,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 103,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 103,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 104,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 105,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 105,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  }
                ]
              },
              {
                "pathId": "9120-9119-9162-8630-8629-8639-8647-8642",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 324,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <=== com.crapi.entity.User */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 324,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 314,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    }\n  }\n\n  @Transactional\n  @Override\n  public User getUserFromTokenWithoutValidation(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromTokenWithoutValidation(request)",
                    "lineNumber": 181,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromTokenWithoutValidation */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 181,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.entity.User */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 182,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 183,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),\n              user.getEmail(),"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 183,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),\n              user.getEmail(),"
                  }
                ]
              },
              {
                "pathId": "9120-9119-9162-8630-8629-8639-8634",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 324,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <=== com.crapi.entity.User */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 324,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 314,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    }\n  }\n\n  @Transactional\n  @Override\n  public User getUserFromTokenWithoutValidation(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromTokenWithoutValidation(request)",
                    "lineNumber": 181,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromTokenWithoutValidation */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 181,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.entity.User */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 182,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 182,
                    "columnNumber": 21,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.UserDetailsRepository.findByUser_id */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),"
                  }
                ]
              },
              {
                "pathId": "8354-8367-8384-8401-8416-8411",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 30,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "  @Size(min = 3, max = 100)\n  private String email;\n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.LoginForm' class */ \n\n  private String number;\n}"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 84,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public JwtResponse authenticateUserLogin(LoginForm loginForm) throws BadCredentialsException {\n    JwtResponse jwtResponse = new JwtResponse();\n    Authentication authentication = null;\n    User user;\n    if (loginForm.getEmail() == null) { /* <=== com.crapi.model.LoginForm */ \n      jwtResponse.setMessage(UserMessage.EMAIL_NOT_PROVIDED);\n    } else {\n      if (loginForm.getEmail().contains(\"jndi:\")) {\n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 87,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    Authentication authentication = null;\n    User user;\n    if (loginForm.getEmail() == null) {\n      jwtResponse.setMessage(UserMessage.EMAIL_NOT_PROVIDED);\n    } else {\n      if (loginForm.getEmail().contains(\"jndi:\")) { /* <=== com.crapi.model.LoginForm */ \n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");\n          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(),"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 92,
                    "columnNumber": 15,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (loginForm.getEmail().contains(\"jndi:\")) {\n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");\n          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(), /* <=== com.crapi.model.LoginForm */ \n              LOG4J_LOGGER.getClass().getName(),\n              logger.getClass().getName());\n          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());\n        } else {\n          logger.info(\"Log4j is disabled\");"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 95,
                    "columnNumber": 70,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(),\n              LOG4J_LOGGER.getClass().getName(),\n              logger.getClass().getName());\n          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n        } else {\n          logger.info(\"Log4j is disabled\");\n        }\n      }\n      user = userRepository.findByEmail(loginForm.getEmail());"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 100,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());\n        } else {\n          logger.info(\"Log4j is disabled\");\n        }\n      }\n      user = userRepository.findByEmail(loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n      if (user == null) {\n        jwtResponse.setMessage(UserMessage.EMAIL_NOT_REGISTERED);\n      } else {\n        authentication =\n            authenticationManager.authenticate("
                  },
                  {
                    "sample": "findByEmail(loginForm.getEmail())",
                    "lineNumber": 100,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());\n        } else {\n          logger.info(\"Log4j is disabled\");\n        }\n      }\n      user = userRepository.findByEmail(loginForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      if (user == null) {\n        jwtResponse.setMessage(UserMessage.EMAIL_NOT_REGISTERED);\n      } else {\n        authentication =\n            authenticationManager.authenticate("
                  }
                ]
              },
              {
                "pathId": "6789-6784",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 3, max = 4)\n  private String otp;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String password; /* <=== 'password' is a member of 'com.crapi.model.OtpForm' class */ \n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email;\n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 103,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 103,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  }
                ]
              },
              {
                "pathId": "7284-7297-7292",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 99,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  public ProfileVideo uploadProfileVideo(MultipartFile file, HttpServletRequest request) {\n    ProfileVideo profileVideo;\n    String conversionParam = \"-v codec h264\";\n    User user;\n    try {\n      user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 100,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    String conversionParam = \"-v codec h264\";\n    User user;\n    try {\n      user = userService.getUserFromToken(request);\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 100,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    String conversionParam = \"-v codec h264\";\n    User user;\n    try {\n      user = userService.getUserFromToken(request);\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {"
                  }
                ]
              },
              {
                "pathId": "6958-6953-6952-6961-6980-6976",
                "path": [
                  {
                    "sample": "forgetPassword",
                    "lineNumber": 141,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.model.ForgetPassword */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "findByEmail(forgetPassword.getEmail())",
                    "lineNumber": 141,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 141,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 142,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 147,
                    "columnNumber": 58,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n        if (checkOtpEnteryForUser != null) {\n          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 147,
                    "columnNumber": 33,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n        if (checkOtpEnteryForUser != null) {\n          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {"
                  }
                ]
              },
              {
                "pathId": "7421-7434-7429",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 146,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 147,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 147,
                    "columnNumber": 20,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId": "Data.Sensitive.ContactData.Address",
        "sinks": [
          {
            "sinkType": "storages",
            "id": "Storages.SpringFramework.Jdbc.Write",
            "name": "Java Database Connector(Write)",
            "category": "",
            "domains": ["oracle.com"],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "${DB_NAME}",
              "dbVendor": "postgresql",
              "dbLocation": "${DB_HOST}:${DB_PORT}",
              "dbOperation": "Write"
            },
            "paths": [
              {
                "pathId": "9505-9508-9512-9520-9526-9522",
                "path": [
                  {
                    "sample": "java.lang.String pincode",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/VehicleDetails.java",
                    "excerpt": "  private long id;\n\n  @Column(name = \"uuid\", updatable = false, nullable = false, unique = true)\n  private UUID uuid = UUID.randomUUID();\n\n  private String pincode; /* <=== 'pincode' is a member of 'com.crapi.entity.VehicleDetails' class */ \n  private String vin;\n  private long year;\n  private EStatus status;\n\n  @OneToOne(cascade = CascadeType.ALL)"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 100,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    modelList = vehicleModelRepository.findAll();\n    vehicleLocations = getVehicleLocationList();\n    if (modelList != null && vehicleLocations != null) {\n      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin); /* <=== com.crapi.entity.VehicleDetails */ \n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations);\n      vehicleDetailsRepository.save(vehicleDetails);\n      return vehicleDetails;\n    }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 100,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    modelList = vehicleModelRepository.findAll();\n    vehicleLocations = getVehicleLocationList();\n    if (modelList != null && vehicleLocations != null) {\n      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin); /* <=== com.crapi.entity.VehicleDetails */ \n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations);\n      vehicleDetailsRepository.save(vehicleDetails);\n      return vehicleDetails;\n    }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 101,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    vehicleLocations = getVehicleLocationList();\n    if (modelList != null && vehicleLocations != null) {\n      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size()))); /* <=== com.crapi.entity.VehicleDetails */ \n      vehicleDetails.setVehicleLocation(vehicleLocations);\n      vehicleDetailsRepository.save(vehicleDetails);\n      return vehicleDetails;\n    }\n    throw new CRAPIExceptionHandler("
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 102,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    if (modelList != null && vehicleLocations != null) {\n      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations); /* <=== com.crapi.entity.VehicleDetails */ \n      vehicleDetailsRepository.save(vehicleDetails);\n      return vehicleDetails;\n    }\n    throw new CRAPIExceptionHandler(\n        UserMessage.CUSTOM_IO_EXCEPTION,"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 103,
                    "columnNumber": 37,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations);\n      vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.entity.VehicleDetails */ \n      return vehicleDetails;\n    }\n    throw new CRAPIExceptionHandler(\n        UserMessage.CUSTOM_IO_EXCEPTION,\n        UserMessage.CUSTOM_IO_EXCEPTION_UNABLE_TO_CREATE_VEHICLE,"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(vehicleDetails)",
                    "lineNumber": 103,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      vin = generateVIN.generateVIN();\n      pincode = generateVIN.generatePincode();\n      VehicleDetails vehicleDetails = new VehicleDetails(pincode, vin);\n      vehicleDetails.setModel(modelList.get(random.nextInt(modelList.size())));\n      vehicleDetails.setVehicleLocation(vehicleLocations);\n      vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n      return vehicleDetails;\n    }\n    throw new CRAPIExceptionHandler(\n        UserMessage.CUSTOM_IO_EXCEPTION,\n        UserMessage.CUSTOM_IO_EXCEPTION_UNABLE_TO_CREATE_VEHICLE,"
                  }
                ]
              },
              {
                "pathId": "9387-9382-9381-9391-9395-9413-9416-9424-9420",
                "path": [
                  {
                    "sample": "java.lang.String pincode",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/VehicleForm.java",
                    "excerpt": "@Data\npublic class VehicleForm {\n\n  @NotBlank\n  @Size(min = 4, max = 8)\n  private String pincode; /* <=== 'pincode' is a member of 'com.crapi.model.VehicleForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 20)\n  private String vin;\n}"
                  },
                  {
                    "sample": "vehicleForm",
                    "lineNumber": 64,
                    "columnNumber": 74,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public boolean addVehicleDetails(VehicleForm vehicleForm, HttpServletRequest request) {\n    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.model.VehicleForm */ \n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "findByVin(vehicleForm.getVin())",
                    "lineNumber": 64,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public boolean addVehicleDetails(VehicleForm vehicleForm, HttpServletRequest request) {\n    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.repository.VehicleDetailsRepository.findByVin */ \n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 64,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public boolean addVehicleDetails(VehicleForm vehicleForm, HttpServletRequest request) {\n    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.entity.VehicleDetails */ \n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 65,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public boolean addVehicleDetails(VehicleForm vehicleForm, HttpServletRequest request) {\n    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null /* <=== com.crapi.entity.VehicleDetails */ \n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 66,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Override\n  public boolean addVehicleDetails(VehicleForm vehicleForm, HttpServletRequest request) {\n    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) { /* <=== com.crapi.entity.VehicleDetails */ \n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 69,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user); /* <=== com.crapi.entity.VehicleDetails */ \n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 70,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE); /* <=== com.crapi.entity.VehicleDetails */ \n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }\n      }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 71,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.entity.VehicleDetails */ \n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }\n      }\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(vehicleDetails)",
                    "lineNumber": 71,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }\n      }\n    } catch (Exception e) {"
                  }
                ]
              },
              {
                "pathId": "9744-9739-9738-9755-9759-9765-9770-9773-9781-9777",
                "path": [
                  {
                    "sample": "java.lang.String pincode",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/VehicleForm.java",
                    "excerpt": "@Data\npublic class VehicleForm {\n\n  @NotBlank\n  @Size(min = 4, max = 8)\n  private String pincode; /* <=== 'pincode' is a member of 'com.crapi.model.VehicleForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 20)\n  private String vin;\n}"
                  },
                  {
                    "sample": "vehicleForm",
                    "lineNumber": 183,
                    "columnNumber": 55,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.model.VehicleForm */ \n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);"
                  },
                  {
                    "sample": "findByVin(vehicleForm.getVin())",
                    "lineNumber": 183,
                    "columnNumber": 20,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.repository.VehicleDetailsRepository.findByVin */ \n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 183,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.entity.VehicleDetails */ \n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 185,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) { /* <=== com.crapi.entity.VehicleDetails */ \n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 185,
                    "columnNumber": 33,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) { /* <=== com.crapi.entity.VehicleDetails */ \n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 186,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) { /* <=== com.crapi.entity.VehicleDetails */ \n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 187,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user); /* <=== com.crapi.entity.VehicleDetails */ \n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 188,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE); /* <=== com.crapi.entity.VehicleDetails */ \n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 189,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle); /* <=== com.crapi.entity.VehicleDetails */ \n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }\n    return new CRAPIResponse(UserMessage.VEHICLE_ALREADY_CREATED, 403);"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(checkVehicle)",
                    "lineNumber": 189,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }\n    return new CRAPIResponse(UserMessage.VEHICLE_ALREADY_CREATED, 403);"
                  }
                ]
              },
              {
                "pathId": "298-305-309-315-311",
                "path": [
                  {
                    "sample": "java.lang.String pincode",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/VehicleDetails.java",
                    "excerpt": "  private long id;\n\n  @Column(name = \"uuid\", updatable = false, nullable = false, unique = true)\n  private UUID uuid = UUID.randomUUID();\n\n  private String pincode; /* <=== 'pincode' is a member of 'com.crapi.entity.VehicleDetails' class */ \n  private String vin;\n  private long year;\n  private EStatus status;\n\n  @OneToOne(cascade = CascadeType.ALL)"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 110,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle(); /* <=== com.crapi.entity.VehicleDetails */ \n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails);\n        return true;\n      }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 111,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) { /* <=== com.crapi.entity.VehicleDetails */ \n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails);\n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 112,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user); /* <=== com.crapi.entity.VehicleDetails */ \n        vehicleDetailsRepository.save(vehicleDetails);\n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 113,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.entity.VehicleDetails */ \n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(vehicleDetails)",
                    "lineNumber": 113,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;\n    } catch (Exception e) {"
                  }
                ]
              }
            ]
          },
          {
            "sinkType": "storages",
            "id": "Storages.SpringFramework.Jdbc.Read",
            "name": "Java Database Connector(Read)",
            "category": "",
            "domains": ["oracle.com"],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "${DB_NAME}",
              "dbVendor": "postgresql",
              "dbLocation": "${DB_HOST}:${DB_PORT}",
              "dbOperation": "Read"
            },
            "paths": [
              {
                "pathId": "9744-9739",
                "path": [
                  {
                    "sample": "java.lang.String pincode",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/VehicleForm.java",
                    "excerpt": "@Data\npublic class VehicleForm {\n\n  @NotBlank\n  @Size(min = 4, max = 8)\n  private String pincode; /* <=== 'pincode' is a member of 'com.crapi.model.VehicleForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 20)\n  private String vin;\n}"
                  },
                  {
                    "sample": "vehicleForm",
                    "lineNumber": 183,
                    "columnNumber": 55,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.model.VehicleForm */ \n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);"
                  },
                  {
                    "sample": "findByVin(vehicleForm.getVin())",
                    "lineNumber": 183,
                    "columnNumber": 20,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.repository.VehicleDetailsRepository.findByVin */ \n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);"
                  }
                ]
              },
              {
                "pathId": "9666-9674-9680-9691-9690-9685",
                "path": [
                  {
                    "sample": "java.lang.String pincode",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/VehicleDetails.java",
                    "excerpt": "  private long id;\n\n  @Column(name = \"uuid\", updatable = false, nullable = false, unique = true)\n  private UUID uuid = UUID.randomUUID();\n\n  private String pincode; /* <=== 'pincode' is a member of 'com.crapi.entity.VehicleDetails' class */ \n  private String vin;\n  private long year;\n  private EStatus status;\n\n  @OneToOne(cascade = CascadeType.ALL)"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 153,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    VehicleDetails vehicleDetails = null;\n    VehicleLocationResponse vehicleLocationForm = null;\n    UserDetails userDetails = null;\n    Random random = new Random();\n    try {\n      vehicleDetails = vehicleDetailsRepository.findByUuid(carId); /* <=== com.crapi.entity.VehicleDetails */ \n      if (vehicleDetails != null) {\n        // vehicleDetails = vehicleDetailsRepository.findByVehicleLocation_id(carId);\n        // vehicleDetails.setVehicleLocation(getVehicleLocationList().get(random.nextInt(getVehicleLocationList().size())));\n        if (vehicleDetails.getOwner() != null) {\n          userDetails = userDetailsRepository.findByUser_id(vehicleDetails.getOwner().getId());"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 154,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    VehicleLocationResponse vehicleLocationForm = null;\n    UserDetails userDetails = null;\n    Random random = new Random();\n    try {\n      vehicleDetails = vehicleDetailsRepository.findByUuid(carId);\n      if (vehicleDetails != null) { /* <=== com.crapi.entity.VehicleDetails */ \n        // vehicleDetails = vehicleDetailsRepository.findByVehicleLocation_id(carId);\n        // vehicleDetails.setVehicleLocation(getVehicleLocationList().get(random.nextInt(getVehicleLocationList().size())));\n        if (vehicleDetails.getOwner() != null) {\n          userDetails = userDetailsRepository.findByUser_id(vehicleDetails.getOwner().getId());\n          vehicleLocationForm ="
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 157,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    try {\n      vehicleDetails = vehicleDetailsRepository.findByUuid(carId);\n      if (vehicleDetails != null) {\n        // vehicleDetails = vehicleDetailsRepository.findByVehicleLocation_id(carId);\n        // vehicleDetails.setVehicleLocation(getVehicleLocationList().get(random.nextInt(getVehicleLocationList().size())));\n        if (vehicleDetails.getOwner() != null) { /* <=== com.crapi.entity.VehicleDetails */ \n          userDetails = userDetailsRepository.findByUser_id(vehicleDetails.getOwner().getId());\n          vehicleLocationForm =\n              new VehicleLocationResponse(\n                  carId,\n                  (userDetails != null ? userDetails.getName() : null),"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 158,
                    "columnNumber": 61,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      vehicleDetails = vehicleDetailsRepository.findByUuid(carId);\n      if (vehicleDetails != null) {\n        // vehicleDetails = vehicleDetailsRepository.findByVehicleLocation_id(carId);\n        // vehicleDetails.setVehicleLocation(getVehicleLocationList().get(random.nextInt(getVehicleLocationList().size())));\n        if (vehicleDetails.getOwner() != null) {\n          userDetails = userDetailsRepository.findByUser_id(vehicleDetails.getOwner().getId()); /* <=== com.crapi.entity.VehicleDetails */ \n          vehicleLocationForm =\n              new VehicleLocationResponse(\n                  carId,\n                  (userDetails != null ? userDetails.getName() : null),\n                  vehicleDetails.getVehicleLocation());"
                  },
                  {
                    "sample": "getOwner()",
                    "lineNumber": 158,
                    "columnNumber": 61,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      vehicleDetails = vehicleDetailsRepository.findByUuid(carId);\n      if (vehicleDetails != null) {\n        // vehicleDetails = vehicleDetailsRepository.findByVehicleLocation_id(carId);\n        // vehicleDetails.setVehicleLocation(getVehicleLocationList().get(random.nextInt(getVehicleLocationList().size())));\n        if (vehicleDetails.getOwner() != null) {\n          userDetails = userDetailsRepository.findByUser_id(vehicleDetails.getOwner().getId()); /* <=== com.crapi.entity.VehicleDetails.getOwner */ \n          vehicleLocationForm =\n              new VehicleLocationResponse(\n                  carId,\n                  (userDetails != null ? userDetails.getName() : null),\n                  vehicleDetails.getVehicleLocation());"
                  },
                  {
                    "sample": "findByUser_id(vehicleDetails.getOwner().getId())",
                    "lineNumber": 158,
                    "columnNumber": 25,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      vehicleDetails = vehicleDetailsRepository.findByUuid(carId);\n      if (vehicleDetails != null) {\n        // vehicleDetails = vehicleDetailsRepository.findByVehicleLocation_id(carId);\n        // vehicleDetails.setVehicleLocation(getVehicleLocationList().get(random.nextInt(getVehicleLocationList().size())));\n        if (vehicleDetails.getOwner() != null) {\n          userDetails = userDetailsRepository.findByUser_id(vehicleDetails.getOwner().getId()); /* <=== com.crapi.repository.UserDetailsRepository.findByUser_id */ \n          vehicleLocationForm =\n              new VehicleLocationResponse(\n                  carId,\n                  (userDetails != null ? userDetails.getName() : null),\n                  vehicleDetails.getVehicleLocation());"
                  }
                ]
              },
              {
                "pathId": "9387-9382",
                "path": [
                  {
                    "sample": "java.lang.String pincode",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/VehicleForm.java",
                    "excerpt": "@Data\npublic class VehicleForm {\n\n  @NotBlank\n  @Size(min = 4, max = 8)\n  private String pincode; /* <=== 'pincode' is a member of 'com.crapi.model.VehicleForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 20)\n  private String vin;\n}"
                  },
                  {
                    "sample": "vehicleForm",
                    "lineNumber": 64,
                    "columnNumber": 74,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public boolean addVehicleDetails(VehicleForm vehicleForm, HttpServletRequest request) {\n    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.model.VehicleForm */ \n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "findByVin(vehicleForm.getVin())",
                    "lineNumber": 64,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public boolean addVehicleDetails(VehicleForm vehicleForm, HttpServletRequest request) {\n    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin()); /* <=== com.crapi.repository.VehicleDetailsRepository.findByVin */ \n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId": "Data.Sensitive.ContactData.EmailAddress",
        "sinks": [
          {
            "sinkType": "storages",
            "id": "Storages.SpringFramework.Jdbc.Write",
            "name": "Java Database Connector(Write)",
            "category": "",
            "domains": ["oracle.com"],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "${DB_NAME}",
              "dbVendor": "postgresql",
              "dbLocation": "${DB_HOST}:${DB_PORT}",
              "dbOperation": "Write"
            },
            "paths": [
              {
                "pathId": "3801-3799-21695-7560-7562",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 91,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) {\n    this.user = user; /* <=== com.crapi.entity.User */ \n  }\n\n  @JsonProperty(\"profileVideo\")\n  public String getVideoBase64() {\n    // just assuming it is a jpeg. you would need to cater for different media types"
                  },
                  {
                    "sample": "this.user",
                    "lineNumber": 91,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) {\n    this.user = user; /* <===  */ \n  }\n\n  @JsonProperty(\"profileVideo\")\n  public String getVideoBase64() {\n    // just assuming it is a jpeg. you would need to cater for different media types"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 90,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  @JsonIgnore\n  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) { /* <===  */ \n    this.user = user;\n  }\n\n  @JsonProperty(\"profileVideo\")\n  public String getVideoBase64() {"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 191,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    optionalProfileVideo = profileVideoRepository.findById(videoId);\n    User user = userService.getUserFromToken(request);\n    if (optionalProfileVideo.isPresent()) {\n      profileVideo = optionalProfileVideo.get();\n      profileVideo.setUser(null); /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideoRepository.delete(profileVideo);\n      return new CRAPIResponse(UserMessage.VIDEO_DELETED_SUCCESS_MESSAGE, 200);\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE, 404);\n  }"
                  },
                  {
                    "sample": "profileVideoRepository.delete(profileVideo)",
                    "lineNumber": 192,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    optionalProfileVideo = profileVideoRepository.findById(videoId);\n    User user = userService.getUserFromToken(request);\n    if (optionalProfileVideo.isPresent()) {\n      profileVideo = optionalProfileVideo.get();\n      profileVideo.setUser(null);\n      profileVideoRepository.delete(profileVideo); /* <=== com.crapi.repository.ProfileVideoRepository.delete */ \n      return new CRAPIResponse(UserMessage.VIDEO_DELETED_SUCCESS_MESSAGE, 200);\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE, 404);\n  }\n"
                  }
                ]
              },
              {
                "pathId": "6958-6953-6952-6961-6980-7000-3574-3583-3581-21685-6998-7002-7007",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/ForgetPassword.java",
                    "excerpt": "public class ForgetPassword implements Serializable {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  @Email\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.ForgetPassword' class */ \n}"
                  },
                  {
                    "sample": "forgetPassword",
                    "lineNumber": 141,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.model.ForgetPassword */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "findByEmail(forgetPassword.getEmail())",
                    "lineNumber": 141,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 141,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 142,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 147,
                    "columnNumber": 58,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n        if (checkOtpEnteryForUser != null) {\n          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 154,
                    "columnNumber": 48,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {\n          // Create new OTP object\n          checkOtpEnteryForUser = new Otp(otp, user); /* <=== com.crapi.entity.User */ \n        }\n        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString());\n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser);\n        // Sent OTP mail to user email address."
                  },
                  {
                    "sample": "User user",
                    "lineNumber": 37,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/Otp.java",
                    "excerpt": "\n  @OneToOne private User user;\n\n  public Otp() {}\n\n  public Otp(String otp, User user) { /* <===  */ \n    this.otp = otp;\n    this.user = user;\n  }\n}"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 39,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/Otp.java",
                    "excerpt": "\n  public Otp() {}\n\n  public Otp(String otp, User user) {\n    this.otp = otp;\n    this.user = user; /* <=== com.crapi.entity.User */ \n  }\n}"
                  },
                  {
                    "sample": "this.user",
                    "lineNumber": 39,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/Otp.java",
                    "excerpt": "\n  public Otp() {}\n\n  public Otp(String otp, User user) {\n    this.otp = otp;\n    this.user = user; /* <===  */ \n  }\n}"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 37,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/Otp.java",
                    "excerpt": "\n  @OneToOne private User user;\n\n  public Otp() {}\n\n  public Otp(String otp, User user) { /* <===  */ \n    this.otp = otp;\n    this.user = user;\n  }\n}"
                  },
                  {
                    "sample": "checkOtpEnteryForUser",
                    "lineNumber": 154,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {\n          // Create new OTP object\n          checkOtpEnteryForUser = new Otp(otp, user); /* <=== com.crapi.entity.Otp */ \n        }\n        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString());\n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser);\n        // Sent OTP mail to user email address."
                  },
                  {
                    "sample": "checkOtpEnteryForUser",
                    "lineNumber": 156,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "          checkOtpEnteryForUser.setOtp(otp);\n        } else {\n          // Create new OTP object\n          checkOtpEnteryForUser = new Otp(otp, user);\n        }\n        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString()); /* <=== com.crapi.entity.Otp */ \n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser);\n        // Sent OTP mail to user email address.\n        smtpMailServer.sendMail(\n            user.getEmail(), MailBody.otpMailBody(checkOtpEnteryForUser), \"crAPI OTP\");"
                  },
                  {
                    "sample": "otpRepository.save(checkOtpEnteryForUser)",
                    "lineNumber": 158,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "          // Create new OTP object\n          checkOtpEnteryForUser = new Otp(otp, user);\n        }\n        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString());\n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser); /* <=== com.crapi.repository.OtpRepository.save */ \n        // Sent OTP mail to user email address.\n        smtpMailServer.sendMail(\n            user.getEmail(), MailBody.otpMailBody(checkOtpEnteryForUser), \"crAPI OTP\");\n        return new CRAPIResponse(UserMessage.OTP_SEND_SUCCESS_ON_EMAIL + user.getEmail(), 200);\n      }"
                  }
                ]
              },
              {
                "pathId": "9746-9771-9770-9773-9781-9777",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 184,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse checkVehicle(VehicleForm vehicleForm, HttpServletRequest request) {\n    VehicleDetails checkVehicle = null;\n    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 187,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user); /* <=== com.crapi.entity.User */ \n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 187,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user = null;\n    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user); /* <=== com.crapi.entity.VehicleDetails */ \n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 188,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    checkVehicle = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE); /* <=== com.crapi.entity.VehicleDetails */ \n        vehicleDetailsRepository.save(checkVehicle);\n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }"
                  },
                  {
                    "sample": "checkVehicle",
                    "lineNumber": 189,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle); /* <=== com.crapi.entity.VehicleDetails */ \n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }\n    return new CRAPIResponse(UserMessage.VEHICLE_ALREADY_CREATED, 403);"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(checkVehicle)",
                    "lineNumber": 189,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    user = userService.getUserFromToken(request);\n    if (checkVehicle != null && checkVehicle.getOwner() == null) {\n      if (checkVehicle.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        checkVehicle.setOwner(user);\n        checkVehicle.setStatus(EStatus.INACTIVE);\n        vehicleDetailsRepository.save(checkVehicle); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n        logger.info(\"Success Owner updated in vehicle details\");\n        return new CRAPIResponse(UserMessage.VEHICLE_SAVED_SUCCESSFULLY, 200);\n      }\n    }\n    return new CRAPIResponse(UserMessage.VEHICLE_ALREADY_CREATED, 403);"
                  }
                ]
              },
              {
                "pathId": "8810-8813-8840-8836",
                "path": [
                  {
                    "sample": "java.lang.String newEmail",
                    "lineNumber": 31,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ChangeEmailRequest.java",
                    "excerpt": "  @Id\n  @GeneratedValue(strategy = GenerationType.AUTO)\n  private long id;\n\n  @Column(name = \"new_email\")\n  private String newEmail; /* <=== 'newEmail' is a member of 'com.crapi.entity.ChangeEmailRequest' class */ \n\n  @Column(name = \"old_email\")\n  private String oldEmail;\n\n  @Column(name = \"email_token\")"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 236,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest = /* <=== com.crapi.entity.ChangeEmailRequest */ \n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {\n      // updating the existing changeEmail data for user\n      changeEmailRequest.setEmailToken(token);"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 236,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest = /* <=== com.crapi.entity.ChangeEmailRequest */ \n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);\n    } else {\n      // updating the existing changeEmail data for user\n      changeEmailRequest.setEmailToken(token);"
                  },
                  {
                    "sample": "changeEmailRequest",
                    "lineNumber": 246,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest); /* <=== com.crapi.entity.ChangeEmailRequest */ \n    smtpMailServer.sendMail(\n        changeEmailForm.getNew_email(),\n        MailBody.changeMailBody(changeEmailForm),\n        \"crAPI: Change Email Token\");\n    return new CRAPIResponse("
                  },
                  {
                    "sample": "changeEmailRepository.save(changeEmailRequest)",
                    "lineNumber": 246,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      changeEmailRequest.setEmailToken(token);\n      changeEmailRequest.setNewEmail(changeEmailForm.getNew_email());\n      changeEmailRequest.setOldEmail(changeEmailForm.getOld_email());\n    }\n    changeEmailForm.setToken(token);\n    changeEmailRepository.save(changeEmailRequest); /* <=== com.crapi.repository.ChangeEmailRepository.save */ \n    smtpMailServer.sendMail(\n        changeEmailForm.getNew_email(),\n        MailBody.changeMailBody(changeEmailForm),\n        \"crAPI: Change Email Token\");\n    return new CRAPIResponse("
                  }
                ]
              },
              {
                "pathId": "9024-9023-9067-8887-8886-8897-8909-8913-8919-8915",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 302,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <=== com.crapi.entity.User */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 302,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 293,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param request request getting jwt token for user from request header\n   * @return User object from token throw entity not found if user not found.\n   */\n  @Transactional\n  @Override\n  public User getUserFromToken(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromToken(request)",
                    "lineNumber": 269,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public CRAPIResponse verifyEmailToken(\n      HttpServletRequest request, ChangeEmailForm changeEmailForm) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromToken */ \n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 269,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public CRAPIResponse verifyEmailToken(\n      HttpServletRequest request, ChangeEmailForm changeEmailForm) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 271,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) { /* <=== com.crapi.entity.User */ \n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");\n          userRepository.save(user);\n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 273,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken());\n    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail()); /* <=== com.crapi.entity.User */ \n          user.setJwtToken(\"\");\n          userRepository.save(user);\n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 274,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\"); /* <=== com.crapi.entity.User */ \n          userRepository.save(user);\n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);\n        }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 275,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");\n          userRepository.save(user); /* <=== com.crapi.entity.User */ \n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);\n        }\n      } else {"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 275,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());\n          user.setJwtToken(\"\");\n          userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n          return new CRAPIResponse(UserMessage.EMAIL_CHANGE_SUCCESSFUL, 200);\n        } else {\n          return new CRAPIResponse(UserMessage.NEW_MAIL_DOES_NOT_BELONG, 500);\n        }\n      } else {"
                  }
                ]
              },
              {
                "pathId": "6690-6699-21890-12059-6653-6674-6669-6668-6677-6686-6682-6681-6689-7067-7072-7080-7087-7093-21895-6689-6726-6724-6723-6737",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 33,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 5, max = 30)\n  private String password;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.OtpForm' class */ \n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 82,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "this.getDummyOtpForm()",
                    "lineNumber": 83,
                    "columnNumber": 28,
                    "fileName": "/app/code/services/identity/src/test/java/com/crapi/service/Impl/OtpServiceImplTest.java",
                    "excerpt": "  }\n\n  @Test(expected = EntityNotFoundException.class)\n  public void validateOtpThrowsExceptionWhenUserNotFound() {\n    Mockito.when(userRepository.findByEmail(Mockito.anyString())).thenReturn(null);\n    otpService.validateOtp(getDummyOtpForm()); /* <=== com.crapi.service.Impl.OtpServiceImplTest.getDummyOtpForm */ \n  }\n\n  @Test\n  public void validateOtpSuccess() {\n    Otp otp = getDummyOtp();"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 79,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 79,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 79,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 80,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 81,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 81,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 81,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.Otp */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 82,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 174,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) { /* <=== com.crapi.entity.Otp */ \n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 175,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString()) /* <=== com.crapi.entity.Otp */ \n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 176,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp()) /* <=== com.crapi.entity.Otp */ \n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;\n    }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 177,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) { /* <=== com.crapi.entity.Otp */ \n        return true;\n      }\n      return false;\n    }\n    throw new EntityNotFoundException(Otp.class, \"OTP Details Not Found\", otpForm.getEmail());"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 82,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 88,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);\n      return validateOTPResponse;\n    }"
                  },
                  {
                    "sample": "otp.getCount() + 1",
                    "lineNumber": 88,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1); /* <===  */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);\n      return validateOTPResponse;\n    }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 88,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);\n      return validateOTPResponse;\n    }"
                  },
                  {
                    "sample": "otpRepository.save(otp)",
                    "lineNumber": 91,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp); /* <=== com.crapi.repository.OtpRepository.save */ \n      return validateOTPResponse;\n    }\n    throw new EntityNotFoundException(User.class, \"userEmail\", otpForm.getEmail());\n  }\n"
                  }
                ]
              },
              {
                "pathId": "6690-6699-6698-6695-6694-6693-6704-6700",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 33,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 5, max = 30)\n  private String password;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.OtpForm' class */ \n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 82,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "getPassword()",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm.getPassword */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "this.encoder",
                    "lineNumber": 83,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <===  */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "encode(otpForm.getPassword())",
                    "lineNumber": 83,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== org.springframework.security.crypto.password.PasswordEncoder.encode */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 83,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.entity.User */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 84,
                    "columnNumber": 29,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user); /* <=== com.crapi.entity.User */ \n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 84,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  }
                ]
              },
              {
                "pathId": "6805-6814-6813-6810-6809-6808-6819-6815",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 33,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 5, max = 30)\n  private String password;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.OtpForm' class */ \n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 106,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 107,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "getPassword()",
                    "lineNumber": 107,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm.getPassword */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "this.encoder",
                    "lineNumber": 107,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <===  */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "encode(otpForm.getPassword())",
                    "lineNumber": 107,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== org.springframework.security.crypto.password.PasswordEncoder.encode */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 107,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.entity.User */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 108,
                    "columnNumber": 29,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user); /* <=== com.crapi.entity.User */ \n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 108,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);"
                  }
                ]
              },
              {
                "pathId": "8084-8087-8107-8103",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 90,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    if (userRepository.existsByEmail(signUpRequest.getEmail())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user = /* <=== com.crapi.entity.User */ \n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 90,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    if (userRepository.existsByEmail(signUpRequest.getEmail())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user = /* <=== com.crapi.entity.User */ \n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 96,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 96,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  }
                ]
              },
              {
                "pathId": "7421-7434-7429-7428-7437-7441-3602-21692-7441-7454-3744-3746-3752-7453-7446-3754-3759-3757-21693-7445-7455",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 146,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 147,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 147,
                    "columnNumber": 20,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 147,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.ProfileVideo */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 148,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) { /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 149,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName()); /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo);"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 64,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public String getVideo_name() {\n    return video_name;\n  }\n\n  public void setVideo_name(String video_name) { /* <===  */ \n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() {\n    return conversion_params;"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 64,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public String getVideo_name() {\n    return video_name;\n  }\n\n  public void setVideo_name(String video_name) { /* <===  */ \n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() {\n    return conversion_params;"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 149,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName()); /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo);"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 153,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params())); /* <=== com.crapi.entity.ProfileVideo */ \n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE + user.getEmail(), 404);\n  }"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 68,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public void setVideo_name(String video_name) {\n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() { /* <===  */ \n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params;"
                  },
                  {
                    "sample": "return conversion_params;",
                    "lineNumber": 69,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public void setVideo_name(String video_name) {\n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() {\n    return conversion_params; /* <===  */ \n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params;\n  }"
                  },
                  {
                    "sample": "java.lang.String",
                    "lineNumber": 68,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public void setVideo_name(String video_name) {\n    this.video_name = video_name;\n  }\n\n  public String getConversion_params() { /* <===  */ \n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params;"
                  },
                  {
                    "sample": "profileVideo.getConversion_params()",
                    "lineNumber": 153,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params())); /* <=== com.crapi.entity.ProfileVideo.getConversion_params */ \n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE + user.getEmail(), 404);\n  }"
                  },
                  {
                    "sample": "videoForm.getConversion_params() != null ? videoForm.getConversion_params() : profileVideo.getConversion_params()",
                    "lineNumber": 151,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null /* <===  */ \n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    }"
                  },
                  {
                    "sample": "String conversion_params",
                    "lineNumber": 72,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public String getConversion_params() {\n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) { /* <===  */ \n    this.conversion_params = conversion_params;\n  }\n\n  @JsonIgnore\n  public byte[] getVideo() {"
                  },
                  {
                    "sample": "conversion_params",
                    "lineNumber": 73,
                    "columnNumber": 30,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public String getConversion_params() {\n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params; /* <=== java.lang.String */ \n  }\n\n  @JsonIgnore\n  public byte[] getVideo() {\n    return video;"
                  },
                  {
                    "sample": "this.conversion_params",
                    "lineNumber": 73,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  public String getConversion_params() {\n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) {\n    this.conversion_params = conversion_params; /* <===  */ \n  }\n\n  @JsonIgnore\n  public byte[] getVideo() {\n    return video;"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 72,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "\n  public String getConversion_params() {\n    return conversion_params;\n  }\n\n  public void setConversion_params(String conversion_params) { /* <===  */ \n    this.conversion_params = conversion_params;\n  }\n\n  @JsonIgnore\n  public byte[] getVideo() {"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 150,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params( /* <=== com.crapi.entity.ProfileVideo */ \n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo);\n      return profileVideo;"
                  },
                  {
                    "sample": "profileVideoRepository.save(profileVideo)",
                    "lineNumber": 154,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()\n              : profileVideo.getConversion_params()));\n      profileVideoRepository.save(profileVideo); /* <=== com.crapi.repository.ProfileVideoRepository.save */ \n      return profileVideo;\n    }\n    throw new CRAPIExceptionHandler(UserMessage.SORRY_DIDNT_GET_PROFILE + user.getEmail(), 404);\n  }\n"
                  }
                ]
              },
              {
                "pathId": "9401-9409-9414-9413-9416-9424-9420",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 67,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public boolean addVehicleDetails(VehicleForm vehicleForm, HttpServletRequest request) {\n    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 68,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    try {\n      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) { /* <=== com.crapi.entity.User */ \n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 69,
                    "columnNumber": 35,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user); /* <=== com.crapi.entity.User */ \n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 69,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      VehicleDetails vehicleDetails = vehicleDetailsRepository.findByVin(vehicleForm.getVin());\n      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user); /* <=== com.crapi.entity.VehicleDetails */ \n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 70,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "      if (vehicleDetails != null\n          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE); /* <=== com.crapi.entity.VehicleDetails */ \n          vehicleDetailsRepository.save(vehicleDetails);\n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }\n      }"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 71,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.entity.VehicleDetails */ \n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }\n      }\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(vehicleDetails)",
                    "lineNumber": 71,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "          && vehicleDetails.getPincode().equalsIgnoreCase(vehicleForm.getPincode())) {\n        User user = userService.getUserFromToken(request);\n        if (user != null) {\n          vehicleDetails.setOwner(user);\n          vehicleDetails.setStatus(EStatus.INACTIVE);\n          vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n          logger.info(\"Success Owner updated in vehicle details\");\n          return true;\n        }\n      }\n    } catch (Exception e) {"
                  }
                ]
              },
              {
                "pathId": "8580-8579-8576-8575-8574-8585-8581",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "@Data\npublic class LoginForm {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.LoginForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password;\n"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 160,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <=== com.crapi.model.LoginForm */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "getPassword()",
                    "lineNumber": 160,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <=== com.crapi.model.LoginForm.getPassword */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "this.encoder",
                    "lineNumber": 160,
                    "columnNumber": 24,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <===  */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "encode(loginForm.getPassword())",
                    "lineNumber": 160,
                    "columnNumber": 24,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <=== org.springframework.security.crypto.password.PasswordEncoder.encode */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 160,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword())); /* <=== com.crapi.entity.User */ \n      userRepository.saveAndFlush(user);\n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 161,
                    "columnNumber": 35,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword()));\n      userRepository.saveAndFlush(user); /* <=== com.crapi.entity.User */ \n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }\n"
                  },
                  {
                    "sample": "userRepository.saveAndFlush(user)",
                    "lineNumber": 161,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse resetPassword(LoginForm loginForm, HttpServletRequest request) {\n    User user = getUserFromToken(request);\n    if (user != null) {\n      user.setPassword(encoder.encode(loginForm.getPassword()));\n      userRepository.saveAndFlush(user); /* <=== com.crapi.repository.UserRepository.saveAndFlush */ \n      return new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET, 200);\n    }\n    throw new EntityNotFoundException(User.class, UserMessage.ERROR, loginForm.getEmail());\n  }\n"
                  }
                ]
              },
              {
                "pathId": "7325-3674-3688-3686-21690-7320-7326",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 86,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {\n        profileVideo = new ProfileVideo(file.getOriginalFilename(), file.getBytes(), user); /* <=== com.crapi.entity.User */ \n      }\n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload video -> Message: {} \", exception);"
                  },
                  {
                    "sample": "User user",
                    "lineNumber": 44,
                    "columnNumber": 55,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "    this.video_name = video_name;\n    this.user = user;\n  }\n\n  // constructor for new object\n  public ProfileVideo(String video_name, byte[] file, User user) { /* <===  */ \n    this.video_name = video_name;\n    this.user = user;\n    this.video = file;\n  }\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 46,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  }\n\n  // constructor for new object\n  public ProfileVideo(String video_name, byte[] file, User user) {\n    this.video_name = video_name;\n    this.user = user; /* <=== com.crapi.entity.User */ \n    this.video = file;\n  }\n\n  public ProfileVideo() {}\n"
                  },
                  {
                    "sample": "this.user",
                    "lineNumber": 46,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "  }\n\n  // constructor for new object\n  public ProfileVideo(String video_name, byte[] file, User user) {\n    this.video_name = video_name;\n    this.user = user; /* <===  */ \n    this.video = file;\n  }\n\n  public ProfileVideo() {}\n"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 44,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/ProfileVideo.java",
                    "excerpt": "    this.video_name = video_name;\n    this.user = user;\n  }\n\n  // constructor for new object\n  public ProfileVideo(String video_name, byte[] file, User user) { /* <===  */ \n    this.video_name = video_name;\n    this.user = user;\n    this.video = file;\n  }\n"
                  },
                  {
                    "sample": "profileVideo",
                    "lineNumber": 106,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {\n        profileVideo = new ProfileVideo(file.getOriginalFilename(), file.getBytes(), user); /* <=== com.crapi.entity.ProfileVideo */ \n      }\n      profileVideoRepository.save(profileVideo);\n      return profileVideo;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload video -> Message: {} \", exception);"
                  },
                  {
                    "sample": "profileVideoRepository.save(profileVideo)",
                    "lineNumber": 108,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {\n        profileVideo = new ProfileVideo(file.getOriginalFilename(), file.getBytes(), user);\n      }\n      profileVideoRepository.save(profileVideo); /* <=== com.crapi.repository.ProfileVideoRepository.save */ \n      return profileVideo;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload video -> Message: {} \", exception);\n      throw new IOExceptionHandler(ProfileServiceImpl.class, UserMessage.CUSTOM_IO_EXCEPTION);\n    }"
                  }
                ]
              },
              {
                "pathId": "6789-6784-6783-6792-6801-6797-6796-6804-7067-7072-7080-7087-7093-21895-6804-6839-6863-6870-6868-6867-6882-6617-6622-6630",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 33,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 5, max = 30)\n  private String password;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.OtpForm' class */ \n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 103,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 103,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 103,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 104,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 105,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 105,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 105,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.Otp */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 106,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 174,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) { /* <=== com.crapi.entity.Otp */ \n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 175,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString()) /* <=== com.crapi.entity.Otp */ \n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 176,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp()) /* <=== com.crapi.entity.Otp */ \n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;\n    }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 177,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) { /* <=== com.crapi.entity.Otp */ \n        return true;\n      }\n      return false;\n    }\n    throw new EntityNotFoundException(Otp.class, \"OTP Details Not Found\", otpForm.getEmail());"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 106,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 111,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) { /* <=== com.crapi.entity.Otp */ \n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 115,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) { /* <=== com.crapi.entity.Otp */ \n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 116,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp.getCount() + 1",
                    "lineNumber": 116,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <===  */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 116,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 118,
                    "columnNumber": 23,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp); /* <=== com.crapi.entity.Otp */ \n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 58,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   *\n   * @param {Otp} otp\n   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) { /* <===  */ \n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 60,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) {\n    try {\n      otp.setStatus(EStatus.INACTIVE.toString()); /* <=== com.crapi.entity.Otp */ \n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {\n      logger.error(\"Fail to invalidate otp -> Message: {}\", e);\n      return false;"
                  },
                  {
                    "sample": "otpRepository.save(otp)",
                    "lineNumber": 61,
                    "columnNumber": 21,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) {\n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp); /* <=== com.crapi.repository.OtpRepository.save */ \n      return true;\n    } catch (Exception e) {\n      logger.error(\"Fail to invalidate otp -> Message: {}\", e);\n      return false;\n    }"
                  }
                ]
              },
              {
                "pathId": "8462-8461-8531-8540-8536-8535-8543-8547-8553-8549",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "@Data\npublic class LoginForm {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.LoginForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password;\n"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 110,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "            authenticationManager.authenticate(\n                new UsernamePasswordAuthenticationToken(\n                    loginForm.getEmail(), loginForm.getPassword()));\n        String jwt = jwtProvider.generateJwtToken(user);\n        if (jwt != null) {\n          updateUserToken(jwt, loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n          jwtResponse.setToken(jwt);\n        } else {\n          jwtResponse.setMessage(UserMessage.INVALID_CREDENTIALS);\n        }\n      }"
                  },
                  {
                    "sample": "getEmail()",
                    "lineNumber": 110,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "            authenticationManager.authenticate(\n                new UsernamePasswordAuthenticationToken(\n                    loginForm.getEmail(), loginForm.getPassword()));\n        String jwt = jwtProvider.generateJwtToken(user);\n        if (jwt != null) {\n          updateUserToken(jwt, loginForm.getEmail()); /* <=== com.crapi.model.LoginForm.getEmail */ \n          jwtResponse.setToken(jwt);\n        } else {\n          jwtResponse.setMessage(UserMessage.INVALID_CREDENTIALS);\n        }\n      }"
                  },
                  {
                    "sample": "String email",
                    "lineNumber": 142,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param jwt update token in database\n   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) { /* <===  */ \n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }"
                  },
                  {
                    "sample": "email",
                    "lineNumber": 143,
                    "columnNumber": 44,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== java.lang.String */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  },
                  {
                    "sample": "userRepository.findByEmail(email)",
                    "lineNumber": 143,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 143,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 144,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 145,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt); /* <=== com.crapi.entity.User */ \n      userRepository.saveAndFlush(user);\n    }\n  }\n\n  /**"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 146,
                    "columnNumber": 35,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user); /* <=== com.crapi.entity.User */ \n    }\n  }\n\n  /**\n   * @param loginForm Contains user email, password and number"
                  },
                  {
                    "sample": "userRepository.saveAndFlush(user)",
                    "lineNumber": 146,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user); /* <=== com.crapi.repository.UserRepository.saveAndFlush */ \n    }\n  }\n\n  /**\n   * @param loginForm Contains user email, password and number"
                  }
                ]
              },
              {
                "pathId": "6789-6784-6783-6792-6801-6797-6796-6804-7067-7072-7080-7087-7093-21895-6804-6839-6863-6870-6868-6867-6882-6617-6622-6634-21889-6882-6900",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 33,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 5, max = 30)\n  private String password;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.OtpForm' class */ \n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 103,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 103,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 103,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 104,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 105,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 105,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 105,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.Otp */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 106,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 174,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) { /* <=== com.crapi.entity.Otp */ \n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 175,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString()) /* <=== com.crapi.entity.Otp */ \n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 176,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp()) /* <=== com.crapi.entity.Otp */ \n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;\n      }\n      return false;\n    }"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 177,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) {\n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) { /* <=== com.crapi.entity.Otp */ \n        return true;\n      }\n      return false;\n    }\n    throw new EntityNotFoundException(Otp.class, \"OTP Details Not Found\", otpForm.getEmail());"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 173,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "\n  /**\n   * @param otp\n   * @return\n   */\n  public boolean validateOTPAndEmail(Otp otp, OtpForm otpForm) { /* <===  */ \n    if (otp != null) {\n      if (otp.getStatus().equalsIgnoreCase(EStatus.ACTIVE.toString())\n          && otp.getOtp().equalsIgnoreCase(otpForm.getOtp())\n          && otp.getUser().getEmail().equalsIgnoreCase(otpForm.getEmail())) {\n        return true;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 106,
                    "columnNumber": 31,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.entity.Otp */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 111,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) { /* <=== com.crapi.entity.Otp */ \n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 115,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) { /* <=== com.crapi.entity.Otp */ \n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 116,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp.getCount() + 1",
                    "lineNumber": 116,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <===  */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 116,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "      } else if (otp.getCount() == 9) {\n        otp.setCount(otp.getCount() + 1);\n        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1); /* <=== com.crapi.entity.Otp */ \n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 118,
                    "columnNumber": 23,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp); /* <=== com.crapi.entity.Otp */ \n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 58,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   *\n   * @param {Otp} otp\n   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) { /* <===  */ \n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 60,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) {\n    try {\n      otp.setStatus(EStatus.INACTIVE.toString()); /* <=== com.crapi.entity.Otp */ \n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {\n      logger.error(\"Fail to invalidate otp -> Message: {}\", e);\n      return false;"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 61,
                    "columnNumber": 40,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) {\n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp); /* <=== com.crapi.entity.Otp */ \n      return true;\n    } catch (Exception e) {\n      logger.error(\"Fail to invalidate otp -> Message: {}\", e);\n      return false;\n    }"
                  },
                  {
                    "sample": "Otp otp",
                    "lineNumber": 58,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   *\n   * @param {Otp} otp\n   */\n  @Transactional\n  @Override\n  public boolean invalidateOtp(Otp otp) { /* <===  */ \n    try {\n      otp.setStatus(EStatus.INACTIVE.toString());\n      Otp saveOtp = otpRepository.save(otp);\n      return true;\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "otp",
                    "lineNumber": 118,
                    "columnNumber": 23,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        invalidateOtp(otp);\n        validateOTPResponse = new CRAPIResponse(UserMessage.EXCEED_NUMBER_OF_ATTEMPS, 503);\n      } else if (otp.getCount() > 9) {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.ERROR, 500);\n        invalidateOtp(otp); /* <=== com.crapi.entity.Otp */ \n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp);"
                  },
                  {
                    "sample": "otpRepository.save(otp)",
                    "lineNumber": 123,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        invalidateOtp(otp);\n      } else {\n        otp.setCount(otp.getCount() + 1);\n        validateOTPResponse = new CRAPIResponse(UserMessage.INVALID_OTP, 500);\n      }\n      otpRepository.save(otp); /* <=== com.crapi.repository.OtpRepository.save */ \n      return validateOTPResponse;\n    }\n    throw new EntityNotFoundException(User.class, \"userEmail\", otpForm.getEmail());\n  }\n"
                  }
                ]
              },
              {
                "pathId": "7234-4118-4123-4121-21724-7233-7235",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 77,
                    "columnNumber": 29,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);\n        userDetails.setPicture(file.getBytes());\n        userDetails.setUser(user); /* <=== com.crapi.entity.User */ \n      }\n      userDetailsRepository.save(userDetails);\n      return userDetails;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload image -> Message: %d\", exception);"
                  },
                  {
                    "sample": "User user",
                    "lineNumber": 86,
                    "columnNumber": 23,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserDetails.java",
                    "excerpt": "\n  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) { /* <===  */ \n    this.user = user;\n  }\n\n  @JsonProperty(\"picture\")\n  public String getPhotoBase64() {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 87,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserDetails.java",
                    "excerpt": "  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) {\n    this.user = user; /* <=== com.crapi.entity.User */ \n  }\n\n  @JsonProperty(\"picture\")\n  public String getPhotoBase64() {\n    // just assuming it is a jpeg. you would need to cater for different media types"
                  },
                  {
                    "sample": "this.user",
                    "lineNumber": 87,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserDetails.java",
                    "excerpt": "  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) {\n    this.user = user; /* <===  */ \n  }\n\n  @JsonProperty(\"picture\")\n  public String getPhotoBase64() {\n    // just assuming it is a jpeg. you would need to cater for different media types"
                  },
                  {
                    "sample": "this",
                    "lineNumber": 86,
                    "columnNumber": -1,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/UserDetails.java",
                    "excerpt": "\n  public User getUser() {\n    return user;\n  }\n\n  public void setUser(User user) { /* <===  */ \n    this.user = user;\n  }\n\n  @JsonProperty(\"picture\")\n  public String getPhotoBase64() {"
                  },
                  {
                    "sample": "userDetails",
                    "lineNumber": 77,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);\n        userDetails.setPicture(file.getBytes());\n        userDetails.setUser(user); /* <=== com.crapi.entity.UserDetails */ \n      }\n      userDetailsRepository.save(userDetails);\n      return userDetails;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload image -> Message: %d\", exception);"
                  },
                  {
                    "sample": "userDetailsRepository.save(userDetails)",
                    "lineNumber": 79,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);\n        userDetails.setPicture(file.getBytes());\n        userDetails.setUser(user);\n      }\n      userDetailsRepository.save(userDetails); /* <=== com.crapi.repository.UserDetailsRepository.save */ \n      return userDetails;\n    } catch (IOException exception) {\n      logger.error(\"unable to upload image -> Message: %d\", exception);\n      throw new IOExceptionHandler(ProfileServiceImpl.class, UserMessage.CUSTOM_IO_EXCEPTION);\n    }"
                  }
                ]
              },
              {
                "pathId": "267-270-285-281",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      String name, String email, String password, String number, ERole role) {\n    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role); /* <=== com.crapi.entity.User */ \n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      String name, String email, String password, String number, ERole role) {\n    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role); /* <=== com.crapi.entity.User */ \n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 107,
                    "columnNumber": 34,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 107,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  }
                ]
              },
              {
                "pathId": "267-270-285-281-280-291-310-309-315-311",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      String name, String email, String password, String number, ERole role) {\n    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role); /* <=== com.crapi.entity.User */ \n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 106,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      String name, String email, String password, String number, ERole role) {\n    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role); /* <=== com.crapi.entity.User */ \n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 107,
                    "columnNumber": 34,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 107,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 107,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 108,
                    "columnNumber": 53,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role);\n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user); /* <=== com.crapi.entity.User */ \n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 112,
                    "columnNumber": 33,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user); /* <=== com.crapi.entity.User */ \n        vehicleDetailsRepository.save(vehicleDetails);\n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 112,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user); /* <=== com.crapi.entity.VehicleDetails */ \n        vehicleDetailsRepository.save(vehicleDetails);\n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;"
                  },
                  {
                    "sample": "vehicleDetails",
                    "lineNumber": 113,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.entity.VehicleDetails */ \n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;\n    } catch (Exception e) {"
                  },
                  {
                    "sample": "vehicleDetailsRepository.save(vehicleDetails)",
                    "lineNumber": 113,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails); /* <=== com.crapi.repository.VehicleDetailsRepository.save */ \n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email);\n      return false;\n    } catch (Exception e) {"
                  }
                ]
              }
            ]
          },
          {
            "sinkType": "storages",
            "id": "Storages.SpringFramework.Jdbc.Read",
            "name": "Java Database Connector(Read)",
            "category": "",
            "domains": ["oracle.com"],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "${DB_NAME}",
              "dbVendor": "postgresql",
              "dbLocation": "${DB_HOST}:${DB_PORT}",
              "dbOperation": "Read"
            },
            "paths": [
              {
                "pathId": "6958-6953",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/ForgetPassword.java",
                    "excerpt": "public class ForgetPassword implements Serializable {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  @Email\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.ForgetPassword' class */ \n}"
                  },
                  {
                    "sample": "forgetPassword",
                    "lineNumber": 141,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.model.ForgetPassword */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "findByEmail(forgetPassword.getEmail())",
                    "lineNumber": 141,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  }
                ]
              },
              {
                "pathId": "6690-6699-21890-12059-6653-6674-6669",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 33,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 5, max = 30)\n  private String password;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.OtpForm' class */ \n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 82,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "this.getDummyOtpForm()",
                    "lineNumber": 83,
                    "columnNumber": 28,
                    "fileName": "/app/code/services/identity/src/test/java/com/crapi/service/Impl/OtpServiceImplTest.java",
                    "excerpt": "  }\n\n  @Test(expected = EntityNotFoundException.class)\n  public void validateOtpThrowsExceptionWhenUserNotFound() {\n    Mockito.when(userRepository.findByEmail(Mockito.anyString())).thenReturn(null);\n    otpService.validateOtp(getDummyOtpForm()); /* <=== com.crapi.service.Impl.OtpServiceImplTest.getDummyOtpForm */ \n  }\n\n  @Test\n  public void validateOtpSuccess() {\n    Otp otp = getDummyOtp();"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 79,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 79,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  }
                ]
              },
              {
                "pathId": "8462-8461-8531-8540-8536",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "@Data\npublic class LoginForm {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.LoginForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password;\n"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 110,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "            authenticationManager.authenticate(\n                new UsernamePasswordAuthenticationToken(\n                    loginForm.getEmail(), loginForm.getPassword()));\n        String jwt = jwtProvider.generateJwtToken(user);\n        if (jwt != null) {\n          updateUserToken(jwt, loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n          jwtResponse.setToken(jwt);\n        } else {\n          jwtResponse.setMessage(UserMessage.INVALID_CREDENTIALS);\n        }\n      }"
                  },
                  {
                    "sample": "getEmail()",
                    "lineNumber": 110,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "            authenticationManager.authenticate(\n                new UsernamePasswordAuthenticationToken(\n                    loginForm.getEmail(), loginForm.getPassword()));\n        String jwt = jwtProvider.generateJwtToken(user);\n        if (jwt != null) {\n          updateUserToken(jwt, loginForm.getEmail()); /* <=== com.crapi.model.LoginForm.getEmail */ \n          jwtResponse.setToken(jwt);\n        } else {\n          jwtResponse.setMessage(UserMessage.INVALID_CREDENTIALS);\n        }\n      }"
                  },
                  {
                    "sample": "String email",
                    "lineNumber": 142,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param jwt update token in database\n   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) { /* <===  */ \n    User user = userRepository.findByEmail(email);\n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }"
                  },
                  {
                    "sample": "email",
                    "lineNumber": 143,
                    "columnNumber": 44,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== java.lang.String */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  },
                  {
                    "sample": "userRepository.findByEmail(email)",
                    "lineNumber": 143,
                    "columnNumber": 17,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param email by email user details and update token\n   */\n  @Transactional\n  @Override\n  public void updateUserToken(String jwt, String email) {\n    User user = userRepository.findByEmail(email); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      user.setJwtToken(jwt);\n      userRepository.saveAndFlush(user);\n    }\n  }"
                  }
                ]
              },
              {
                "pathId": "7369-7382-7377",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 126,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public ProfileVideo getProfileVideo(Long videoId, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      if (profileVideo.getId() == videoId) {\n        return profileVideo;\n      }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 127,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo getProfileVideo(Long videoId, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    if (profileVideo != null) {\n      if (profileVideo.getId() == videoId) {\n        return profileVideo;\n      }\n    }"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 127,
                    "columnNumber": 20,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo getProfileVideo(Long videoId, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n    if (profileVideo != null) {\n      if (profileVideo.getId() == videoId) {\n        return profileVideo;\n      }\n    }"
                  }
                ]
              },
              {
                "pathId": "9830-9843-9838",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 209,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public CRAPIResponse sendVehicleDetails(HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    userDetails = userDetailsRepository.findByUser_id(user.getId());\n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 210,
                    "columnNumber": 55,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request);\n    userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;\n        break;"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 210,
                    "columnNumber": 19,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request);\n    userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.UserDetailsRepository.findByUser_id */ \n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;\n        break;"
                  }
                ]
              },
              {
                "pathId": "7189-7202-7197",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 69,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public UserDetails uploadProfilePicture(MultipartFile file, HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    try {\n      user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      if (userDetails != null && ProfileValidator.validateFile(file) != null) {\n        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 70,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  public UserDetails uploadProfilePicture(MultipartFile file, HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    try {\n      user = userService.getUserFromToken(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      if (userDetails != null && ProfileValidator.validateFile(file) != null) {\n        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 70,
                    "columnNumber": 21,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  public UserDetails uploadProfilePicture(MultipartFile file, HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    try {\n      user = userService.getUserFromToken(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.UserDetailsRepository.findByUser_id */ \n      if (userDetails != null && ProfileValidator.validateFile(file) != null) {\n        userDetails.setPicture(file.getBytes());\n      } else {\n        userDetails = new UserDetails();\n        userDetails.setAvailable_credit(100.0);"
                  }
                ]
              },
              {
                "pathId": "8884-8879",
                "path": [
                  {
                    "sample": "java.lang.String old_email",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/ChangeEmailForm.java",
                    "excerpt": "@Data\npublic class ChangeEmailForm {\n\n  @NotBlank\n  @Size(min = 3, max = 40)\n  private String old_email; /* <=== 'old_email' is a member of 'com.crapi.model.ChangeEmailForm' class */ \n\n  @NotBlank\n  @Size(min = 3, max = 40)\n  private String new_email;\n"
                  },
                  {
                    "sample": "changeEmailForm",
                    "lineNumber": 268,
                    "columnNumber": 65,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse verifyEmailToken(\n      HttpServletRequest request, ChangeEmailForm changeEmailForm) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken()); /* <=== com.crapi.model.ChangeEmailForm */ \n    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());"
                  },
                  {
                    "sample": "findByEmailToken(changeEmailForm.getToken())",
                    "lineNumber": 268,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse verifyEmailToken(\n      HttpServletRequest request, ChangeEmailForm changeEmailForm) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(changeEmailForm.getToken()); /* <=== com.crapi.repository.ChangeEmailRepository.findByEmailToken */ \n    user = getUserFromToken(request);\n    if (changeEmailRequest != null) {\n      if (user.getEmail().equalsIgnoreCase(changeEmailRequest.getOldEmail())) {\n        if (changeEmailRequest.getNewEmail().equalsIgnoreCase(changeEmailForm.getNew_email())) {\n          user.setEmail(changeEmailRequest.getNewEmail());"
                  }
                ]
              },
              {
                "pathId": "9120-9119-9162-8630-8629-8639-8647-8642",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 324,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <=== com.crapi.entity.User */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 324,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 314,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    }\n  }\n\n  @Transactional\n  @Override\n  public User getUserFromTokenWithoutValidation(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromTokenWithoutValidation(request)",
                    "lineNumber": 181,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromTokenWithoutValidation */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 181,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.entity.User */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 182,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 183,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),\n              user.getEmail(),"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 183,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),\n              user.getEmail(),"
                  }
                ]
              },
              {
                "pathId": "8354-8367-8384-8401-8416-8411",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "@Data\npublic class LoginForm {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.LoginForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password;\n"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 84,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public JwtResponse authenticateUserLogin(LoginForm loginForm) throws BadCredentialsException {\n    JwtResponse jwtResponse = new JwtResponse();\n    Authentication authentication = null;\n    User user;\n    if (loginForm.getEmail() == null) { /* <=== com.crapi.model.LoginForm */ \n      jwtResponse.setMessage(UserMessage.EMAIL_NOT_PROVIDED);\n    } else {\n      if (loginForm.getEmail().contains(\"jndi:\")) {\n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 87,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    Authentication authentication = null;\n    User user;\n    if (loginForm.getEmail() == null) {\n      jwtResponse.setMessage(UserMessage.EMAIL_NOT_PROVIDED);\n    } else {\n      if (loginForm.getEmail().contains(\"jndi:\")) { /* <=== com.crapi.model.LoginForm */ \n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");\n          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(),"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 92,
                    "columnNumber": 15,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (loginForm.getEmail().contains(\"jndi:\")) {\n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");\n          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(), /* <=== com.crapi.model.LoginForm */ \n              LOG4J_LOGGER.getClass().getName(),\n              logger.getClass().getName());\n          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());\n        } else {\n          logger.info(\"Log4j is disabled\");"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 95,
                    "columnNumber": 70,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(),\n              LOG4J_LOGGER.getClass().getName(),\n              logger.getClass().getName());\n          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n        } else {\n          logger.info(\"Log4j is disabled\");\n        }\n      }\n      user = userRepository.findByEmail(loginForm.getEmail());"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 100,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());\n        } else {\n          logger.info(\"Log4j is disabled\");\n        }\n      }\n      user = userRepository.findByEmail(loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n      if (user == null) {\n        jwtResponse.setMessage(UserMessage.EMAIL_NOT_REGISTERED);\n      } else {\n        authentication =\n            authenticationManager.authenticate("
                  },
                  {
                    "sample": "findByEmail(loginForm.getEmail())",
                    "lineNumber": 100,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());\n        } else {\n          logger.info(\"Log4j is disabled\");\n        }\n      }\n      user = userRepository.findByEmail(loginForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      if (user == null) {\n        jwtResponse.setMessage(UserMessage.EMAIL_NOT_REGISTERED);\n      } else {\n        authentication =\n            authenticationManager.authenticate("
                  }
                ]
              },
              {
                "pathId": "7284-7297-7292",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 99,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  public ProfileVideo uploadProfileVideo(MultipartFile file, HttpServletRequest request) {\n    ProfileVideo profileVideo;\n    String conversionParam = \"-v codec h264\";\n    User user;\n    try {\n      user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 100,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    String conversionParam = \"-v codec h264\";\n    User user;\n    try {\n      user = userService.getUserFromToken(request);\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 100,
                    "columnNumber": 22,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    String conversionParam = \"-v codec h264\";\n    User user;\n    try {\n      user = userService.getUserFromToken(request);\n      profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n      if (profileVideo != null) {\n        profileVideo.setVideo(file.getBytes());\n        profileVideo.setConversion_params(conversionParam);\n        profileVideo.setVideo_name(file.getOriginalFilename());\n      } else {"
                  }
                ]
              },
              {
                "pathId": "9238-9246-9241",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginWithEmailToken.java",
                    "excerpt": "@Data\npublic class LoginWithEmailToken {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.LoginWithEmailToken' class */ \n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String token;\n}"
                  },
                  {
                    "sample": "loginWithEmailToken",
                    "lineNumber": 360,
                    "columnNumber": 65,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public JwtResponse loginWithEmailTokenV2(LoginWithEmailToken loginWithEmailToken) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    String jwt;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(loginWithEmailToken.getToken()); /* <=== com.crapi.model.LoginWithEmailToken */ \n    user = userRepository.findByEmail(loginWithEmailToken.getEmail());\n    if (changeEmailRequest != null\n        && user != null\n        && changeEmailRequest.getOldEmail().equalsIgnoreCase(user.getEmail())) {\n      jwt = jwtProvider.generateJwtToken(user);"
                  },
                  {
                    "sample": "loginWithEmailToken",
                    "lineNumber": 361,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public JwtResponse loginWithEmailTokenV2(LoginWithEmailToken loginWithEmailToken) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    String jwt;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(loginWithEmailToken.getToken());\n    user = userRepository.findByEmail(loginWithEmailToken.getEmail()); /* <=== com.crapi.model.LoginWithEmailToken */ \n    if (changeEmailRequest != null\n        && user != null\n        && changeEmailRequest.getOldEmail().equalsIgnoreCase(user.getEmail())) {\n      jwt = jwtProvider.generateJwtToken(user);\n      if (jwt != null) {"
                  },
                  {
                    "sample": "findByEmail(loginWithEmailToken.getEmail())",
                    "lineNumber": 361,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  public JwtResponse loginWithEmailTokenV2(LoginWithEmailToken loginWithEmailToken) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    String jwt;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(loginWithEmailToken.getToken());\n    user = userRepository.findByEmail(loginWithEmailToken.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (changeEmailRequest != null\n        && user != null\n        && changeEmailRequest.getOldEmail().equalsIgnoreCase(user.getEmail())) {\n      jwt = jwtProvider.generateJwtToken(user);\n      if (jwt != null) {"
                  }
                ]
              },
              {
                "pathId": "6958-6953-6952-6961-6980-6976",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 29,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/ForgetPassword.java",
                    "excerpt": "public class ForgetPassword implements Serializable {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  @Email\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.ForgetPassword' class */ \n}"
                  },
                  {
                    "sample": "forgetPassword",
                    "lineNumber": 141,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.model.ForgetPassword */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "findByEmail(forgetPassword.getEmail())",
                    "lineNumber": 141,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 141,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 142,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 147,
                    "columnNumber": 58,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n        if (checkOtpEnteryForUser != null) {\n          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 147,
                    "columnNumber": 33,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n        if (checkOtpEnteryForUser != null) {\n          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {"
                  }
                ]
              },
              {
                "pathId": "7421-7434-7429",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 146,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    profileVideo = profileVideoRepository.findByUser_id(user.getId());\n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 147,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 147,
                    "columnNumber": 20,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/ProfileServiceImpl.java",
                    "excerpt": "  @Override\n  public ProfileVideo updateProfileVideo(VideoForm videoForm, HttpServletRequest request) {\n    User user;\n    ProfileVideo profileVideo;\n    user = userService.getUserFromToken(request);\n    profileVideo = profileVideoRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.ProfileVideoRepository.findByUser_id */ \n    if (profileVideo != null) {\n      profileVideo.setVideo_name(videoForm.getVideoName());\n      profileVideo.setConversion_params(\n          (videoForm.getConversion_params() != null\n              ? videoForm.getConversion_params()"
                  }
                ]
              },
              {
                "pathId": "7918-7914",
                "path": [
                  {
                    "sample": "email",
                    "lineNumber": 41,
                    "columnNumber": 46,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== java.lang.String */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
                  },
                  {
                    "sample": "userRepository.findByEmail(email)",
                    "lineNumber": 41,
                    "columnNumber": 19,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
                  }
                ]
              },
              {
                "pathId": "9024-9023-9067-8795-8794-8803-8799",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 302,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <=== com.crapi.entity.User */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 302,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 293,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "   * @param request request getting jwt token for user from request header\n   * @return User object from token throw entity not found if user not found.\n   */\n  @Transactional\n  @Override\n  public User getUserFromToken(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    String username = null;\n    try {\n      username = jwtAuthTokenFilter.getUserFromToken(request);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromToken(request)",
                    "lineNumber": 231,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromToken */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 231,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    if (!userRepository.existsByEmail(changeEmailForm.getOld_email())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user);\n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest ="
                  },
                  {
                    "sample": "user",
                    "lineNumber": 233,
                    "columnNumber": 59,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  },
                  {
                    "sample": "changeEmailRepository.findByUser(user)",
                    "lineNumber": 233,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_NOT_REGISTERED + changeEmailForm.getOld_email(), 404);\n    }\n    token = emailTokenGenerator.generateRandom(10);\n    user = getUserFromToken(request);\n    // fetching ChangeEmail Data for user\n    changeEmailRequest = changeEmailRepository.findByUser(user); /* <=== com.crapi.repository.ChangeEmailRepository.findByUser */ \n    if (changeEmailRequest == null) {\n      // Creating new object if changeEmail data for user is not in database\n      changeEmailRequest =\n          new ChangeEmailRequest(\n              changeEmailForm.getNew_email(), changeEmailForm.getOld_email(), token, user);"
                  }
                ]
              },
              {
                "pathId": "9564-9572-9582-9577",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 121,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Override\n  public List<VehicleDetails> getVehicleDetails(HttpServletRequest request) {\n    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n      if (user != null) {\n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId());\n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 122,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public List<VehicleDetails> getVehicleDetails(HttpServletRequest request) {\n    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request);\n      if (user != null) { /* <=== com.crapi.entity.User */ \n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId());\n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);\n          }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 123,
                    "columnNumber": 73,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request);\n      if (user != null) {\n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId()); /* <=== com.crapi.entity.User */ \n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);\n          }\n          return vehicleDetailsList;"
                  },
                  {
                    "sample": "findAllByOwner_id(user.getId())",
                    "lineNumber": 123,
                    "columnNumber": 30,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request);\n      if (user != null) {\n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId()); /* <=== com.crapi.repository.VehicleDetailsRepository.findAllByOwner_id */ \n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);\n          }\n          return vehicleDetailsList;"
                  }
                ]
              },
              {
                "pathId": "6690-6699-21890-12059-6653-6674-6669-6668-6677-6686-6682",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 33,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 5, max = 30)\n  private String password;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.OtpForm' class */ \n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 82,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) { /* <=== com.crapi.model.OtpForm */ \n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 83,
                    "columnNumber": 41,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword())); /* <=== com.crapi.model.OtpForm */ \n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);\n      } else {\n        otp.setCount(otp.getCount() + 1);"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "this.getDummyOtpForm()",
                    "lineNumber": 83,
                    "columnNumber": 28,
                    "fileName": "/app/code/services/identity/src/test/java/com/crapi/service/Impl/OtpServiceImplTest.java",
                    "excerpt": "  }\n\n  @Test(expected = EntityNotFoundException.class)\n  public void validateOtpThrowsExceptionWhenUserNotFound() {\n    Mockito.when(userRepository.findByEmail(Mockito.anyString())).thenReturn(null);\n    otpService.validateOtp(getDummyOtpForm()); /* <=== com.crapi.service.Impl.OtpServiceImplTest.getDummyOtpForm */ \n  }\n\n  @Test\n  public void validateOtpSuccess() {\n    Otp otp = getDummyOtp();"
                  },
                  {
                    "sample": "OtpForm otpForm",
                    "lineNumber": 75,
                    "columnNumber": 36,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "   * @param otpForm\n   * @return otp object, validate the otp and then reset the password of user\n   */\n  @Transactional\n  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 79,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 79,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 79,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  @Override\n  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 80,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse validateOtp(OtpForm otpForm) {\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 81,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 81,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  }
                ]
              },
              {
                "pathId": "6789-6784-6783-6792-6801-6797",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 33,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 5, max = 30)\n  private String password;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.OtpForm' class */ \n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 103,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 103,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 103,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 104,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 105,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  },
                  {
                    "sample": "otpRepository.findByUser(user)",
                    "lineNumber": 105,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail());\n    if (user != null) {\n      otp = otpRepository.findByUser(user); /* <=== com.crapi.repository.OtpRepository.findByUser */ \n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);\n        otp.setStatus(EStatus.INACTIVE.toString());\n        validateOTPResponse = new CRAPIResponse(UserMessage.OTP_VARIFIED_SUCCESS, 200);"
                  }
                ]
              },
              {
                "pathId": "9120-9119-9162-8630-8629-8639-8634",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 324,
                    "columnNumber": 16,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <=== com.crapi.entity.User */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "return user;",
                    "lineNumber": 324,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {\n        user = userRepository.findByEmail(username);\n      }\n\n      if (user != null) {\n        return user; /* <===  */ \n      } else {\n        throw new EntityNotFoundException(User.class, \"userEmail\", username);\n      }\n    } catch (ParseException exception) {\n      logger.error(\"fail to get username from token -> Message:%d\", exception);"
                  },
                  {
                    "sample": "com.crapi.entity.User",
                    "lineNumber": 314,
                    "columnNumber": 10,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    }\n  }\n\n  @Transactional\n  @Override\n  public User getUserFromTokenWithoutValidation(HttpServletRequest request) { /* <===  */ \n    User user = null;\n    try {\n      String jwt = jwtAuthTokenFilter.getJwt(request);\n      String username = jwtProvider.getUserNameFromJwtToken(jwt);\n      if (username != null && !username.equalsIgnoreCase(EStatus.INVALID.toString())) {"
                  },
                  {
                    "sample": "this.getUserFromTokenWithoutValidation(request)",
                    "lineNumber": 181,
                    "columnNumber": 14,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.service.Impl.UserServiceImpl.getUserFromTokenWithoutValidation */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 181,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    DashboardResponse dashboardResponse;\n    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request); /* <=== com.crapi.entity.User */ \n      userDetails = userDetailsRepository.findByUser_id(user.getId());\n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 182,
                    "columnNumber": 57,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),"
                  },
                  {
                    "sample": "findByUser_id(user.getId())",
                    "lineNumber": 182,
                    "columnNumber": 21,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    ProfileVideo profileVideo;\n    try {\n      // Invalid Signature vulnerability\n      // Not Checking the validity of the token for this request\n      user = getUserFromTokenWithoutValidation(request);\n      userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.repository.UserDetailsRepository.findByUser_id */ \n      profileVideo = profileVideoRepository.findByUser_id(user.getId());\n      dashboardResponse =\n          new DashboardResponse(\n              user.getId(),\n              (userDetails != null ? userDetails.getName() : \"\"),"
                  }
                ]
              },
              {
                "pathId": "6789-6784",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 33,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/OtpForm.java",
                    "excerpt": "  @Size(min = 5, max = 30)\n  private String password;\n\n  @NotBlank\n  @Size(min = 5, max = 30)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.OtpForm' class */ \n}"
                  },
                  {
                    "sample": "otpForm",
                    "lineNumber": 103,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.model.OtpForm */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  },
                  {
                    "sample": "findByEmail(otpForm.getEmail())",
                    "lineNumber": 103,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "  public CRAPIResponse secureValidateOtp(OtpForm otpForm) {\n    CRAPIResponse crapiAPIResponse = null;\n    CRAPIResponse validateOTPResponse = null;\n    User user = null;\n    Otp otp = null;\n    user = userRepository.findByEmail(otpForm.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      otp = otpRepository.findByUser(user);\n      if (validateOTPAndEmail(otp, otpForm)) {\n        user.setPassword(encoder.encode(otpForm.getPassword()));\n        userRepository.save(user);"
                  }
                ]
              },
              {
                "pathId": "9238-9233",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginWithEmailToken.java",
                    "excerpt": "@Data\npublic class LoginWithEmailToken {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.LoginWithEmailToken' class */ \n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String token;\n}"
                  },
                  {
                    "sample": "loginWithEmailToken",
                    "lineNumber": 360,
                    "columnNumber": 65,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public JwtResponse loginWithEmailTokenV2(LoginWithEmailToken loginWithEmailToken) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    String jwt;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(loginWithEmailToken.getToken()); /* <=== com.crapi.model.LoginWithEmailToken */ \n    user = userRepository.findByEmail(loginWithEmailToken.getEmail());\n    if (changeEmailRequest != null\n        && user != null\n        && changeEmailRequest.getOldEmail().equalsIgnoreCase(user.getEmail())) {\n      jwt = jwtProvider.generateJwtToken(user);"
                  },
                  {
                    "sample": "findByEmailToken(loginWithEmailToken.getToken())",
                    "lineNumber": 360,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public JwtResponse loginWithEmailTokenV2(LoginWithEmailToken loginWithEmailToken) {\n    ChangeEmailRequest changeEmailRequest;\n    User user;\n    String jwt;\n    changeEmailRequest = changeEmailRepository.findByEmailToken(loginWithEmailToken.getToken()); /* <=== com.crapi.repository.ChangeEmailRepository.findByEmailToken */ \n    user = userRepository.findByEmail(loginWithEmailToken.getEmail());\n    if (changeEmailRequest != null\n        && user != null\n        && changeEmailRequest.getOldEmail().equalsIgnoreCase(user.getEmail())) {\n      jwt = jwtProvider.generateJwtToken(user);"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "miscellaneous": [],
    "internal_apis": [],
    "leakages": [
      {
        "sourceId": "Data.Sensitive.AccountData.AccountPassword",
        "sinks": [
          {
            "sinkType": "leakages",
            "id": "Leakages.Log.Info",
            "name": "Log Info",
            "category": "",
            "domains": [],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "",
              "dbVendor": "",
              "dbLocation": "",
              "dbOperation": ""
            },
            "paths": [
              {
                "pathId": "6958-6953-6952-6961-6980-7000-7017-7016-11220-11244",
                "path": [
                  {
                    "sample": "forgetPassword",
                    "lineNumber": 141,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.model.ForgetPassword */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "findByEmail(forgetPassword.getEmail())",
                    "lineNumber": 141,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 141,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    CRAPIResponse forgetPasswordResponse = null;\n    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail()); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 142,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    OTPGenerator otpGenerator = new OTPGenerator();\n    Otp checkOtpEnteryForUser = null;\n    User user = null;\n    String otp = \"\";\n    user = userRepository.findByEmail(forgetPassword.getEmail());\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 147,
                    "columnNumber": 58,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "    if (user != null) {\n      // Generate random 4 digit otp\n      otp = otpGenerator.generateRandom(4);\n      if (otp != null) {\n        // Check OTP entry for user in database.\n        checkOtpEnteryForUser = otpRepository.findByUser(user); /* <=== com.crapi.entity.User */ \n        if (checkOtpEnteryForUser != null) {\n          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 154,
                    "columnNumber": 48,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "          // Update existing object\n          checkOtpEnteryForUser.setCount(0);\n          checkOtpEnteryForUser.setOtp(otp);\n        } else {\n          // Create new OTP object\n          checkOtpEnteryForUser = new Otp(otp, user); /* <=== com.crapi.entity.User */ \n        }\n        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString());\n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser);\n        // Sent OTP mail to user email address."
                  },
                  {
                    "sample": "user",
                    "lineNumber": 161,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString());\n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser);\n        // Sent OTP mail to user email address.\n        smtpMailServer.sendMail(\n            user.getEmail(), MailBody.otpMailBody(checkOtpEnteryForUser), \"crAPI OTP\"); /* <=== com.crapi.entity.User */ \n        return new CRAPIResponse(UserMessage.OTP_SEND_SUCCESS_ON_EMAIL + user.getEmail(), 200);\n      }\n      throw new RuntimeException();\n    }\n    return new CRAPIResponse(UserMessage.EMAIL_NOT_REGISTERED + forgetPassword.getEmail(), 404);"
                  },
                  {
                    "sample": "getEmail()",
                    "lineNumber": 161,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/OtpServiceImpl.java",
                    "excerpt": "        checkOtpEnteryForUser.setStatus(EStatus.ACTIVE.toString());\n        // Save otp details in Database.\n        otpRepository.save(checkOtpEnteryForUser);\n        // Sent OTP mail to user email address.\n        smtpMailServer.sendMail(\n            user.getEmail(), MailBody.otpMailBody(checkOtpEnteryForUser), \"crAPI OTP\"); /* <=== com.crapi.entity.User.getEmail */ \n        return new CRAPIResponse(UserMessage.OTP_SEND_SUCCESS_ON_EMAIL + user.getEmail(), 200);\n      }\n      throw new RuntimeException();\n    }\n    return new CRAPIResponse(UserMessage.EMAIL_NOT_REGISTERED + forgetPassword.getEmail(), 404);"
                  },
                  {
                    "sample": "String sendMail",
                    "lineNumber": 42,
                    "columnNumber": 24,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "  /**\n   * @param sendMail\n   * @param body\n   * @param subject send mail to given email with dynamic subject and body\n   */\n  public void sendMail(String sendMail, String body, String subject) { /* <===  */ \n    String mhogDomain = mailhogConfiguration.getDomain();\n    Session session = mailhogConfiguration.sendmail();\n    boolean useMailHog = false;\n    try {\n      logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail);"
                  },
                  {
                    "sample": "logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail)",
                    "lineNumber": 47,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "  public void sendMail(String sendMail, String body, String subject) {\n    String mhogDomain = mailhogConfiguration.getDomain();\n    Session session = mailhogConfiguration.sendmail();\n    boolean useMailHog = false;\n    try {\n      logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail); /* <=== org.slf4j.Logger.info */ \n      InternetAddress[] emails = InternetAddress.parse(sendMail);\n      if (mhogDomain != null && !mhogDomain.isEmpty()) {\n        if (mailConfiguration.getHost().trim().endsWith(mhogDomain)) {\n          logger.info(\n              \"SMTP host matches MailHog host. Using MailHog Configuration for sending emails\");"
                  }
                ]
              },
              {
                "pathId": "8084-8087-8107-8103-8102-8110-8119-8113",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 90,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    if (userRepository.existsByEmail(signUpRequest.getEmail())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user = /* <=== com.crapi.entity.User */ \n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 90,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    if (userRepository.existsByEmail(signUpRequest.getEmail())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user = /* <=== com.crapi.entity.User */ \n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 96,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 96,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 96,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 97,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {\n        userDetailsRepository.save(userDetails);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 98,
                    "columnNumber": 64,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId()); /* <=== com.crapi.entity.User */ \n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {\n        userDetailsRepository.save(userDetails);\n        logger.info(\"User Details Created successful with userId {}\", userDetails.getId());"
                  },
                  {
                    "sample": "info(\"User registered successful with userId {}\", user.getId())",
                    "lineNumber": 98,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId()); /* <=== org.slf4j.Logger.info */ \n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {\n        userDetailsRepository.save(userDetails);\n        logger.info(\"User Details Created successful with userId {}\", userDetails.getId());"
                  }
                ]
              },
              {
                "pathId": "9830-9843-9887-9886-11220-11256-11353",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 209,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public CRAPIResponse sendVehicleDetails(HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    userDetails = userDetailsRepository.findByUser_id(user.getId());\n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 210,
                    "columnNumber": 55,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request);\n    userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;\n        break;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 222,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    }\n    if (vehicleDetails == null) {\n      vehicleDetails = createVehicle();\n    }\n    smtpMailServer.sendMail(\n        user.getEmail(), /* <=== com.crapi.entity.User */ \n        MailBody.signupMailBody(\n            vehicleDetails,\n            (userDetails != null && userDetails.getName() != null ? userDetails.getName() : \"\")),\n        \"Welcome to crAPI\");\n    return new CRAPIResponse(UserMessage.VEHICLE_DETAILS_SENT_TO_EMAIL, 200);"
                  },
                  {
                    "sample": "getEmail()",
                    "lineNumber": 222,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    }\n    if (vehicleDetails == null) {\n      vehicleDetails = createVehicle();\n    }\n    smtpMailServer.sendMail(\n        user.getEmail(), /* <=== com.crapi.entity.User.getEmail */ \n        MailBody.signupMailBody(\n            vehicleDetails,\n            (userDetails != null && userDetails.getName() != null ? userDetails.getName() : \"\")),\n        \"Welcome to crAPI\");\n    return new CRAPIResponse(UserMessage.VEHICLE_DETAILS_SENT_TO_EMAIL, 200);"
                  },
                  {
                    "sample": "String sendMail",
                    "lineNumber": 42,
                    "columnNumber": 24,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "  /**\n   * @param sendMail\n   * @param body\n   * @param subject send mail to given email with dynamic subject and body\n   */\n  public void sendMail(String sendMail, String body, String subject) { /* <===  */ \n    String mhogDomain = mailhogConfiguration.getDomain();\n    Session session = mailhogConfiguration.sendmail();\n    boolean useMailHog = false;\n    try {\n      logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail);"
                  },
                  {
                    "sample": "sendMail",
                    "lineNumber": 48,
                    "columnNumber": 56,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "    String mhogDomain = mailhogConfiguration.getDomain();\n    Session session = mailhogConfiguration.sendmail();\n    boolean useMailHog = false;\n    try {\n      logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail);\n      InternetAddress[] emails = InternetAddress.parse(sendMail); /* <=== java.lang.String */ \n      if (mhogDomain != null && !mhogDomain.isEmpty()) {\n        if (mailConfiguration.getHost().trim().endsWith(mhogDomain)) {\n          logger.info(\n              \"SMTP host matches MailHog host. Using MailHog Configuration for sending emails\");\n          useMailHog = true;"
                  },
                  {
                    "sample": "logger.info(\"Using Mail Configuration for sending email: \" + sendMail)",
                    "lineNumber": 68,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "          }\n        }\n      }\n      if (!useMailHog) {\n        session = mailConfiguration.sendmail();\n        logger.info(\"Using Mail Configuration for sending email: \" + sendMail); /* <=== org.slf4j.Logger.info */ \n      }\n\n      Message msg = new MimeMessage(session);\n\n      msg.setFrom(new InternetAddress(mailhogConfiguration.getFrom(), false));"
                  }
                ]
              }
            ]
          },
          {
            "sinkType": "leakages",
            "id": "Leakages.Log.Console",
            "name": "Log Console",
            "category": "",
            "domains": [],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "",
              "dbVendor": "",
              "dbLocation": "",
              "dbOperation": ""
            },
            "paths": [
              {
                "pathId": "7913-7923-7919",
                "path": [
                  {
                    "sample": "java.lang.String password",
                    "lineNumber": 36,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email;\n  private String password; /* <=== 'password' is a member of 'com.crapi.entity.User' class */ \n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;\n"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 41,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== com.crapi.entity.User */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 42,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email);\n      System.out.println(user); /* <=== com.crapi.entity.User */ \n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }\n  }"
                  },
                  {
                    "sample": "System.out.println(user)",
                    "lineNumber": 42,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email);\n      System.out.println(user); /* <=== java.io.PrintStream.println */ \n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }\n  }"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "sourceId": "Data.Sensitive.ContactData.EmailAddress",
        "sinks": [
          {
            "sinkType": "leakages",
            "id": "Leakages.Log.Info",
            "name": "Log Info",
            "category": "",
            "domains": [],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "",
              "dbVendor": "",
              "dbLocation": "",
              "dbOperation": ""
            },
            "paths": [
              {
                "pathId": "8354-8367-8384-8378",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "@Data\npublic class LoginForm {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.LoginForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password;\n"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 84,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public JwtResponse authenticateUserLogin(LoginForm loginForm) throws BadCredentialsException {\n    JwtResponse jwtResponse = new JwtResponse();\n    Authentication authentication = null;\n    User user;\n    if (loginForm.getEmail() == null) { /* <=== com.crapi.model.LoginForm */ \n      jwtResponse.setMessage(UserMessage.EMAIL_NOT_PROVIDED);\n    } else {\n      if (loginForm.getEmail().contains(\"jndi:\")) {\n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 87,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    Authentication authentication = null;\n    User user;\n    if (loginForm.getEmail() == null) {\n      jwtResponse.setMessage(UserMessage.EMAIL_NOT_PROVIDED);\n    } else {\n      if (loginForm.getEmail().contains(\"jndi:\")) { /* <=== com.crapi.model.LoginForm */ \n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");\n          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(),"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 92,
                    "columnNumber": 15,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (loginForm.getEmail().contains(\"jndi:\")) {\n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");\n          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(), /* <=== com.crapi.model.LoginForm */ \n              LOG4J_LOGGER.getClass().getName(),\n              logger.getClass().getName());\n          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());\n        } else {\n          logger.info(\"Log4j is disabled\");"
                  },
                  {
                    "sample": "info(\"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\", loginForm.getEmail(), LOG4J_LOGGER.getClass().getName(), logger.getClass().getName())",
                    "lineNumber": 90,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      jwtResponse.setMessage(UserMessage.EMAIL_NOT_PROVIDED);\n    } else {\n      if (loginForm.getEmail().contains(\"jndi:\")) {\n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");\n          logger.info( /* <=== org.slf4j.Logger.info */ \n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(),\n              LOG4J_LOGGER.getClass().getName(),\n              logger.getClass().getName());\n          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());"
                  }
                ]
              },
              {
                "pathId": "9830-9843-9887-9886-11220-11244",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 209,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public CRAPIResponse sendVehicleDetails(HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    userDetails = userDetailsRepository.findByUser_id(user.getId());\n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 210,
                    "columnNumber": 55,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request);\n    userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;\n        break;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 222,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    }\n    if (vehicleDetails == null) {\n      vehicleDetails = createVehicle();\n    }\n    smtpMailServer.sendMail(\n        user.getEmail(), /* <=== com.crapi.entity.User */ \n        MailBody.signupMailBody(\n            vehicleDetails,\n            (userDetails != null && userDetails.getName() != null ? userDetails.getName() : \"\")),\n        \"Welcome to crAPI\");\n    return new CRAPIResponse(UserMessage.VEHICLE_DETAILS_SENT_TO_EMAIL, 200);"
                  },
                  {
                    "sample": "getEmail()",
                    "lineNumber": 222,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    }\n    if (vehicleDetails == null) {\n      vehicleDetails = createVehicle();\n    }\n    smtpMailServer.sendMail(\n        user.getEmail(), /* <=== com.crapi.entity.User.getEmail */ \n        MailBody.signupMailBody(\n            vehicleDetails,\n            (userDetails != null && userDetails.getName() != null ? userDetails.getName() : \"\")),\n        \"Welcome to crAPI\");\n    return new CRAPIResponse(UserMessage.VEHICLE_DETAILS_SENT_TO_EMAIL, 200);"
                  },
                  {
                    "sample": "String sendMail",
                    "lineNumber": 42,
                    "columnNumber": 24,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "  /**\n   * @param sendMail\n   * @param body\n   * @param subject send mail to given email with dynamic subject and body\n   */\n  public void sendMail(String sendMail, String body, String subject) { /* <===  */ \n    String mhogDomain = mailhogConfiguration.getDomain();\n    Session session = mailhogConfiguration.sendmail();\n    boolean useMailHog = false;\n    try {\n      logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail);"
                  },
                  {
                    "sample": "logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail)",
                    "lineNumber": 47,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "  public void sendMail(String sendMail, String body, String subject) {\n    String mhogDomain = mailhogConfiguration.getDomain();\n    Session session = mailhogConfiguration.sendmail();\n    boolean useMailHog = false;\n    try {\n      logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail); /* <=== org.slf4j.Logger.info */ \n      InternetAddress[] emails = InternetAddress.parse(sendMail);\n      if (mhogDomain != null && !mhogDomain.isEmpty()) {\n        if (mailConfiguration.getHost().trim().endsWith(mhogDomain)) {\n          logger.info(\n              \"SMTP host matches MailHog host. Using MailHog Configuration for sending emails\");"
                  }
                ]
              },
              {
                "pathId": "8043-8066-8089-8091-8097-8124-8202-8210-8204",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 37,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/SignUpForm.java",
                    "excerpt": "  private String password;\n\n  @NotBlank\n  @Size(max = 100)\n  @Email\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.SignUpForm' class */ \n\n  @NotBlank\n  @Size(max = 15)\n  private String number;\n"
                  },
                  {
                    "sample": "signUpRequest",
                    "lineNumber": 80,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "  public CRAPIResponse registerUser(SignUpForm signUpRequest) {\n    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails;\n    // Check Number in database\n    if (userRepository.existsByNumber(signUpRequest.getNumber())) { /* <=== com.crapi.model.SignUpForm */ \n      return new CRAPIResponse(\n          UserMessage.NUMBER_ALREADY_REGISTERED + signUpRequest.getNumber(), 403);\n    }\n    // check Number in database\n    if (userRepository.existsByEmail(signUpRequest.getEmail())) {"
                  },
                  {
                    "sample": "signUpRequest",
                    "lineNumber": 85,
                    "columnNumber": 38,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    if (userRepository.existsByNumber(signUpRequest.getNumber())) {\n      return new CRAPIResponse(\n          UserMessage.NUMBER_ALREADY_REGISTERED + signUpRequest.getNumber(), 403);\n    }\n    // check Number in database\n    if (userRepository.existsByEmail(signUpRequest.getEmail())) { /* <=== com.crapi.model.SignUpForm */ \n      return new CRAPIResponse(\n          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user ="
                  },
                  {
                    "sample": "signUpRequest",
                    "lineNumber": 92,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user =\n        new User(\n            signUpRequest.getEmail(), /* <=== com.crapi.model.SignUpForm */ \n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) {"
                  },
                  {
                    "sample": "signUpRequest",
                    "lineNumber": 93,
                    "columnNumber": 13,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    }\n    // Register new user in Database\n    user =\n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(), /* <=== com.crapi.model.SignUpForm */ \n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());"
                  },
                  {
                    "sample": "signUpRequest",
                    "lineNumber": 94,
                    "columnNumber": 28,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    // Register new user in Database\n    user =\n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()), /* <=== com.crapi.model.SignUpForm */ \n            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user"
                  },
                  {
                    "sample": "signUpRequest",
                    "lineNumber": 100,
                    "columnNumber": 39,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user); /* <=== com.crapi.model.SignUpForm */ \n      if (userDetails != null) {\n        userDetailsRepository.save(userDetails);\n        logger.info(\"User Details Created successful with userId {}\", userDetails.getId());\n      }\n"
                  },
                  {
                    "sample": "signUpRequest",
                    "lineNumber": 120,
                    "columnNumber": 52,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "                    : \"\")),\n            \"Welcome to crAPI\");\n        return new CRAPIResponse(UserMessage.SIGN_UP_SUCCESS_MESSAGE, 200);\n      }\n      throw new EntityNotFoundException(\n          VehicleDetails.class, UserMessage.ERROR, signUpRequest.getName()); /* <=== com.crapi.model.SignUpForm */ \n    }\n    logger.info(\"User registration failed {}\", signUpRequest.getEmail());\n    return new CRAPIResponse(UserMessage.SIGN_UP_FAILED + signUpRequest.getEmail(), 400);\n  }\n}"
                  },
                  {
                    "sample": "signUpRequest",
                    "lineNumber": 122,
                    "columnNumber": 48,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        return new CRAPIResponse(UserMessage.SIGN_UP_SUCCESS_MESSAGE, 200);\n      }\n      throw new EntityNotFoundException(\n          VehicleDetails.class, UserMessage.ERROR, signUpRequest.getName());\n    }\n    logger.info(\"User registration failed {}\", signUpRequest.getEmail()); /* <=== com.crapi.model.SignUpForm */ \n    return new CRAPIResponse(UserMessage.SIGN_UP_FAILED + signUpRequest.getEmail(), 400);\n  }\n}"
                  },
                  {
                    "sample": "info(\"User registration failed {}\", signUpRequest.getEmail())",
                    "lineNumber": 122,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        return new CRAPIResponse(UserMessage.SIGN_UP_SUCCESS_MESSAGE, 200);\n      }\n      throw new EntityNotFoundException(\n          VehicleDetails.class, UserMessage.ERROR, signUpRequest.getName());\n    }\n    logger.info(\"User registration failed {}\", signUpRequest.getEmail()); /* <=== org.slf4j.Logger.info */ \n    return new CRAPIResponse(UserMessage.SIGN_UP_FAILED + signUpRequest.getEmail(), 400);\n  }\n}"
                  }
                ]
              },
              {
                "pathId": "8084-8087-8107-8103-8102-8110-8119-8113",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 90,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    if (userRepository.existsByEmail(signUpRequest.getEmail())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user = /* <=== com.crapi.entity.User */ \n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 90,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "    if (userRepository.existsByEmail(signUpRequest.getEmail())) {\n      return new CRAPIResponse(\n          UserMessage.EMAIL_ALREADY_REGISTERED + signUpRequest.getEmail(), 403);\n    }\n    // Register new user in Database\n    user = /* <=== com.crapi.entity.User */ \n        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 96,
                    "columnNumber": 32,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  },
                  {
                    "sample": "userRepository.save(user)",
                    "lineNumber": 96,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.repository.UserRepository.save */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 96,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "        new User(\n            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user); /* <=== com.crapi.entity.User */ \n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 97,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "            signUpRequest.getEmail(),\n            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) { /* <=== com.crapi.entity.User */ \n      logger.info(\"User registered successful with userId {}\", user.getId());\n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {\n        userDetailsRepository.save(userDetails);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 98,
                    "columnNumber": 64,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId()); /* <=== com.crapi.entity.User */ \n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {\n        userDetailsRepository.save(userDetails);\n        logger.info(\"User Details Created successful with userId {}\", userDetails.getId());"
                  },
                  {
                    "sample": "info(\"User registered successful with userId {}\", user.getId())",
                    "lineNumber": 98,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserRegistrationServiceImpl.java",
                    "excerpt": "            signUpRequest.getNumber(),\n            encoder.encode(signUpRequest.getPassword()),\n            ERole.ROLE_USER);\n    user = userRepository.save(user);\n    if (user != null) {\n      logger.info(\"User registered successful with userId {}\", user.getId()); /* <=== org.slf4j.Logger.info */ \n      // Creating User Details for same user\n      userDetails = createUserDetails(signUpRequest.getName(), user);\n      if (userDetails != null) {\n        userDetailsRepository.save(userDetails);\n        logger.info(\"User Details Created successful with userId {}\", userDetails.getId());"
                  }
                ]
              },
              {
                "pathId": "9830-9843-9887-9886-11220-11256-11353",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 209,
                    "columnNumber": 5,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public CRAPIResponse sendVehicleDetails(HttpServletRequest request) {\n    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n    userDetails = userDetailsRepository.findByUser_id(user.getId());\n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 210,
                    "columnNumber": 55,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    User user;\n    UserDetails userDetails;\n    VehicleDetails vehicleDetails = null;\n    List<VehicleDetails> vehicleDetailList = null;\n    user = userService.getUserFromToken(request);\n    userDetails = userDetailsRepository.findByUser_id(user.getId()); /* <=== com.crapi.entity.User */ \n    vehicleDetailList = vehicleDetailsRepository.findAll();\n    for (VehicleDetails vehicleDetail : vehicleDetailList) {\n      if (vehicleDetail.getOwner() == null) {\n        vehicleDetails = vehicleDetail;\n        break;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 222,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    }\n    if (vehicleDetails == null) {\n      vehicleDetails = createVehicle();\n    }\n    smtpMailServer.sendMail(\n        user.getEmail(), /* <=== com.crapi.entity.User */ \n        MailBody.signupMailBody(\n            vehicleDetails,\n            (userDetails != null && userDetails.getName() != null ? userDetails.getName() : \"\")),\n        \"Welcome to crAPI\");\n    return new CRAPIResponse(UserMessage.VEHICLE_DETAILS_SENT_TO_EMAIL, 200);"
                  },
                  {
                    "sample": "getEmail()",
                    "lineNumber": 222,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "    }\n    if (vehicleDetails == null) {\n      vehicleDetails = createVehicle();\n    }\n    smtpMailServer.sendMail(\n        user.getEmail(), /* <=== com.crapi.entity.User.getEmail */ \n        MailBody.signupMailBody(\n            vehicleDetails,\n            (userDetails != null && userDetails.getName() != null ? userDetails.getName() : \"\")),\n        \"Welcome to crAPI\");\n    return new CRAPIResponse(UserMessage.VEHICLE_DETAILS_SENT_TO_EMAIL, 200);"
                  },
                  {
                    "sample": "String sendMail",
                    "lineNumber": 42,
                    "columnNumber": 24,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "  /**\n   * @param sendMail\n   * @param body\n   * @param subject send mail to given email with dynamic subject and body\n   */\n  public void sendMail(String sendMail, String body, String subject) { /* <===  */ \n    String mhogDomain = mailhogConfiguration.getDomain();\n    Session session = mailhogConfiguration.sendmail();\n    boolean useMailHog = false;\n    try {\n      logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail);"
                  },
                  {
                    "sample": "sendMail",
                    "lineNumber": 48,
                    "columnNumber": 56,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "    String mhogDomain = mailhogConfiguration.getDomain();\n    Session session = mailhogConfiguration.sendmail();\n    boolean useMailHog = false;\n    try {\n      logger.info(\"sendMail  mhogDomain: {}, emails: {}\", mhogDomain, sendMail);\n      InternetAddress[] emails = InternetAddress.parse(sendMail); /* <=== java.lang.String */ \n      if (mhogDomain != null && !mhogDomain.isEmpty()) {\n        if (mailConfiguration.getHost().trim().endsWith(mhogDomain)) {\n          logger.info(\n              \"SMTP host matches MailHog host. Using MailHog Configuration for sending emails\");\n          useMailHog = true;"
                  },
                  {
                    "sample": "logger.info(\"Using Mail Configuration for sending email: \" + sendMail)",
                    "lineNumber": 68,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "          }\n        }\n      }\n      if (!useMailHog) {\n        session = mailConfiguration.sendmail();\n        logger.info(\"Using Mail Configuration for sending email: \" + sendMail); /* <=== org.slf4j.Logger.info */ \n      }\n\n      Message msg = new MimeMessage(session);\n\n      msg.setFrom(new InternetAddress(mailhogConfiguration.getFrom(), false));"
                  }
                ]
              }
            ]
          },
          {
            "sinkType": "leakages",
            "id": "Leakages.Log.Debug",
            "name": "Log Debug",
            "category": "",
            "domains": [],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "",
              "dbVendor": "",
              "dbLocation": "",
              "dbOperation": ""
            },
            "paths": [
              {
                "pathId": "11315-11312-11310-11309-11326-11325-11324-11318",
                "path": [
                  {
                    "sample": "email",
                    "lineNumber": 57,
                    "columnNumber": 43,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "              \"SMTP host matches MailHog host. Using MailHog Configuration for sending emails\");\n          useMailHog = true;\n        }\n        for (InternetAddress emailAddress : emails) {\n          String email = emailAddress.toString();\n          String domain = email.substring(email.indexOf(\"@\") + 1).trim(); /* <=== java.lang.String */ \n          logger.debug(\n              \"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain);\n          if (mhogDomain.trim().equals(domain)) {\n            logger.info(\"Using MailHog Configuration for sending email for domain: \" + domain);\n            useMailHog = true;"
                  },
                  {
                    "sample": "email",
                    "lineNumber": 57,
                    "columnNumber": 27,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "              \"SMTP host matches MailHog host. Using MailHog Configuration for sending emails\");\n          useMailHog = true;\n        }\n        for (InternetAddress emailAddress : emails) {\n          String email = emailAddress.toString();\n          String domain = email.substring(email.indexOf(\"@\") + 1).trim(); /* <=== java.lang.String */ \n          logger.debug(\n              \"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain);\n          if (mhogDomain.trim().equals(domain)) {\n            logger.info(\"Using MailHog Configuration for sending email for domain: \" + domain);\n            useMailHog = true;"
                  },
                  {
                    "sample": "email.substring(email.indexOf(\"@\") + 1).trim()",
                    "lineNumber": 57,
                    "columnNumber": 27,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "              \"SMTP host matches MailHog host. Using MailHog Configuration for sending emails\");\n          useMailHog = true;\n        }\n        for (InternetAddress emailAddress : emails) {\n          String email = emailAddress.toString();\n          String domain = email.substring(email.indexOf(\"@\") + 1).trim(); /* <=== java.lang.String.trim */ \n          logger.debug(\n              \"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain);\n          if (mhogDomain.trim().equals(domain)) {\n            logger.info(\"Using MailHog Configuration for sending email for domain: \" + domain);\n            useMailHog = true;"
                  },
                  {
                    "sample": "domain",
                    "lineNumber": 57,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "              \"SMTP host matches MailHog host. Using MailHog Configuration for sending emails\");\n          useMailHog = true;\n        }\n        for (InternetAddress emailAddress : emails) {\n          String email = emailAddress.toString();\n          String domain = email.substring(email.indexOf(\"@\") + 1).trim(); /* <=== java.lang.String */ \n          logger.debug(\n              \"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain);\n          if (mhogDomain.trim().equals(domain)) {\n            logger.info(\"Using MailHog Configuration for sending email for domain: \" + domain);\n            useMailHog = true;"
                  },
                  {
                    "sample": "domain",
                    "lineNumber": 59,
                    "columnNumber": 85,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "        }\n        for (InternetAddress emailAddress : emails) {\n          String email = emailAddress.toString();\n          String domain = email.substring(email.indexOf(\"@\") + 1).trim();\n          logger.debug(\n              \"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain); /* <=== java.lang.String */ \n          if (mhogDomain.trim().equals(domain)) {\n            logger.info(\"Using MailHog Configuration for sending email for domain: \" + domain);\n            useMailHog = true;\n          }\n        }"
                  },
                  {
                    "sample": "email",
                    "lineNumber": 59,
                    "columnNumber": 78,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "        }\n        for (InternetAddress emailAddress : emails) {\n          String email = emailAddress.toString();\n          String domain = email.substring(email.indexOf(\"@\") + 1).trim();\n          logger.debug(\n              \"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain); /* <=== java.lang.String */ \n          if (mhogDomain.trim().equals(domain)) {\n            logger.info(\"Using MailHog Configuration for sending email for domain: \" + domain);\n            useMailHog = true;\n          }\n        }"
                  },
                  {
                    "sample": "mhogDomain",
                    "lineNumber": 59,
                    "columnNumber": 66,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "        }\n        for (InternetAddress emailAddress : emails) {\n          String email = emailAddress.toString();\n          String domain = email.substring(email.indexOf(\"@\") + 1).trim();\n          logger.debug(\n              \"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain); /* <=== java.lang.String */ \n          if (mhogDomain.trim().equals(domain)) {\n            logger.info(\"Using MailHog Configuration for sending email for domain: \" + domain);\n            useMailHog = true;\n          }\n        }"
                  },
                  {
                    "sample": "logger.debug(\"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain)",
                    "lineNumber": 58,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/utils/SMTPMailServer.java",
                    "excerpt": "          useMailHog = true;\n        }\n        for (InternetAddress emailAddress : emails) {\n          String email = emailAddress.toString();\n          String domain = email.substring(email.indexOf(\"@\") + 1).trim();\n          logger.debug( /* <=== org.slf4j.Logger.debug */ \n              \"sendMail  mhogDomain: {}, email: {}, domain: {}\", mhogDomain, email, domain);\n          if (mhogDomain.trim().equals(domain)) {\n            logger.info(\"Using MailHog Configuration for sending email for domain: \" + domain);\n            useMailHog = true;\n          }"
                  }
                ]
              }
            ]
          },
          {
            "sinkType": "leakages",
            "id": "Leakages.Log.Error",
            "name": "Log Error",
            "category": "",
            "domains": [],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "",
              "dbVendor": "",
              "dbLocation": "",
              "dbOperation": ""
            },
            "paths": [
              {
                "pathId": "271-323-318",
                "path": [
                  {
                    "sample": "email",
                    "lineNumber": 106,
                    "columnNumber": 28,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      String name, String email, String password, String number, ERole role) {\n    UserData userData = new UserData();\n    VehicleDetails vehicleDetails = null;\n    UserDetails userDetails = null;\n    try {\n      User user = new User(email, number, encoder.encode(password), role); /* <=== java.lang.String */ \n      user = userRepository.save(user);\n      userDetails = userData.getPredefineUser(name, user);\n      userDetailsRepository.save(userDetails);\n      vehicleDetails = vehicleService.createVehicle();\n      if (vehicleDetails != null) {"
                  },
                  {
                    "sample": "email",
                    "lineNumber": 116,
                    "columnNumber": 58,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails);\n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email); /* <=== java.lang.String */ \n      return false;\n    } catch (Exception e) {\n      logger.error(\"Fail to create user {}, Exception :: {}\", email, e);\n      return false;\n    }"
                  },
                  {
                    "sample": "logger.error(\"Fail to create vehicle for user {}\", email)",
                    "lineNumber": 116,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/config/InitialDataConfig.java",
                    "excerpt": "      if (vehicleDetails != null) {\n        vehicleDetails.setOwner(user);\n        vehicleDetailsRepository.save(vehicleDetails);\n        return true;\n      }\n      logger.error(\"Fail to create vehicle for user {}\", email); /* <=== org.slf4j.Logger.error */ \n      return false;\n    } catch (Exception e) {\n      logger.error(\"Fail to create user {}, Exception :: {}\", email, e);\n      return false;\n    }"
                  }
                ]
              },
              {
                "pathId": "9564-9572-9620-9614",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 35,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/entity/User.java",
                    "excerpt": "      name = \"user_generator\",\n      sequenceName = \"user_login_id_seq\",\n      allocationSize = 1)\n  private Long id;\n\n  private String email; /* <=== 'email' is a member of 'com.crapi.entity.User' class */ \n  private String password;\n  private String number;\n\n  @Column(length = 500)\n  private String jwtToken;"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 121,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  @Override\n  public List<VehicleDetails> getVehicleDetails(HttpServletRequest request) {\n    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request); /* <=== com.crapi.entity.User */ \n      if (user != null) {\n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId());\n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 122,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "  public List<VehicleDetails> getVehicleDetails(HttpServletRequest request) {\n    User user = null;\n    List<VehicleDetails> vehicleDetailsList = null;\n    try {\n      user = userService.getUserFromToken(request);\n      if (user != null) { /* <=== com.crapi.entity.User */ \n        vehicleDetailsList = vehicleDetailsRepository.findAllByOwner_id(user.getId());\n        if (vehicleDetailsList != null) {\n          for (VehicleDetails vehicleDetails : vehicleDetailsList) {\n            vehicleDetails.setOwner(null);\n          }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 135,
                    "columnNumber": 70,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "          return Collections.emptyList();\n        }\n      }\n    } catch (Exception exception) {\n      logger.error(\n          \"Fail to get List of vehicle for user->{} -> Message: {}\", user.getEmail(), exception); /* <=== com.crapi.entity.User */ \n    }\n    throw new CRAPIExceptionHandler(\n        UserMessage.CUSTOM_IO_EXCEPTION, UserMessage.VEHICLE_NOT_FOUND, 500);\n  }\n"
                  },
                  {
                    "sample": "error(\"Fail to get List of vehicle for user->{} -> Message: {}\", user.getEmail(), exception)",
                    "lineNumber": 134,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/VehicleServiceImpl.java",
                    "excerpt": "        } else {\n          return Collections.emptyList();\n        }\n      }\n    } catch (Exception exception) {\n      logger.error( /* <=== org.slf4j.Logger.error */ \n          \"Fail to get List of vehicle for user->{} -> Message: {}\", user.getEmail(), exception);\n    }\n    throw new CRAPIExceptionHandler(\n        UserMessage.CUSTOM_IO_EXCEPTION, UserMessage.VEHICLE_NOT_FOUND, 500);\n  }"
                  }
                ]
              },
              {
                "pathId": "8354-8367-8384-8401-8395",
                "path": [
                  {
                    "sample": "java.lang.String email",
                    "lineNumber": 26,
                    "columnNumber": 18,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/model/LoginForm.java",
                    "excerpt": "@Data\npublic class LoginForm {\n\n  @NotBlank\n  @Size(min = 3, max = 100)\n  private String email; /* <=== 'email' is a member of 'com.crapi.model.LoginForm' class */ \n\n  @NotBlank\n  @Size(min = 4, max = 100)\n  private String password;\n"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 84,
                    "columnNumber": 9,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "  @Override\n  public JwtResponse authenticateUserLogin(LoginForm loginForm) throws BadCredentialsException {\n    JwtResponse jwtResponse = new JwtResponse();\n    Authentication authentication = null;\n    User user;\n    if (loginForm.getEmail() == null) { /* <=== com.crapi.model.LoginForm */ \n      jwtResponse.setMessage(UserMessage.EMAIL_NOT_PROVIDED);\n    } else {\n      if (loginForm.getEmail().contains(\"jndi:\")) {\n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 87,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "    Authentication authentication = null;\n    User user;\n    if (loginForm.getEmail() == null) {\n      jwtResponse.setMessage(UserMessage.EMAIL_NOT_PROVIDED);\n    } else {\n      if (loginForm.getEmail().contains(\"jndi:\")) { /* <=== com.crapi.model.LoginForm */ \n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");\n          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(),"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 92,
                    "columnNumber": 15,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "      if (loginForm.getEmail().contains(\"jndi:\")) {\n        if (isLog4jEnabled()) {\n          logger.info(\"Log4j is enabled\");\n          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(), /* <=== com.crapi.model.LoginForm */ \n              LOG4J_LOGGER.getClass().getName(),\n              logger.getClass().getName());\n          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail());\n        } else {\n          logger.info(\"Log4j is disabled\");"
                  },
                  {
                    "sample": "loginForm",
                    "lineNumber": 95,
                    "columnNumber": 70,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(),\n              LOG4J_LOGGER.getClass().getName(),\n              logger.getClass().getName());\n          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail()); /* <=== com.crapi.model.LoginForm */ \n        } else {\n          logger.info(\"Log4j is disabled\");\n        }\n      }\n      user = userRepository.findByEmail(loginForm.getEmail());"
                  },
                  {
                    "sample": "error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail())",
                    "lineNumber": 95,
                    "columnNumber": 11,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserServiceImpl.java",
                    "excerpt": "          logger.info(\n              \"Log4j Exploit Try With Email: {} with Logger: {}, Main Logger: {}\",\n              loginForm.getEmail(),\n              LOG4J_LOGGER.getClass().getName(),\n              logger.getClass().getName());\n          LOG4J_LOGGER.error(\"Log4j Exploit Success With Email: {}\", loginForm.getEmail()); /* <=== org.apache.logging.log4j.Logger.error */ \n        } else {\n          logger.info(\"Log4j is disabled\");\n        }\n      }\n      user = userRepository.findByEmail(loginForm.getEmail());"
                  }
                ]
              }
            ]
          },
          {
            "sinkType": "leakages",
            "id": "Leakages.Log.Console",
            "name": "Log Console",
            "category": "",
            "domains": [],
            "sensitivity": "",
            "isSensitive": false,
            "tags": {},
            "apiUrl": [],
            "databaseDetails": {
              "dbName": "",
              "dbVendor": "",
              "dbLocation": "",
              "dbOperation": ""
            },
            "paths": [
              {
                "pathId": "7918-7914-7913-7923-7919",
                "path": [
                  {
                    "sample": "email",
                    "lineNumber": 41,
                    "columnNumber": 46,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== java.lang.String */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
                  },
                  {
                    "sample": "userRepository.findByEmail(email)",
                    "lineNumber": 41,
                    "columnNumber": 19,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== com.crapi.repository.UserRepository.findByEmail */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 41,
                    "columnNumber": 12,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "   */\n  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email); /* <=== com.crapi.entity.User */ \n      System.out.println(user);\n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }"
                  },
                  {
                    "sample": "user",
                    "lineNumber": 42,
                    "columnNumber": 26,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email);\n      System.out.println(user); /* <=== com.crapi.entity.User */ \n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }\n  }"
                  },
                  {
                    "sample": "System.out.println(user)",
                    "lineNumber": 42,
                    "columnNumber": 7,
                    "fileName": "/app/code/services/identity/src/main/java/com/crapi/service/Impl/UserDetailsServiceImpl.java",
                    "excerpt": "  @Transactional\n  @Override\n  public UserDetails loadUserByUsername(String email) {\n    try {\n      User user = userRepository.findByEmail(email);\n      System.out.println(user); /* <=== java.io.PrintStream.println */ \n      return UserPrinciple.build(user);\n    } catch (Exception e) {\n      throw new UsernameNotFoundException(\"User does not exist with Email :\" + email);\n    }\n  }"
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "third_parties": []
  },
  "collections": [
    {
      "collectionId": "Collections.Annotation.Spring",
      "name": "Spring Web Interface Annotation",
      "isSensitive": false,
      "collections": [
        {
          "sourceId": "Data.Sensitive.AccountData.AccountPassword",
          "occurrences": [
            {
              "endPoint": "/identity/api/auth/login",
              "sample": "@Valid @RequestBody LoginForm loginForm",
              "lineNumber": 51,
              "columnNumber": 55,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   * @return getting jwt token of user from request header\n   * @throws UnsupportedEncodingException throws UnsupportedEncodingException for password\n   *     encryption\n   */\n  @PostMapping(\"/login\")\n  public ResponseEntity<JwtResponse> authenticateUser(@Valid @RequestBody LoginForm loginForm) /* <===  */ \n      throws UnsupportedEncodingException {\n    try {\n\n      JwtResponse jwtToken = userService.authenticateUserLogin(loginForm);\n"
            },
            {
              "endPoint": "/identity/api/auth/signup",
              "sample": "@Valid @RequestBody SignUpForm signUpRequest",
              "lineNumber": 74,
              "columnNumber": 53,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "  /**\n   * @param signUpRequest contains user email,number,name and password\n   * @return success and failure message after user registration.\n   */\n  @PostMapping(\"/signup\")\n  public ResponseEntity<CRAPIResponse> registerUser(@Valid @RequestBody SignUpForm signUpRequest) { /* <===  */ \n    // Creating user's account\n    CRAPIResponse registerUserResponse = userRegistrationService.registerUser(signUpRequest);\n    if (registerUserResponse != null && registerUserResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(registerUserResponse);\n    } else if (registerUserResponse != null && registerUserResponse.getStatus() == 403) {"
            },
            {
              "endPoint": "/identity/api/auth/forget-password",
              "sample": "@Valid @RequestBody ForgetPassword forgetPassword",
              "lineNumber": 115,
              "columnNumber": 7,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   * @return success and failure message after generating otp and sent the otp to the register\n   *     email.\n   */\n  @PostMapping(\"/forget-password\")\n  public ResponseEntity<CRAPIResponse> forgetPassword(\n      @Valid @RequestBody ForgetPassword forgetPassword) { /* <===  */ \n    CRAPIResponse forgetPasswordResponse = otpService.generateOtp(forgetPassword);\n    if (forgetPasswordResponse != null && forgetPasswordResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(forgetPasswordResponse);\n    }\n    return ResponseEntity.status(HttpStatus.NOT_FOUND).body(forgetPasswordResponse);"
            },
            {
              "endPoint": "/identity/api/auth/v2/check-otp",
              "sample": "@RequestBody OtpForm otpForm",
              "lineNumber": 129,
              "columnNumber": 49,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   * @param otpForm contains otp, updated password and user email\n   * @return success and failure response its non secure API for attacker. in this attacker can\n   *     enter 'n' number of times invalid otp\n   */\n  @PostMapping(\"/v2/check-otp\")\n  public ResponseEntity<CRAPIResponse> checkOtp(@RequestBody OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOtpResponse = otpService.validateOtp(otpForm);\n    if (validateOtpResponse != null && validateOtpResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(validateOtpResponse);\n    } else {\n      return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(validateOtpResponse);"
            },
            {
              "endPoint": "/identity/api/auth/v3/check-otp",
              "sample": "@RequestBody OtpForm otpForm",
              "lineNumber": 144,
              "columnNumber": 55,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   * @param otpForm contains otp, updated password and user email\n   * @return success and failure response its secure otp validator in this user can enter 10 times\n   *     invalid otp after 10 invalid otp it will invalidate the otp.\n   */\n  @PostMapping(\"/v3/check-otp\")\n  public ResponseEntity<CRAPIResponse> secureCheckOtp(@RequestBody OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOtpResponse = otpService.secureValidateOtp(otpForm);\n    if (validateOtpResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(validateOtpResponse);\n    } else if (validateOtpResponse.getStatus() == 503) {\n      return ResponseEntity.status(HttpStatus.SERVICE_UNAVAILABLE).body(validateOtpResponse);"
            },
            {
              "endPoint": "/identity/api/v2/user/reset-password",
              "sample": "@RequestBody LoginForm loginForm",
              "lineNumber": 60,
              "columnNumber": 7,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/UserController.java",
              "excerpt": "   * @param request getting jwt token for user from request header\n   * @return reset user password for the user. first verify token and then reset user password\n   */\n  @PostMapping(\"/reset-password\")\n  public ResponseEntity<CRAPIResponse> resetPassword(\n      @RequestBody LoginForm loginForm, HttpServletRequest request) /* <===  */ \n      throws UnsupportedEncodingException {\n\n    CRAPIResponse resetPasswordResponse = userService.resetPassword(loginForm, request);\n    if (resetPasswordResponse != null && resetPasswordResponse.getStatus() == 200) {\n      return ResponseEntity.ok().body(new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET));"
            }
          ]
        },
        {
          "sourceId": "Data.Sensitive.ContactData.Address",
          "occurrences": [
            {
              "endPoint": "/identity/api/v2/vehicle/add_vehicle",
              "sample": "@Valid @RequestBody VehicleForm vehicleDetails",
              "lineNumber": 45,
              "columnNumber": 7,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/VehicleController.java",
              "excerpt": "   * @param vehicleDetails\n   * @return response of success and failure message save vehicle Details for user in database\n   */\n  @PostMapping(\"/vehicle/add_vehicle\")\n  public ResponseEntity<CRAPIResponse> addVehicle(\n      @Valid @RequestBody VehicleForm vehicleDetails, HttpServletRequest request) { /* <===  */ \n    CRAPIResponse checkVehicleResponse = vehicleService.checkVehicle(vehicleDetails, request);\n    if (checkVehicleResponse != null && checkVehicleResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(checkVehicleResponse);\n    }\n    return ResponseEntity.status(HttpStatus.FORBIDDEN).body(checkVehicleResponse);"
            }
          ]
        },
        {
          "sourceId": "Data.Sensitive.ContactData.EmailAddress",
          "occurrences": [
            {
              "endPoint": "/identity/api/auth/login",
              "sample": "@Valid @RequestBody LoginForm loginForm",
              "lineNumber": 51,
              "columnNumber": 55,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   * @return getting jwt token of user from request header\n   * @throws UnsupportedEncodingException throws UnsupportedEncodingException for password\n   *     encryption\n   */\n  @PostMapping(\"/login\")\n  public ResponseEntity<JwtResponse> authenticateUser(@Valid @RequestBody LoginForm loginForm) /* <===  */ \n      throws UnsupportedEncodingException {\n    try {\n\n      JwtResponse jwtToken = userService.authenticateUserLogin(loginForm);\n"
            },
            {
              "endPoint": "/identity/api/auth/signup",
              "sample": "@Valid @RequestBody SignUpForm signUpRequest",
              "lineNumber": 74,
              "columnNumber": 53,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "  /**\n   * @param signUpRequest contains user email,number,name and password\n   * @return success and failure message after user registration.\n   */\n  @PostMapping(\"/signup\")\n  public ResponseEntity<CRAPIResponse> registerUser(@Valid @RequestBody SignUpForm signUpRequest) { /* <===  */ \n    // Creating user's account\n    CRAPIResponse registerUserResponse = userRegistrationService.registerUser(signUpRequest);\n    if (registerUserResponse != null && registerUserResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(registerUserResponse);\n    } else if (registerUserResponse != null && registerUserResponse.getStatus() == 403) {"
            },
            {
              "endPoint": "/identity/api/auth/forget-password",
              "sample": "@Valid @RequestBody ForgetPassword forgetPassword",
              "lineNumber": 115,
              "columnNumber": 7,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   * @return success and failure message after generating otp and sent the otp to the register\n   *     email.\n   */\n  @PostMapping(\"/forget-password\")\n  public ResponseEntity<CRAPIResponse> forgetPassword(\n      @Valid @RequestBody ForgetPassword forgetPassword) { /* <===  */ \n    CRAPIResponse forgetPasswordResponse = otpService.generateOtp(forgetPassword);\n    if (forgetPasswordResponse != null && forgetPasswordResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(forgetPasswordResponse);\n    }\n    return ResponseEntity.status(HttpStatus.NOT_FOUND).body(forgetPasswordResponse);"
            },
            {
              "endPoint": "/identity/api/auth/v2/check-otp",
              "sample": "@RequestBody OtpForm otpForm",
              "lineNumber": 129,
              "columnNumber": 49,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   * @param otpForm contains otp, updated password and user email\n   * @return success and failure response its non secure API for attacker. in this attacker can\n   *     enter 'n' number of times invalid otp\n   */\n  @PostMapping(\"/v2/check-otp\")\n  public ResponseEntity<CRAPIResponse> checkOtp(@RequestBody OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOtpResponse = otpService.validateOtp(otpForm);\n    if (validateOtpResponse != null && validateOtpResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(validateOtpResponse);\n    } else {\n      return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(validateOtpResponse);"
            },
            {
              "endPoint": "/identity/api/auth/v3/check-otp",
              "sample": "@RequestBody OtpForm otpForm",
              "lineNumber": 144,
              "columnNumber": 55,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   * @param otpForm contains otp, updated password and user email\n   * @return success and failure response its secure otp validator in this user can enter 10 times\n   *     invalid otp after 10 invalid otp it will invalidate the otp.\n   */\n  @PostMapping(\"/v3/check-otp\")\n  public ResponseEntity<CRAPIResponse> secureCheckOtp(@RequestBody OtpForm otpForm) { /* <===  */ \n    CRAPIResponse validateOtpResponse = otpService.secureValidateOtp(otpForm);\n    if (validateOtpResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(validateOtpResponse);\n    } else if (validateOtpResponse.getStatus() == 503) {\n      return ResponseEntity.status(HttpStatus.SERVICE_UNAVAILABLE).body(validateOtpResponse);"
            },
            {
              "endPoint": "/identity/api/auth/v4.0/user/login-with-token",
              "sample": "@RequestBody LoginWithEmailToken loginWithEmailToken",
              "lineNumber": 161,
              "columnNumber": 7,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   *     with email token\n   * @return double verification message\n   */\n  @PostMapping(\"/v4.0/user/login-with-token\")\n  public ResponseEntity<CRAPIResponse> loginWithToken(\n      @RequestBody LoginWithEmailToken loginWithEmailToken) { /* <===  */ \n    CRAPIResponse response = userService.loginWithEmailToken(loginWithEmailToken);\n    return ResponseEntity.status(HttpStatus.valueOf(response.getStatus())).body(response);\n  }\n\n  /**"
            },
            {
              "endPoint": "/identity/api/auth/v2.7/user/login-with-token",
              "sample": "@Valid @RequestBody LoginWithEmailToken loginWithEmailToken",
              "lineNumber": 173,
              "columnNumber": 7,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/AuthController.java",
              "excerpt": "   *     with email token\n   * @return jwt token for login with token\n   */\n  @PostMapping(\"/v2.7/user/login-with-token\")\n  public ResponseEntity<JwtResponse> loginWithTokenV2(\n      @Valid @RequestBody LoginWithEmailToken loginWithEmailToken) { /* <===  */ \n    JwtResponse jwt = userService.loginWithEmailTokenV2(loginWithEmailToken);\n    if (jwt.getToken() != null && jwt.getToken().length() > 5) {\n      return ResponseEntity.status(HttpStatus.OK).body(jwt);\n    }\n    return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(jwt);"
            },
            {
              "endPoint": "/identity/api/v2/user/change-email",
              "sample": "@Valid @RequestBody ChangeEmailForm changeEmailForm",
              "lineNumber": 43,
              "columnNumber": 7,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/ChangeEmailController.java",
              "excerpt": "   * @return first check email is already registered or not if it is there then return email already\n   *     registered then try with new email.\n   */\n  @PostMapping(\"/v2/user/change-email\")\n  public ResponseEntity<CRAPIResponse> changesEmail(\n      @Valid @RequestBody ChangeEmailForm changeEmailForm, HttpServletRequest request) { /* <===  */ \n    CRAPIResponse changeEmailResponse = userService.changeEmailRequest(request, changeEmailForm);\n    if (changeEmailResponse != null && changeEmailResponse.getStatus() == 403) {\n      return ResponseEntity.status(HttpStatus.FORBIDDEN).body(changeEmailResponse);\n    } else if (changeEmailResponse != null && changeEmailResponse.getStatus() == 404) {\n      return ResponseEntity.status(HttpStatus.NOT_FOUND).body(changeEmailResponse);"
            },
            {
              "endPoint": "/identity/api/v2/user/verify-email-token",
              "sample": "@RequestBody ChangeEmailForm changeEmailForm",
              "lineNumber": 61,
              "columnNumber": 7,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/ChangeEmailController.java",
              "excerpt": "   * @param request getting jwt token for user from request header\n   * @return verify token if it is valid then it will update the user email\n   */\n  @PostMapping(\"/v2/user/verify-email-token\")\n  public ResponseEntity<CRAPIResponse> verifyEmailToken(\n      @RequestBody ChangeEmailForm changeEmailForm, HttpServletRequest request) { /* <===  */ \n    CRAPIResponse verifyEmailTokenResponse = userService.verifyEmailToken(request, changeEmailForm);\n    if (verifyEmailTokenResponse != null && verifyEmailTokenResponse.getStatus() == 200) {\n      return ResponseEntity.status(HttpStatus.OK).body(verifyEmailTokenResponse);\n    } else if (verifyEmailTokenResponse != null && verifyEmailTokenResponse.getStatus() == 404) {\n      return ResponseEntity.status(HttpStatus.NOT_FOUND).body(verifyEmailTokenResponse);"
            },
            {
              "endPoint": "/identity/api/v2/user/reset-password",
              "sample": "@RequestBody LoginForm loginForm",
              "lineNumber": 60,
              "columnNumber": 7,
              "fileName": "/app/code/services/identity/src/main/java/com/crapi/controller/UserController.java",
              "excerpt": "   * @param request getting jwt token for user from request header\n   * @return reset user password for the user. first verify token and then reset user password\n   */\n  @PostMapping(\"/reset-password\")\n  public ResponseEntity<CRAPIResponse> resetPassword(\n      @RequestBody LoginForm loginForm, HttpServletRequest request) /* <===  */ \n      throws UnsupportedEncodingException {\n\n    CRAPIResponse resetPasswordResponse = userService.resetPassword(loginForm, request);\n    if (resetPasswordResponse != null && resetPasswordResponse.getStatus() == 200) {\n      return ResponseEntity.ok().body(new CRAPIResponse(UserMessage.PASSWORD_GOT_RESET));"
            }
          ]
        }
      ]
    }
  ],
  "violations": [
    {
      "policyId": "Threats.Leakage.isDataLeakingToLog",
      "policyDetails": {
        "name": "PII data is written to the log files",
        "policyType": "threat",
        "description": "Sensitive Data written to log files or file system may lead to unauthorized access or exposure to potential attack.",
        "fix": "It is not recommended to log Sensitive Data to log files or the file system. The data must be encrypted if it is absolutely necessary to log it.",
        "action": "",
        "tags": {
          "CWE-359": "https://cwe.mitre.org/data/definitions/359.html",
          "CWE-532": "https://cwe.mitre.org/data/definitions/532.html",
          "MSTG-STORAGE-3": "https://github.com/OWASP/owasp-mstg/blob/master/Document/0x05d-Testing-Data-Storage.md#Testing-Logs-for-Sensitive-Data-MSTG-STORAGE-3",
          "MITRE": "Sharing.Exposure"
        }
      },
      "dataFlow": [
        {
          "sourceId": "Data.Sensitive.AccountData.AccountPassword",
          "sinkId": "Leakages.Log.Console",
          "pathIds": ["7913-7923-7919"]
        },
        {
          "sourceId": "Data.Sensitive.ContactData.EmailAddress",
          "sinkId": "Leakages.Log.Console",
          "pathIds": ["7918-7914-7913-7923-7919"]
        },
        {
          "sourceId": "Data.Sensitive.ContactData.EmailAddress",
          "sinkId": "Leakages.Log.Debug",
          "pathIds": ["11315-11312-11310-11309-11326-11325-11324-11318"]
        },
        {
          "sourceId": "Data.Sensitive.ContactData.EmailAddress",
          "sinkId": "Leakages.Log.Info",
          "pathIds": [
            "8354-8367-8384-8378",
            "9830-9843-9887-9886-11220-11244",
            "8043-8066-8089-8091-8097-8124-8202-8210-8204",
            "8084-8087-8107-8103-8102-8110-8119-8113",
            "9830-9843-9887-9886-11220-11256-11353"
          ]
        },
        {
          "sourceId": "Data.Sensitive.AccountData.AccountPassword",
          "sinkId": "Leakages.Log.Info",
          "pathIds": [
            "6958-6953-6952-6961-6980-7000-7017-7016-11220-11244",
            "8084-8087-8107-8103-8102-8110-8119-8113",
            "9830-9843-9887-9886-11220-11256-11353"
          ]
        },
        {
          "sourceId": "Data.Sensitive.ContactData.EmailAddress",
          "sinkId": "Leakages.Log.Error",
          "pathIds": [
            "271-323-318",
            "9564-9572-9620-9614",
            "8354-8367-8384-8401-8395"
          ]
        }
      ],
      "processing": null
    }
  ]
}
