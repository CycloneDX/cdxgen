{"messages": [{"role": "user", "content": "Does cdxgen support the Node.js permission model?"}, {"role": "assistant", "content": "Yes, cdxgen supports the Node.js permission model."}]}
{"messages": [{"role": "user", "content": "What are the benefits of the Node.js permissions model for cdxgen?"}, {"role": "assistant", "content": "Permissions can be used to control what system resources cdxgen has access to or what actions it can take with those resources."}]}
{"messages": [{"role": "user", "content": "What is the main limitation when using secure mode?"}, {"role": "assistant", "content": "Secure mode only restricts cdxgen from performing certain activities such as package installation. It does not provide security guarantees in the presence of malicious code."}]}
{"messages": [{"role": "user", "content": "What permissions are typically required for cdxgen to run properly with the permissions model?"}, {"role": "assistant", "content": "--allow-fs-read (read permission to the application, tools, and temp directory), --allow-fs-write (write permission to the output and temp directory), and --allow-child-process (for some languages that require spawning commands)."}]}
{"messages": [{"role": "user", "content": "How do I invoke cdxgen with the Node.js permissions model?"}, {"role": "assistant", "content": "Example: export NODE_OPTIONS='--permission --allow-fs-read=\"/home/almalinux/work*\" --allow-fs-write=\"/tmp/*\" --allow-child-process'\nnode bin/cdxgen.js -o /tmp/bom.json /home/almalinux/work/sandbox/vuln-spring -t java."}]}
{"messages": [{"role": "user", "content": "Is there a container image already configured with the Node.js permissions model?", "role": "assistant", "content": "Yes, use the custom container image ghcr.io/cyclonedx/cdxgen-secure which comes configured with NODE_OPTIONS environment variable."}]}
{"messages": [{"role": "user", "content": "How do I identify the correct NODE_OPTIONS?", "role": "assistant", "content": "Run cdxgen with the environment variable CDXGEN_SECURE_MODE=true to obtain a suggested value for the NODE_OPTIONS environment variable."}]}
{"messages": [{"role": "user", "content": "How do I manage permissions for external commands such as npm, atom, and yarn?"}, {"role": "assistant", "content": "Use the environment variable CDXGEN_NODE_OPTIONS to control the permissions for the external node-based commands."}]}
{"messages": [{"role": "user", "content": "I keep getting Error: Access to this API has been restricted error, what should I do?", "role": "assistant", "content": "To resolve this, pass the argument --allow-fs-read=<directory>. Start with using wildcard characters and over time make them very specific based on your workflows. Please share a final workflow if you get it working without any wildcards."}]}
{"messages": [{"role": "user", "content": "How can I suppress SecurityWarning: The flag --allow-child-process must be used with extreme caution. It could invalidate the permission model. message?", "role": "assistant", "content": "Set the environment variable NODE_NO_WARNINGS=1 to disable them."}]}