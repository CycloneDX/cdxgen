name: Node CI

on:
  push:
    branches:
      - master
      - feature/*
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build and test
        run: |
          npm install
          npm run build --if-present
          npm run lint
          npm test
        env:
          CI: true
  sae-builds:
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
        include:
          - os: windows
            build: |
              npx caxa --input . --output "dist/cdxgen.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              .\dist\cdxgen.exe --verion
            artifact: .\dist\cdxgen.exe
          - os: macos
            build: |
              npx caxa --input . --output "dist/cdxgen.app" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
            artifact: ./dist/cdxgen.app
          - os: ubuntu
            build: |
              npx caxa --input . --output "dist/cdxgen" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x ./dist/cdxgen
              ./dist/cdxgen --version
            artifact: ./dist/cdxgen
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Produce pkg - lts
        run: |
          npm ci
          mkdir -p dist
          ${{ matrix.build }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}
