name: docker tests

on:
  pull_request:
    paths:
      - '.github/workflows/dockertests.yml'
      - '.pnpmfile.cjs'
      - 'bin/**'
      - 'data/**'
      - 'index.cjs'
      - 'lib/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '!**.poku.js'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/controlling-permissions-for-github_token
permissions: {}

jobs:
  linux-tests:
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-24.04', 'ubuntu-24.04-arm']
        node-version: ['24.7.0']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: pnpm install, build and test
        run: |
          pnpm install --config.strict-dep-builds=true --package-import-method copy
          pnpm test
          mkdir -p bomresults
        env:
          CI: true
          CDXGEN_TEMP_DIR: ${{ runner.temp }}/cdxgen-dockertests
      - name: dockertests
        if: matrix.os == 'ubuntu-24.04'
        run: |
          bin/cdxgen.js ubuntu:latest -t docker -o bomresults/bom-ubuntu.json --fail-on-error
          docker rmi ubuntu:latest
          bin/cdxgen.js alpine:latest -t docker -o bomresults/bom-alpine.json --fail-on-error
          docker rmi alpine:latest
          bin/cdxgen.js almalinux:9.4-minimal -t docker -o bomresults/bom-almalinux.json --fail-on-error
          docker rmi almalinux:9.4-minimal
          bin/cdxgen.js phpmyadmin@sha256:1092481630056189e43cc0fe66fd01defcc9334d78ab4611b22f65e9a39869bd -o bomresults/bom-phpmyadmin.json --fail-on-error
          docker rmi phpmyadmin@sha256:1092481630056189e43cc0fe66fd01defcc9334d78ab4611b22f65e9a39869bd
          bin/cdxgen.js shiftleft/scan-slim -o bomresults/bom-scanslim.json -t container --fail-on-error
          docker rmi shiftleft/scan-slim
          bin/cdxgen.js redmine@sha256:a5c5f8a64a0d9a436a0a6941bc3fb156be0c89996add834fe33b66ebeed2439e -o bomresults/bom-redmine.json --fail-on-error
          docker rmi redmine@sha256:a5c5f8a64a0d9a436a0a6941bc3fb156be0c89996add834fe33b66ebeed2439e
          bin/cdxgen.js rocket.chat@sha256:379f7afa0e67497c363ac9a9b3e7e6a6d31deee228233307c987e4a0c68b28e6 -o bomresults/bom-rocket.json --fail-on-error
          docker rmi rocket.chat@sha256:379f7afa0e67497c363ac9a9b3e7e6a6d31deee228233307c987e4a0c68b28e6
          bin/cdxgen.js sonarqube@sha256:7c0edcb99c964984db6d24330db33bb12de1e8ae0d5974d77640b1efea1483d1 -o bomresults/bom-sonar.json --fail-on-error
          docker rmi sonarqube@sha256:7c0edcb99c964984db6d24330db33bb12de1e8ae0d5974d77640b1efea1483d1
          bin/cdxgen.js zookeeper@sha256:5bf00616677db5ef57d8a2da7c5dadf67f1a6be54b0c33a79be3332c9c80aeb6 -o bomresults/bom-zoo.json --fail-on-error
          docker rmi zookeeper@sha256:5bf00616677db5ef57d8a2da7c5dadf67f1a6be54b0c33a79be3332c9c80aeb6
          docker pull shiftleft/scan-slim:latest
          docker save shiftleft/scan-slim:latest -o /tmp/scanslim.tar
          docker rmi shiftleft/scan-slim:latest
          bin/cdxgen.js /tmp/scanslim.tar -o bomresults/bom-scanarch.json --fail-on-error
          rm /tmp/scanslim.tar
          ls -ltr bomresults
      - name: dockertests arm
        if: matrix.os == 'ubuntu-24.04-arm'
        run: |
          bin/cdxgen.js ubuntu:latest -t docker -o bomresults/bom-ubuntu.json --fail-on-error
          docker rmi ubuntu:latest
          bin/cdxgen.js alpine:latest -t docker -o bomresults/bom-alpine.json --fail-on-error
          docker rmi alpine:latest
          bin/cdxgen.js almalinux:9.4-minimal -t docker -o bomresults/bom-almalinux.json --fail-on-error
          docker rmi almalinux:9.4-minimal
          ls -ltr bomresults
  linux-dockertar-tests:
    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-24.04', 'ubuntu-24.04-arm']
        node-version: ['24.7.0']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: pnpm install, build and test
        run: |
          pnpm install --config.strict-dep-builds=true --package-import-method copy
          pnpm test
          mkdir -p bomresults repotests
        env:
          CI: true
      - name: dockertests
        if: matrix.os == 'ubuntu-24.04'
        run: |
          docker pull ubuntu:latest
          docker save -o /tmp/ubuntu.tar ubuntu:latest
          docker rmi ubuntu:latest
          bin/cdxgen.js /tmp/ubuntu.tar -t docker -o bomresults/bom-ubuntu.tar.json --fail-on-error
          docker pull alpine:latest
          docker save -o /tmp/alpine.tar alpine:latest
          docker rmi alpine:latest
          bin/cdxgen.js /tmp/alpine.tar -t docker -o bomresults/bom-alpine.tar.json --fail-on-error
          ls -ltr bomresults
  os-tests:
    strategy:
      fail-fast: true
      matrix:
        node-version: ['24.7.0']
        os: [ubuntu-24.04, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: pnpm install, build and test
        run: |
          pnpm install --config.strict-dep-builds=true --package-import-method copy
          mkdir -p bomresults
        env:
          CI: true
      - name: ostests
        run: |
          bin/cdxgen.js -t os -o bomresults/bom-os.json --fail-on-error
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: matrix.os == 'ubuntu-24.04-arm'
        with:
          name: bomresults-os
          path: bomresults

  win-tests:
    runs-on: windows-latest

    strategy:
      fail-fast: true
      matrix:
        node-version: ['24.7.0']
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: pnpm install, build
        run: |
          pnpm install --config.strict-dep-builds=true --package-import-method copy
          mkdir bomresults
        env:
          CI: true
      - name: wintests
        run: |
          node bin/cdxgen.js -t os -o bomresults/bom-win.json --fail-on-error
          dir bomresults
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: bomresults-win
          path: bomresults
