name: Build image(s) on PR

on:
  push:
    branches-ignore:
      - master
    paths:
      - ci/images/**/Dockerfile.*

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  filter:
    if: github.repository == 'CycloneDX/cdxgen'
    runs-on: ubuntu-24.04
    outputs:
      imagefiles: ${{ steps.changed.outputs.files }}
    steps:
      - name: Get changed files
        id: changed
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const response = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: context.payload.before,
              head: context.payload.after
            });
            const files = response.data.files
              .map(f => f.filename)
              .filter(f => f.includes("Dockerfile"));
            core.setOutput("files", JSON.stringify(files));
  image:
    if: github.repository == 'CycloneDX/cdxgen'
    needs: filter
    strategy:
      fail-fast: false
      matrix:
        imagefile: ${{ fromJson(needs.filter.outputs.imagefiles) }}
        platform: [ amd64, arm64 ]
        # Some images don't work on linux/arm64
        exclude:
          - imagefile: ci/images/Dockerfile.dotnet7
            platform: arm64
          - imagefile: ci/images/Dockerfile.dotnet8
            platform: arm64
          - imagefile: ci/images/Dockerfile.dotnet9
            platform: arm64
          - imagefile: ci/images/Dockerfile.ruby25
            platform: arm64
          - imagefile: ci/images/debian/Dockerfile.ruby26
            platform: arm64
    runs-on: ${{ matrix.platform == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup tool versions
        id: versions
        run: |
          cd .versions
          cat >> "$GITHUB_OUTPUT" << EOF
          docker-args<<VALUE
          $(awk 'FNR==2 {print "\""toupper(FILENAME)"="$1"\""}' node_*)
          VALUE
          EOF
      - name: Build image
        uses: ./.github/actions/build-docker-image
        with:
          dockerfile: ${{ matrix.imagefile }}
          docker-args: |
            ${{ steps.versions.outputs.docker-args }}
          platforms: ${{ matrix.platform }}
          target: cdxgen
