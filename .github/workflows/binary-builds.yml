name: Binary builds

on:
  pull_request:
    paths:
      - '.github/workflows/binary-builds.yml'
      - '.pnpmfile.cjs'
      - 'bin/**'
      - 'data/**'
      - 'index.cjs'
      - 'lib/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '!**.test.js'
  push:
    branches:
      - master
      - release/*
    tags:
      - 'v*'
    paths:
      - '.github/workflows/binary-builds.yml'
      - '.pnpmfile.cjs'
      - 'bin/**'
      - 'data/**'
      - 'index.cjs'
      - 'lib/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '!**.test.js'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  musl-builds-arm64:
    if: github.repository == 'CycloneDX/cdxgen'
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-22.04-arm' ]
        include:
          - os: ubuntu-22.04-arm
            build: |
              rm -rf ci contrib tools_config
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen
              ./cdxgen --help
              sha256sum cdxgen > cdxgen.sha256
              rm -rf node_modules
              pnpm install --config.strict-dep-builds=true --virtual-store-dir node_modules/pnpm --no-optional --prod --package-import-method copy --frozen-lockfile              
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen-slim" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen-slim
              ./cdxgen-slim --version
              sha256sum cdxgen-slim > cdxgen-slim.sha256
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdx-verify" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/verify.js"
              chmod +x cdx-verify
              ./cdx-verify --version
              sha256sum cdx-verify > cdx-verify.sha256
              ./cdxgen --help
              ./cdxgen-slim --help
              ./cdx-verify --help
              mv cdxgen cdxgen-musl-arm64
              mv cdxgen.sha256 cdxgen-musl-arm64.sha256
              mv cdxgen-slim cdxgen-musl-arm64-slim
              mv cdxgen-slim.sha256 cdxgen-musl-arm64-slim.sha256
              mv cdx-verify cdx-musl-arm64-verify
              mv cdx-verify.sha256 cdx-musl-arm64-verify.sha256
            artifact: cdxgen-musl-arm64
            sartifact: cdxgen-musl-arm64-slim
            vartifact: cdx-musl-arm64-verify
    runs-on: ${{ matrix.os }}
    container:
      image: alpine:3.20
    permissions:
      contents: write
      packages: write
    steps:
      - name: Setup alpine builder
        run: |
          apk add --no-cache nodejs make python3 python3-dev py3-pip py3-virtualenv gcc g++ musl-dev npm git
      - name: Clone repo
        env:
          REPO_URL: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          REF: ${{ github.head_ref || github.ref }}
        run: |
          case "$REF" in
            refs/heads/*) REF_NAME="${REF#refs/heads/}" ;;
            refs/tags/*)  REF_NAME="${REF#refs/tags/}"  ;;
            refs/pull/*)  REF_NAME="${REF#refs/pull/}"  ;;
            *)            REF_NAME="$REF"               ;;
          esac
          echo "Cloning ${REF} as ${REF_NAME}"
          git clone --depth=1 --branch "$REF_NAME" "$REPO_URL" .
          ls -lh
      - name: Install pnpm
        run: |
          npm install --global pnpm@10.12.1
          pnpm install --config.strict-dep-builds=true --virtual-store-dir node_modules/pnpm --prod --package-import-method copy --frozen-lockfile
      - name: Produce sae
        run: |
          ${{ matrix.build }}
        env:
          CDXGEN_DEBUG_MODE: debug
      - name: Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ matrix.artifact }}
            ${{ matrix.artifact }}.sha256
            ${{ matrix.sartifact }}
            ${{ matrix.sartifact }}.sha256
            ${{ matrix.vartifact }}
            ${{ matrix.vartifact }}.sha256
  musl-builds:
    if: github.repository == 'CycloneDX/cdxgen'
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-22.04' ]
        include:
          - os: ubuntu-22.04
            build: |
              rm -rf ci contrib tools_config
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen
              ./cdxgen --help
              sha256sum cdxgen > cdxgen.sha256
              rm -rf node_modules
              pnpm install --config.strict-dep-builds=true --virtual-store-dir node_modules/pnpm --no-optional --prod --package-import-method copy --frozen-lockfile              
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen-slim" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen-slim
              ./cdxgen-slim --version
              sha256sum cdxgen-slim > cdxgen-slim.sha256
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdx-verify" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/verify.js"
              chmod +x cdx-verify
              ./cdx-verify --version
              sha256sum cdx-verify > cdx-verify.sha256
              ./cdxgen --help
              ./cdxgen-slim --help
              ./cdx-verify --help
              mv cdxgen cdxgen-musl
              mv cdxgen.sha256 cdxgen-musl.sha256
              mv cdxgen-slim cdxgen-musl-slim
              mv cdxgen-slim.sha256 cdxgen-musl-slim.sha256
              mv cdx-verify cdx-musl-verify
              mv cdx-verify.sha256 cdx-musl-verify.sha256
            artifact: cdxgen-musl
            sartifact: cdxgen-musl-slim
            vartifact: cdx-musl-verify
    runs-on: ${{ matrix.os }}
    container:
      image: alpine:3.20
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup alpine builder
        run: |
          apk add --no-cache nodejs make python3 python3-dev py3-pip py3-virtualenv gcc g++ musl-dev npm
      - name: Install pnpm
        run: |
          npm install --global pnpm@10.12.1
          pnpm install --config.strict-dep-builds=true --virtual-store-dir node_modules/pnpm --prod --package-import-method copy --frozen-lockfile
      - name: Produce sae
        run: |
          ${{ matrix.build }}
        env:
          CDXGEN_DEBUG_MODE: debug
      - name: Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ matrix.artifact }}
            ${{ matrix.artifact }}.sha256
            ${{ matrix.sartifact }}
            ${{ matrix.sartifact }}.sha256
            ${{ matrix.vartifact }}
            ${{ matrix.vartifact }}.sha256
  sae-builds:
    if: github.repository == 'CycloneDX/cdxgen'
    strategy:
      fail-fast: false
      matrix:
        node-version: ['24']
        os: ['ubuntu-22.04', 'windows-2022', 'windows-11-arm', 'ubuntu-22.04-arm']
        include:
          - os: ubuntu-22.04
            build: |
              rm -rf ci contrib tools_config
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen
              ./cdxgen --help
              sha256sum cdxgen > cdxgen.sha256
              rm -rf node_modules
              pnpm install --config.strict-dep-builds=true --virtual-store-dir node_modules/pnpm --no-optional --prod --package-import-method copy --frozen-lockfile              
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen-slim" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen-slim
              ./cdxgen-slim --version
              sha256sum cdxgen-slim > cdxgen-slim.sha256
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdx-verify" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/verify.js"
              chmod +x cdx-verify
              ./cdx-verify --version
              sha256sum cdx-verify > cdx-verify.sha256
              ./cdxgen --help
              ./cdxgen-slim --help
              ./cdx-verify --help
            artifact: cdxgen
            sartifact: cdxgen-slim
            vartifact: cdx-verify
          - os: ubuntu-22.04-arm
            build: |
              rm -rf ci contrib tools_config
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen-arm64" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen-arm64
              ./cdxgen-arm64 --version
              sha256sum cdxgen-arm64 > cdxgen-arm64.sha256
              rm -rf node_modules
              pnpm install --config.strict-dep-builds=true --virtual-store-dir node_modules/pnpm --no-optional --prod --package-import-method copy --frozen-lockfile
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen-arm64-slim" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen-arm64-slim
              ./cdxgen-arm64-slim --version
              sha256sum cdxgen-arm64-slim > cdxgen-arm64-slim.sha256
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdx-arm64-verify" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/verify.js"
              chmod +x cdx-arm64-verify
              ./cdx-arm64-verify --version
              sha256sum cdx-arm64-verify > cdx-arm64-verify.sha256
              ./cdxgen-arm64 --help
              ./cdxgen-arm64-slim --help
              ./cdx-arm64-verify --help
            artifact: cdxgen-arm64
            sartifact: cdxgen-arm64-slim
            vartifact: cdx-arm64-verify
          - os: windows-2022
            build: |
              Remove-Item ci -Recurse -Force
              Remove-Item contrib -Recurse -Force
              Remove-Item tools_config -Recurse -Force
              npm install --omit=dev --no-package-lock --no-audit --no-fund --no-progress
              npx --no-progress --yes @appthreat/caxa --input . --output "cdxgen.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              .\cdxgen.exe --version
              (Get-FileHash .\cdxgen.exe).hash | Out-File -FilePath .\cdxgen.exe.sha256
              Remove-Item node_modules -Recurse -Force
              npm install --omit=optional --omit=dev --no-package-lock --no-audit --no-fund
              npx --no-progress --yes @appthreat/caxa --input . --output "cdxgen-slim.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              .\cdxgen-slim.exe --version
              (Get-FileHash .\cdxgen-slim.exe).hash | Out-File -FilePath .\cdxgen-slim.exe.sha256
              npx --no-progress --yes @appthreat/caxa --input . --output "cdx-verify.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/verify.js"
              (Get-FileHash .\cdx-verify.exe).hash | Out-File -FilePath .\cdx-verify.exe.sha256
              .\cdxgen.exe --help
              .\cdxgen-slim.exe --help
              .\cdx-verify.exe --help
            artifact: cdxgen.exe
            sartifact: cdxgen-slim.exe
            vartifact: cdx-verify.exe
          - os: windows-11-arm
            build: |
              Remove-Item ci -Recurse -Force
              Remove-Item contrib -Recurse -Force
              Remove-Item tools_config -Recurse -Force
              npm install --omit=dev --no-package-lock --no-audit --no-fund --no-progress
              npx --no-progress --yes @appthreat/caxa --input . --output "cdxgen-arm.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              .\cdxgen-arm.exe --version
              (Get-FileHash .\cdxgen-arm.exe).hash | Out-File -FilePath .\cdxgen-arm.exe.sha256
              Remove-Item node_modules -Recurse -Force
              npm install --omit=optional --omit=dev --no-package-lock --no-audit --no-fund
              npx --no-progress --yes @appthreat/caxa --input . --output "cdxgen-arm-slim.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              .\cdxgen-arm-slim.exe --version
              (Get-FileHash .\cdxgen-arm-slim.exe).hash | Out-File -FilePath .\cdxgen-arm-slim.exe.sha256
              npx --no-progress --yes @appthreat/caxa --input . --output "cdx-arm-verify.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/verify.js"
              (Get-FileHash .\cdx-arm-verify.exe).hash | Out-File -FilePath .\cdx-arm-verify.exe.sha256
              .\cdxgen-arm.exe --help
              .\cdxgen-arm-slim.exe --help
              .\cdx-arm-verify.exe --help
            artifact: cdxgen-arm.exe
            sartifact: cdxgen-arm-slim.exe
            vartifact: cdx-arm-verify.exe
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pnpm
        run: |
          npm install --global pnpm@10.12.1
          pnpm install --config.strict-dep-builds=true --virtual-store-dir node_modules/pnpm --prod --package-import-method copy --frozen-lockfile
        if: ${{ !startsWith(matrix.os, 'windows') }}
      - name: Produce sae
        run: |
          ${{ matrix.build }}
        env:
          CDXGEN_DEBUG_MODE: debug
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.sartifact }}
          path: ${{ matrix.sartifact }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ matrix.vartifact }}
          path: ${{ matrix.vartifact }}
      - name: Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ matrix.artifact }}
            ${{ matrix.artifact }}.sha256
            ${{ matrix.sartifact }}
            ${{ matrix.sartifact }}.sha256
            ${{ matrix.vartifact }}
            ${{ matrix.vartifact }}.sha256

  retry:
    needs: [ musl-builds, musl-builds-arm64, sae-builds ]
    if: failure() && fromJSON(github.run_attempt) < 3
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - run: gh workflow run rerun-workflow.yml -F run_id=${{ github.run_id }}
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
