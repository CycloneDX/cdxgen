name: Binary builds

on:
  pull_request:
    paths:
      - '.github/workflows/binary-builds.yml'
      - '.pnpmfile.cjs'
      - 'bin/**'
      - 'data/**'
      - 'index.cjs'
      - 'lib/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '!**.test.js'
  push:
    branches:
      - release/*
    tags:
      - 'v*'
    paths:
      - '.github/workflows/binary-builds.yml'
      - '.pnpmfile.cjs'
      - 'bin/**'
      - 'data/**'
      - 'index.cjs'
      - 'lib/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '!**.test.js'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/controlling-permissions-for-github_token
permissions: {}

jobs:
  binaries:
    if: github.repository == 'CycloneDX/cdxgen'
    strategy:
      fail-fast: false
      matrix:
        os: [ linux, macos, windows ]
        arch: [ amd64, arm64]
        format: [ musl, sae ]
        node: [ 24 ]
        alpine: [ 3.22 ]
        exclude:
          # Musl can only be built on linux
          - os: macos
            format: musl
          - os: windows
            format: musl
          # MacOS has no amd64 variant
          - os: macos
            arch: amd64
        include:
          # Set all the runners
          - os: linux
            arch: amd64
            runner: ubuntu-24.04
          - os: linux
            arch: arm64
            runner: ubuntu-24.04-arm
          - os: macos
            arch: arm64
            runner: macos-15
          - os: windows
            arch: amd64
            runner: windows-2025
          - os: windows
            arch: arm64
            runner: windows-11-arm
          # Set arch-suffixes
          - arch: amd64
            arch-suffix: ''
          - arch: arm64
            arch-suffix: -arm64
          - arch: arm64
            os: windows
            arch-suffix: -arm
          # Set file-extensions
          - file-extension: ''
          - os: windows
            file-extension: .exe
          # Set other suffixes
          - suffix: ''
          - format: musl
            suffix: -musl
          - os: macos
            suffix: -darwin
          # Set the commands
          - cmd: |
              # Prepare workspace
              rm -rf ci contrib tools_config
              pnpm install --config.strict-dep-builds=true --virtual-store-dir node_modules/pnpm --prod --package-import-method copy --frozen-lockfile

              # Produce cdxgen binary
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen
              ./cdxgen --version
              ./cdxgen --help

              # Prepare for slim binaries
              rm -rf node_modules
              pnpm install --config.strict-dep-builds=true --virtual-store-dir node_modules/pnpm --no-optional --prod --package-import-method copy --frozen-lockfile

              # Produce slim cdxgen binary
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdxgen-slim" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              chmod +x cdxgen-slim
              ./cdxgen-slim --version
              ./cdxgen-slim --help

              # Produce verify binary
              pnpm --package=@appthreat/caxa dlx caxa --input . --output "cdx-verify" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/verify.js"
              chmod +x cdx-verify
              ./cdx-verify --version
              ./cdx-verify --help
          - os: windows
            cmd: |
              # Prepare workspace
              Remove-Item ci -Recurse -Force
              Remove-Item contrib -Recurse -Force
              Remove-Item tools_config -Recurse -Force
              npm install --omit=dev --no-package-lock --no-audit --no-fund --no-progress

              # Produce cdxgen binary
              npx --no-progress --yes @appthreat/caxa --input . --output "cdxgen.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              .\cdxgen.exe --version
              .\cdxgen.exe --help

              # Prepare for slim binaries
              Remove-Item node_modules -Recurse -Force
              npm install --omit=optional --omit=dev --no-package-lock --no-audit --no-fund

              # Produce slim cdxgen binary
              npx --no-progress --yes @appthreat/caxa --input . --output "cdxgen-slim.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/cdxgen.js"
              .\cdxgen-slim.exe --version
              .\cdxgen-slim.exe --help

              # Produce verify binary
              npx --no-progress --yes @appthreat/caxa --input . --output "cdx-verify.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/verify.js"
              .\cdx-verify.exe --version
              .\cdx-verify.exe --help
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write  # needed to issue a GH release or uploading release assets
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Use Node.js ${{ matrix.node }}
        if: ${{ matrix.format == 'sae' }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node }}
      - name: Install pnpm
        if: ${{ matrix.os != 'windows' }}
        run: |
          npm install --global pnpm
      - name: Get user info
        id: user_info
        if: ${{ matrix.format == 'musl' }}
        run: |
          echo -n "user=$(id -u):$(id -g)" > $GITHUB_OUTPUT
      - name: Build musl
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185 # v3
        if: ${{ matrix.format == 'musl' }}
        with:
          image: alpine:${{ matrix.alpine }}
          options: -v ${{ github.workspace }}:${{ github.workspace }}
          run: |
            # Setup alpine builder
            apk add --no-cache g++ gcc make musl-dev nodejs npm python3 python3-dev py3-pip py3-virtualenv

            # Install pnpm
            npm install --global pnpm

            # Build
            cd ${{ github.workspace }}
            ${{ matrix.cmd }}

            # Change the owner to the local user
            chown ${{ steps.user_info.outputs.user }} cdx*
      - name: Build sae
        if: ${{ matrix.format == 'sae' }}
        run: ${{ matrix.cmd }}
      - name: Correct filenames
        run: |
          # Rename to temporary name -- fix for renaming to the same name, which does not work
          mv cdxgen${{ matrix.file-extension }} _cdxgen
          mv cdxgen-slim${{ matrix.file-extension }} _cdxgen-slim
          mv cdx-verify${{ matrix.file-extension }} _cdx-verify

          # Rename to the correct name
          mv _cdxgen cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}${{ matrix.file-extension }}
          mv _cdxgen-slim cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}-slim${{ matrix.file-extension }}
          mv _cdx-verify cdx${{ matrix.suffix }}${{ matrix.arch-suffix }}-verify${{ matrix.file-extension }}
      - name: Generate checksums (non-Windows)
        if: ${{ matrix.os != 'windows' }}
        run: |
          sha256sum cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }} > cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}.sha256
          sha256sum cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}-slim > cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}-slim.sha256
          sha256sum cdx${{ matrix.suffix }}${{ matrix.arch-suffix }}-verify > cdx${{ matrix.suffix }}${{ matrix.arch-suffix }}-verify.sha256
      - name: Generate checksums (Windows)
        if: ${{ matrix.os == 'windows' }}
        run: |
          (Get-FileHash .\cdxgen${{ matrix.arch-suffix }}.exe).hash | Out-File -FilePath .\cdxgen${{ matrix.arch-suffix }}.exe.sha256
          (Get-FileHash .\cdxgen${{ matrix.arch-suffix }}-slim.exe).hash | Out-File -FilePath .\cdxgen-slim${{ matrix.arch-suffix }}.exe.sha256
          (Get-FileHash .\cdx${{ matrix.arch-suffix }}-verify.exe).hash | Out-File -FilePath .\cdx-verify${{ matrix.arch-suffix }}.exe.sha256
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}${{ matrix.file-extension }}
          path: cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}${{ matrix.file-extension }}
          if-no-files-found: error
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}-slim${{ matrix.file-extension }}
          path: cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}-slim${{ matrix.file-extension }}
          if-no-files-found: error
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: cdx${{ matrix.suffix }}${{ matrix.arch-suffix }}-verify${{ matrix.file-extension }}
          path: cdx${{ matrix.suffix }}${{ matrix.arch-suffix }}-verify${{ matrix.file-extension }}
          if-no-files-found: error
      - name: Release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}${{ matrix.file-extension }}
            cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}${{ matrix.file-extension }}.sha256
            cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}-slim${{ matrix.file-extension }}
            cdxgen${{ matrix.suffix }}${{ matrix.arch-suffix }}-slim${{ matrix.file-extension }}.sha256
            cdx${{ matrix.suffix }}${{ matrix.arch-suffix }}-verify${{ matrix.file-extension }}
            cdx${{ matrix.suffix }}${{ matrix.arch-suffix }}-verify${{ matrix.file-extension }}.sha256
