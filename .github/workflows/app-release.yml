name: Release AppImage and Exe

on:
  push:
    tags:
    - 'v*'

jobs:
  pkg:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Install ldid
      uses: MOZGIII/install-ldid-action@v1
      with:
        tag: v2.1.5-procursus6
    - name: Produce pkg - 18
      run: |
        sudo npm install -g pkg
        npm install
        pkg -t node18-alpine,node18-linux,node18-win,node18-mac,node18-mac-arm64 --no-bytecode --no-native-build --compress GZip --public package.json --out-path dist
        chmod +x dist/cdxgen*
        for f in `ls dist`; do sha256sum dist/$f > dist/$f.sha256 ; done
    - name: Test pkg
      run: |
        ./dist/cdxgen-linux -v
        ./dist/cdxgen-linux .
    - name: Install dependencies
      run: |
        sudo apt-get install -y python3.8 python3.8-dev python3-pip python3-testresources python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev
        # Install appimagetool AppImage
        sudo wget https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
        sudo chmod +x /usr/local/bin/appimagetool
        sudo pip3 install appimage-builder==0.8.1
        mkdir -p appimage-builder-cache
        wget https://github.com/AppImage/AppImageKit/releases/download/12/runtime-x86_64 -O appimage-builder-cache/runtime-x86_64
    - name: Build AppImage
      run: |
        appimage-builder --recipe appimage-builder.yml --skip-test
      env:
        UPDATE_INFO: gh-releases-zsync|AppThreat|cdxgen|latest|*x86_64.AppImage.zsync
    - name: Zip pkg - lts
      run: |
        zip --junk-paths -r cdxgen-dist.zip dist cdxgen-latest-x86_64.AppImage
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          cdxgen-dist.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
