name: Python atom tests

on:
  pull_request:
    paths:
      - '.github/workflows/python-atom-tests.yml'
      - '.pnpmfile.cjs'
      - 'bin/**'
      - 'data/**'
      - 'index.cjs'
      - 'lib/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '!**.poku.js'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/controlling-permissions-for-github_token
permissions: {}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        java-version: ['24']
        node-version: ['24.7.0']
        os: ['ubuntu-24.04']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          fetch-depth: 0
      - uses: coursier/cache-action@4e2615869d13561d626ed48655e1a39e5b192b3c # v6.4.7
      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - name: pnpm install, build and test
        run: |
          pnpm install --config.strict-dep-builds=true
          mkdir -p repotests
          mkdir -p bomresults
        env:
          CI: true
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: 'scipy/scipy'
          path: 'repotests/scipy'
          ref: 'v1.15.2'
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: 'psf/black'
          path: 'repotests/black'
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: 'psf/pyperf'
          path: 'repotests/pyperf'
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: 'psf/cachecontrol'
          path: 'repotests/cachecontrol'
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: 'pallets/flask'
          path: 'repotests/flask'
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: 'pallets/click'
          path: 'repotests/click'
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: 'pallets/jinja'
          path: 'repotests/jinja'
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: 'pypa/bandersnatch'
          path: 'repotests/bandersnatch'
      - name: repotests
        run: |
          bin/cdxgen.js -p -r -t python repotests/scipy -o bomresults/bom-scipy.json --validate
          bin/cdxgen.js -p -r -t python repotests/black -o bomresults/bom-black.json --validate
          bin/cdxgen.js -p -r -t python repotests/pyperf -o bomresults/bom-pyperf.json --validate
          bin/cdxgen.js -p -r -t python repotests/cachecontrol -o bomresults/bom-cachecontrol.json --validate
          bin/cdxgen.js -p -r -t python repotests/flask -o bomresults/bom-flask.json --validate
          bin/cdxgen.js -r -t python repotests/click -o bomresults/bom-click.json --validate
          bin/cdxgen.js -p -r -t python repotests/jinja -o bomresults/bom-jinja.json --validate
          bin/cdxgen.js -r -t python repotests/bandersnatch -o bomresults/bom-bandersnatch.json --validate
          bin/cdxgen.js --no-install-deps -p -r -t python repotests/scipy -o bomresults/bom-scipy.json --validate
          bin/cdxgen.js --no-install-deps -p -r -t python repotests/black -o bomresults/bom-black.json --validate
          bin/cdxgen.js --no-install-deps -p -r -t python repotests/pyperf -o bomresults/bom-pyperf.json --validate
          bin/cdxgen.js --no-install-deps -p -r -t python repotests/cachecontrol -o bomresults/bom-cachecontrol.json --validate
          bin/cdxgen.js --no-install-deps -p -r -t python repotests/flask -o bomresults/bom-flask.json --validate
          bin/cdxgen.js --no-install-deps -r -t python repotests/click -o bomresults/bom-click.json --validate
          bin/cdxgen.js --no-install-deps -p -r -t python repotests/jinja -o bomresults/bom-jinja.json --validate
          bin/cdxgen.js --no-install-deps -r -t python repotests/bandersnatch -o bomresults/bom-bandersnatch.json --validate

          # virtualenv tests
          python -m venv venv
          source venv/bin/activate
          pip install -r repotests/bandersnatch/requirements.txt
          pip install -r repotests/bandersnatch/requirements_s3.txt
          pip install -r repotests/bandersnatch/requirements_swift.txt
          pip install -r repotests/bandersnatch/requirements_test.txt
          pip install -r repotests/bandersnatch/requirements_docs.txt
          bin/cdxgen.js --no-install-deps -r -t python repotests/bandersnatch -o bomresults/bom-bandersnatch.json --validate
          rm -rf venv
        env:
          CDXGEN_DEBUG_MODE: verbose
