name: Reachables tests

on:
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  java-sample1:
    strategy:
      fail-fast: false
      matrix:
        node-version: ['23.x']
        os: ['ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build
        run: |
          corepack enable
          corepack pnpm install
          mkdir -p repotests
          mkdir -p bomresults
      - uses: actions/checkout@v4
        with:
          repository: 'DependencyTrack/dependency-track'
          path: 'repotests/dependency-track'
          ref: '4.11.1'
      - name: compile
        run: |
          cd repotests/dependency-track
          mvn -q clean compile -DskipTests -Dmaven.test.skip=true
      - name: repotests
        run: |
          node bin/cdxgen.js -p -t java --profile research -o repotests/dependency-track/bom.json repotests/dependency-track
          ls -ltr repotests/dependency-track/
          cp -rf repotests/dependency-track/*.json bomresults/
        env:
          CDXGEN_DEBUG_MODE: debug
      - uses: actions/upload-artifact@v4
        with:
          name: bomresults
          path: bomresults

  ruby-sample1:
    strategy:
      fail-fast: false
      matrix:
        node-version: ['23.x']
        os: ['ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: setup paths
        run: |
          corepack enable pnpm
          echo "${RUNNER_TEMP}/bin" >> "$GITHUB_PATH"
          echo "${GITHUB_WORKSPACE}/node_modules/.bin" >> "$GITHUB_PATH"
          mkdir -p repotests
          mkdir -p rubyresults
      - name: npm install, build
        run: |
          pnpm install --package-import-method copy
          pnpm config set global-bin-dir "${RUNNER_TEMP}/bin"
          pnpm install -g .
      - uses: actions/checkout@v4
        with:
          repository: 'campsite/campsite'
          path: 'repotests/campsite'
          ref: '10197238bbbefd9c9ac7c77467b647fd93993ba0'
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
        id: ruby34
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
      - name: bundle install
        run: |
          cd repotests/campsite/api
          bundle install
          rm -rf vendor/cache vendor/yarn
        env:
          BUNDLE_PATH: ${{ runner.temp }}/vendor/bundle
      - name: generate sbom with reachables
        run: |
          echo "ATOM_RUBY_HOME: ${ATOM_RUBY_HOME}"
          echo "CDXGEN_GEM_HOME: ${CDXGEN_GEM_HOME}"
          atom --help
          rbastgen --help
          node $GITHUB_WORKSPACE/bin/cdxgen.js -t ruby --profile research -o bom.json .
          ls -lh
          cp bom.json *.slices.json $GITHUB_WORKSPACE/rubyresults
        env:
          CDXGEN_DEBUG_MODE: debug
          ATOM_RUBY_HOME: ${{ steps.ruby34.outputs.ruby-prefix }}
          CDXGEN_GEM_HOME: ${{ runner.temp }}/vendor/bundle/ruby/3.3.0
        working-directory: ./repotests/campsite/api
      - uses: actions/upload-artifact@v4
        with:
          name: rubyresults
          path: rubyresults
