name: Image build

# This workflow CAN NOT be called directly. It is currently used by:
# - build-images.yml
# - build-rolling-image.yml
#
# If any changes are made to this workflow, specifically with any inputs, make
# sure to check/update the above workflows!

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string

env:
  REPO: ghcr.io
  TAG: v11
  TEAM: cyclonedx

jobs:
  image:
    permissions:
      contents: read
      packages: write
    runs-on: ${{ fromJSON(inputs.image).runner || 'ubuntu-24.04' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Free disk space
        if: ${{ ! fromJSON(inputs.image).runner }}
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
      - name: Trim CI agent even more
        if: ${{ ! fromJSON(inputs.image).runner }}
        run: |
          chmod +x contrib/free_disk_space.sh
          ./contrib/free_disk_space.sh
      - name: Set up QEMU
        if: ${{ ! fromJSON(inputs.image).runner }}
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Fix QEMU
        if: ${{ fromJSON(inputs.image).fix-qemu }}
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes -c yes
      - name: Set up Docker BuildX
        if: ${{ ! fromJSON(inputs.image).runner }}
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Setup ORAS
        uses: oras-project/setup-oras@8d34698a59f5ffe24821f0b48ab62a3de8b64b20 # v1.2.3
      - name: Install project dependencies
        run: |
          corepack pnpm install --config.strict-dep-builds=true --package-import-method copy --frozen-lockfile
          mkdir -p $RUNNER_TEMP/cdxgen-sboms
      - name: Login to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Base image
      - name: Build base image
        uses: ./.github/actions/build-docker-images-generate-attach-sboms
        with:
          build-arm: ${{ ! fromJSON(inputs.image).skip-arm }}
          dockerfile: ci/images/${{ fromJSON(inputs.image).distro }}/Dockerfile.${{ fromJSON(inputs.image).lang }}
          images: |
             ${{ env.REPO }}/${{ env.TEAM }}/${{ fromJSON(inputs.image).base-image.name || fromJSON(inputs.image).distro || 'bci' }}-${{ fromJSON(inputs.image).base-image.lang || fromJSON(inputs.image).lang }}
             ${{ fromJSON(inputs.image).base-image.additional-image && format('{0}/{1}/{2}', env.REPO, env.TEAM, fromJSON(inputs.image).base-image.additional-image) || '' }}
          signing-key: ${{ secrets.SBOM_SIGN_PRIVATE_KEY }}
          target: base

      # cdxgen image
      - name: Build cdxgen image - master-branch
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        uses: ./.github/actions/build-docker-images-generate-attach-sboms
        with:
          build-arm: ${{ ! fromJSON(inputs.image).skip-arm }}
          dockerfile: ci/images/${{ fromJSON(inputs.image).distro }}/Dockerfile.${{ fromJSON(inputs.image).lang }}
          images: |
            ${{ env.REPO }}/${{ env.TEAM }}/cdxgen${{ fromJSON(inputs.image).distro && format('-{0}', fromJSON(inputs.image).distro) }}-${{ fromJSON(inputs.image).lang }}
            ${{ fromJSON(inputs.image).cdxgen-image.additional-image && format('{0}/{1}/{2}', env.REPO, env.TEAM, fromJSON(inputs.image).cdxgen-image.additional-image) || '' }}
            ${{ fromJSON(inputs.image).cdxgen-image.additional-image2 && format('{0}/{1}/{2}', env.REPO, env.TEAM, fromJSON(inputs.image).cdxgen-image.additional-image2) || '' }}
            ${{ fromJSON(inputs.image).cdxgen-image.additional-image3 && format('{0}/{1}/{2}', env.REPO, env.TEAM, fromJSON(inputs.image).cdxgen-image.additional-image3) || '' }}
          main-tag: ${{ env.REPO }}/${{ env.TEAM }}/cdxgen${{ fromJSON(inputs.image).distro && format('-{0}', fromJSON(inputs.image).distro) }}-${{ fromJSON(inputs.image).lang }}:${{ env.TAG }}
          signing-key: ${{ secrets.SBOM_SIGN_PRIVATE_KEY }}
          tags: |
            ${{ env.REPO }}/${{ env.TEAM }}/cdxgen${{ fromJSON(inputs.image).distro && format('-{0}', fromJSON(inputs.image).distro) }}-${{ fromJSON(inputs.image).lang }}:${{ env.TAG }}
            ${{ fromJSON(inputs.image).cdxgen-image.additional-image && format('{0}/{1}/{2}:{3}', env.REPO, env.TEAM, fromJSON(inputs.image).cdxgen-image.additional-image, env.TAG) }}
            ${{ fromJSON(inputs.image).cdxgen-image.additional-image2 && format('{0}/{1}/{2}:{3}', env.REPO, env.TEAM, fromJSON(inputs.image).cdxgen-image.additional-image2, env.TAG) }}
            ${{ fromJSON(inputs.image).cdxgen-image.additional-image3 && format('{0}/{1}/{2}:{3}', env.REPO, env.TEAM, fromJSON(inputs.image).cdxgen-image.additional-image3, env.TAG) }}
          target: cdxgen
      - name: Build cdxgen image - tags
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: ./.github/actions/build-docker-images-generate-attach-sboms
        with:
          build-arm: ${{ ! fromJSON(inputs.image).skip-arm }}
          dockerfile: ci/images/${{ fromJSON(inputs.image).distro }}/Dockerfile.${{ fromJSON(inputs.image).lang }}
          images: |
            ${{ env.REPO }}/${{ env.TEAM }}/cdxgen${{ fromJSON(inputs.image).distro && format('-{0}', fromJSON(inputs.image).distro) }}-${{ fromJSON(inputs.image).lang }}
            ${{ fromJSON(inputs.image).cdxgen-image.additional-image && format('{0}/{1}/{2}', env.REPO, env.TEAM, fromJSON(inputs.image).cdxgen-image.additional-image) || '' }}
            ${{ fromJSON(inputs.image).cdxgen-image.additional-image2 && format('{0}/{1}/{2}', env.REPO, env.TEAM, fromJSON(inputs.image).cdxgen-image.additional-image2) || '' }}
            ${{ fromJSON(inputs.image).cdxgen-image.additional-image3 && format('{0}/{1}/{2}', env.REPO, env.TEAM, fromJSON(inputs.image).cdxgen-image.additional-image3) || '' }}
          signing-key: ${{ secrets.SBOM_SIGN_PRIVATE_KEY }}
          target: cdxgen

      # Cleanup
      - name: Clean buildx cache
        if: ${{ fromJSON(inputs.image).runner || failure() }}
        shell: bash
        run: |
          docker buildx prune -af
