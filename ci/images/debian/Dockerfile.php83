# Base-image
FROM php:8.3-bookworm AS base

# renovate: datasource=docker depName=node
ARG NODE_VERSION=24.3.0
ARG JAVA_VERSION=21.0.7-tem

ENV JAVA_VERSION=$JAVA_VERSION \
  	JAVA_HOME="/opt/java/${JAVA_VERSION}" \
	  NVM_DIR="/root/.nvm"
ENV PATH=${PATH}:${NVM_DIR}/versions/node/v${NODE_VERSION}/bin:/usr/local/bin:/root/.local/bin
        
COPY ci/images/debian/install.sh /tmp/

RUN apt-get update && apt-get install -qq -y --no-install-recommends curl bash bzip2 git-core zip unzip make gawk \
    && apt-get install -qq -y build-essential python3 python3-pip python3-dev locales \
    && apt-get install -qq -y libzip-dev libicu-dev libonig-dev libxml2-dev libcurl4-openssl-dev \
    && docker-php-ext-install zip intl mbstring xml curl pdo pdo_mysql mysqli \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && chmod +x /tmp/install.sh \
    && /tmp/install.sh && rm /tmp/install.sh \
    && node -v \
    && npm -v \
    && php -v \
    && composer --version \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \
    && rm -rf /var/lib/apt/lists/*

CMD ["/bin/bash"]


# cdxgen-image
FROM base AS cdxgen

LABEL maintainer="CycloneDX" \
      org.opencontainers.image.authors="Team AppThreat <cloud@appthreat.com>" \
      org.opencontainers.image.source="https://github.com/CycloneDX/cdxgen" \
      org.opencontainers.image.url="https://github.com/CycloneDX/cdxgen" \
      org.opencontainers.image.version="rolling" \
      org.opencontainers.image.vendor="CycloneDX" \
      org.opencontainers.image.licenses="Apache-2.0" \
      org.opencontainers.image.title="cdxgen" \
      org.opencontainers.image.description="Rolling image with cdxgen SBOM generator for php apps" \
      org.opencontainers.docker.cmd="docker run --rm -v /tmp:/tmp -p 9090:9090 -v $(pwd):/app:rw -t ghcr.io/cyclonedx/cdxgen-debian-php83:v11 -r /app --server"

ENV CDXGEN_IN_CONTAINER=true \
    NODE_COMPILE_CACHE="/opt/cdxgen-node-cache" \
    PYTHONPATH=/opt/pypi
ENV PATH=${PATH}:/usr/local/bin:${PYTHONPATH}/bin:/opt/cdxgen/node_modules/.bin

COPY . /opt/cdxgen

RUN cd /opt/cdxgen && corepack enable && corepack pnpm install --config.strict-dep-builds=true --prod --package-import-method copy --frozen-lockfile && corepack pnpm cache delete \
	  && npm install -g --omit=dev @appthreat/atom-parsetools@1.0.4 \
    && mkdir -p ${NODE_COMPILE_CACHE} \
    && node /opt/cdxgen/bin/cdxgen.js --help \
    && pip install --upgrade --no-cache-dir atom-tools --target /opt/pypi \
	  && phpastgen --help \
    && rm -rf /root/.cache/node \
    && chmod a-w -R /opt
WORKDIR /app
ENTRYPOINT ["node", "/opt/cdxgen/bin/cdxgen.js"]
