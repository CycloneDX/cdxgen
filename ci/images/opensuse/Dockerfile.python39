# Base-image
FROM registry.opensuse.org/opensuse/bci/python:3.9 AS base

ENV CC=gcc \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    npm_config_python=/usr/bin/python3.9 \
    PYTHONPATH=/opt/pypi:${PYTHONPATH}

ENV PATH=${PATH}:/usr/local/bin:/opt/pypi/bin:
RUN set -e; \
    ARCH_NAME="$(rpm --eval '%{_arch}')"; \
    url=; \
    case "${ARCH_NAME##*-}" in \
        'x86_64') \
            OS_ARCH_SUFFIX=''; \
            GOBIN_VERSION='amd64'; \
            ;; \
        'aarch64') \
            OS_ARCH_SUFFIX='-aarch64'; \
            GOBIN_VERSION='arm64'; \
            ;; \
        *) echo >&2 "error: unsupported architecture: '$ARCH_NAME'"; exit 1 ;; \
    esac \
    && zypper refresh && zypper --non-interactive update && zypper --non-interactive install -l --no-recommends gcc13 gcc13-c++ gcc13-fortran \
        python39 python39-devel python39-pip findutils java-24-openjdk-devel \
        bzip2 git-core wget zip unzip make gawk nodejs22 npm22 nodejs22-devel libxml2-devel \
    && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-13 10 \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 10 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 10 \
    && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-13 10 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.9 10 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 10 \
    && mkdir /opt/pypi \
    && python -m pip install --no-cache-dir --upgrade setuptools pip virtualenv \
    && python -m pip install --no-cache-dir --upgrade poetry pipenv uv --target /opt/pypi \
    && npm install -g npm \
    && node -v \
    && npm -v \
    && npm install -g corepack \
    && poetry --version \
    && pipenv --version \
    && gcc --version \
    && curl -L --output /usr/bin/bazel https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-${GOBIN_VERSION} \
    && chmod +x /usr/bin/bazel \
    && bazel --version \
    && zypper clean -a

CMD ["/bin/bash"]



# cdxgen-image
FROM base AS cdxgen

LABEL maintainer="CycloneDX" \
      org.opencontainers.image.authors="Team AppThreat <cloud@appthreat.com>" \
      org.opencontainers.image.source="https://github.com/CycloneDX/cdxgen" \
      org.opencontainers.image.url="https://github.com/CycloneDX/cdxgen" \
      org.opencontainers.image.version="rolling" \
      org.opencontainers.image.vendor="CycloneDX" \
      org.opencontainers.image.licenses="Apache-2.0" \
      org.opencontainers.image.title="cdxgen" \
      org.opencontainers.image.description="Rolling image with cdxgen SBOM generator for python 3.9 apps" \
      org.opencontainers.docker.cmd="docker run --rm -v /tmp:/tmp -p 9090:9090 -v $(pwd):/app:rw -t ghcr.io/cyclonedx/cdxgen-python39:v11 -r /app --server"

ENV CDXGEN_IN_CONTAINER=true \
    SAFE_PIP_INSTALL=true \
    NODE_COMPILE_CACHE="/opt/cdxgen-node-cache" \
    CRYPTOGRAPHY_DONT_BUILD_RUST=1 \
    PATH=${PATH}:/opt/cdxgen/node_modules/.bin:

COPY . /opt/cdxgen

RUN zypper --non-interactive install --allow-downgrade -l --no-recommends readline-devel clang15 llvm15 llvm15-devel libjpeg62-devel libmariadb-devel \
        postgresql16-devel postgresql16-server-devel libopenssl-devel libopenblas_pthreads-devel lapacke-devel graphviz-devel \
    && cd /opt/cdxgen && corepack enable && corepack pnpm install --config.strict-dep-builds=true --prod --package-import-method copy --frozen-lockfile && corepack pnpm cache delete \
    && mkdir -p /opt/cdxgen-node-cache \
    && node /opt/cdxgen/bin/cdxgen.js --help \
    && chmod a-w -R /opt \
    && rm -rf /root/.cache/node \
    && zypper clean -a
WORKDIR /app
ENTRYPOINT ["node", "/opt/cdxgen/bin/cdxgen.js"]
