# Base-image
FROM registry.suse.com/bci/nodejs:20.19.2@sha256:c7a30d16dc5c32f21d363fa422fe1f7ec10ad8963eb6732d3ae9afa70aad2340 AS base

ARG GITHUB_RAW_URL=https://raw.githubusercontent.com
ARG GITHUB_URL=https://github.com
ARG GCC_VERSION=14
ARG NODEJS_DIST_URL
ARG NPM_REPO
ARG NVM
ARG NVM_VERSION=${NVM}
ARG PIP_CONFIG
ARG SUSE_REPO

ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8 \
    NVM_DIR="/root/.nvm" \
    PYTHONPATH=/opt/pypi \
    npm_config_python=/usr/bin/python3.11
ENV PATH=${PATH}:/usr/local/bin:${PYTHONPATH}/bin

RUN set -e; \
    if [ -n "$NODEJS_DIST_URL" ]; then \
      export "NVM_NODEJS_ORG_MIRROR=$NODEJS_DIST_URL"; \
      printf "disturl=$NODEJS_DIST_URL\n" >> $HOME/.npmrc; \
    fi; \
    if [ -n "$NPM_REPO" ]; then \
      export "COREPACK_NPM_REGISTRY=$NPM_REPO"; \
      printf "registry=$NPM_REPO\n@jsr:registry=$NPM_REPO\n" >> $HOME/.npmrc; \
    fi; \
    if [ -n "$PIP_CONFIG" ]; then \
      mkdir $HOME/.pip/; \
      printf "$PIP_CONFIG" > $HOME/.pip/pip.conf; \
    fi; \
    if [ -n "$SUSE_REPO" ]; then \
      sed -i "s|https://public-dl.suse.com|$SUSE_REPO|g" /etc/zypp/repos.d/*; \
      zypper --no-gpg-checks refresh; \
    fi; \
    ARCH_NAME="$(rpm --eval '%{_arch}')"; \
    case "${ARCH_NAME##*-}" in \
      'amd64' | 'x86_64') \
        GOBIN_VERSION='amd64'; \
        ;; \
      'aarch64' | 'arm64') \
        GOBIN_VERSION='arm64'; \
        ;; \
      *) \
        echo >&2 "error: unsupported architecture: '$ARCH_NAME'"; \
        exit 1 \
        ;; \
    esac \
 && zypper refresh \
 && zypper \
      --non-interactive \
        update \
 && zypper \
      --non-interactive \
        install \
        -l \
        --no-recommends \
          bzip2 \
          gawk \
          gcc${GCC_VERSION} \
          gcc${GCC_VERSION}-c++ \
          git-core \
          make \
          nodejs20-devel \
          python311 \
          python311-devel \
          python311-pip \
          unzip \
          wget \
          zip \
 && update-alternatives --install /usr/bin/python python /usr/bin/python3.11 10 \
 && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 10 \
 && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 10 \
 && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 10 \
 && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 10 \
 && pip install \
      --no-cache-dir \
      --target ${PYTHONPATH} \
      --upgrade \
        atom-tools \
 && atom-tools --help \
 && npm install -g \
      corepack \
      node-gyp \
 && npx node-gyp install \
 && node -v \
 && npm -v \
 && python --version \
 && curl -o- $GITHUB_RAW_URL/nvm-sh/nvm/$NVM_VERSION/install.sh | bash \
 && source ${NVM_DIR}/nvm.sh \
 && curl -L --output /usr/bin/bazel \
      $GITHUB_URL/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-${GOBIN_VERSION} \
 && chmod +x /usr/bin/bazel \
 && BAZELISK_BASE_URL=$GITHUB_URL/bazelbuild/bazel/releases/download bazel --version \
 && rm -rf $HOME/.npmrc $HOME/.pip \
 && zypper clean -a \
 && if [ -n "$SUSE_REPO" ]; then \
      sed -i "s|$SUSE_REPO|https://public-dl.suse.com|g" /etc/zypp/repos.d/*; \
    fi

CMD ["/bin/bash"]



# cdxgen-image
FROM base AS cdxgen

ENV ATOM_CMD=/usr/local/bin/atom \
    CDXGEN_IN_CONTAINER=true \
    NODE_COMPILE_CACHE="/opt/cdxgen-node-cache" \
    PATH=${PATH}:/opt/cdxgen/node_modules/.bin

COPY . /opt/cdxgen

RUN set -e; \
    if [ -n "$NODEJS_DIST_URL" ]; then \
      export "NVM_NODEJS_ORG_MIRROR=$NODEJS_DIST_URL"; \
      printf "disturl=$NODEJS_DIST_URL\n" >> $HOME/.npmrc; \
    fi; \
    if [ -n "$NPM_REPO" ]; then \
      export "COREPACK_NPM_REGISTRY=$NPM_REPO"; \
      printf "registry=$NPM_REPO\n@jsr:registry=$NPM_REPO\n" >> $HOME/.npmrc; \
    fi; \
    if [ -n "$PIP_CONFIG" ]; then \
      mkdir $HOME/.pip/; \
      printf "$PIP_CONFIG" > $HOME/.pip/pip.conf; \
    fi; \
    if [ -n "$SUSE_REPO" ]; then \
      sed -i "s|https://public-dl.suse.com|$SUSE_REPO|g" /etc/zypp/repos.d/*; \
      zypper --no-gpg-checks refresh; \
    fi; \
    ARCH_NAME="$(rpm --eval '%{_arch}')"; \
    case "${ARCH_NAME##*-}" in \
      'amd64' | 'x86_64') \
        ATOM_ARCH_SUFFIX='amd64'; \
        ;; \
      'aarch64' | 'arm64') \
        ATOM_ARCH_SUFFIX='arm64'; \
        ;; \
      *) \
        echo >&2 "error: unsupported architecture: '$ARCH_NAME'"; \
        exit 1 \
        ;; \
    esac \
 && cd /opt/cdxgen \
 && corepack enable \
 && corepack pnpm install:prod \
 && corepack pnpm cache delete \
 && curl -L $GITHUB_URL/AppThreat/atom/releases/latest/download/atom-${ATOM_ARCH_SUFFIX} \
      -o /usr/local/bin/atom \
 && chmod +x /usr/local/bin/atom \
 && /usr/local/bin/atom --help \
 && npm install -g --omit=dev @appthreat/atom-parsetools@1.0.4 \
 && mkdir -p ${NODE_COMPILE_CACHE} \
 && node /opt/cdxgen/bin/cdxgen.js --help \
 && rm -rf $HOME/.npmrc $HOME/.pip /root/.cache/node \
 && chmod a-w -R /opt \
 && if [ -n "$SUSE_REPO" ]; then \
      sed -i "s|$SUSE_REPO|https://public-dl.suse.com|g" /etc/zypp/repos.d/*; \
    fi

WORKDIR /app

ENTRYPOINT ["node", "/opt/cdxgen/bin/cdxgen.js"]
