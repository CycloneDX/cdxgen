# Base-image
FROM php:8.4-alpine AS base

ARG NPM_REPO

ENV PATH=${PATH}:/usr/local/bin \
    PYTHONPATH=/opt/pypi

RUN set -e; \
    if [ -n "$NPM_REPO" ]; then \
      export COREPACK_NPM_REGISTRY=$NPM_REPO; \
      echo -e "registry=$NPM_REPO\n@jsr:registry=$NPM_REPO" > $HOME/.npmrc; \
    fi \
 && apk update \
 && apk add --no-cache \
      autoconf \
      bash \
      bzip2 \
      curl \
      curl-dev \
      gcc \
      git \
      g++ \
      icu-dev \
      libxml2-dev \
      libzip-dev \
      make \
      musl-dev \
      nodejs \
      npm \
      oniguruma-dev \
      openjdk21 \
      pkgconf \
      python3 \
      python3-dev \
      py3-pip \
      py3-virtualenv \
      re2c \
 && npm install -g corepack \
 && /usr/bin/python --version \
 && /usr/bin/python -m pip install \
      --no-cache-dir \
      --target ${PYTHONPATH} \
      --upgrade \
        atom-tools \
 && docker-php-ext-install \
      curl \
      intl \
      mbstring \
      mysqli \
      pdo \
      pdo_mysql \
      xml \
      zip \
 && curl -sS https://getcomposer.org/installer \
      | php -- \
            --install-dir=/usr/local/bin \
            --filename=composer \
 && node -v \
 && npm -v \
 && php -v \
 && composer --version \
 && rm -rf $HOME/.npmrc /var/cache/apk/*



# cdxgen-image
FROM base AS cdxgen

ENV CDXGEN_IN_CONTAINER=true \
    NODE_COMPILE_CACHE="/opt/cdxgen-node-cache" \
    PATH=${PATH}:${PYTHONPATH}/bin:/opt/cdxgen/node_modules/.bin

COPY . /opt/cdxgen

RUN set -e; \
    if [ -n "$NPM_REPO" ]; then \
      export COREPACK_NPM_REGISTRY=$NPM_REPO; \
      echo -e "registry=$NPM_REPO\n@jsr:registry=$NPM_REPO" > $HOME/.npmrc; \
    fi \
 && cd /opt/cdxgen \
 && corepack enable \
 && corepack pnpm install \
      --config.strict-dep-builds=true \
      --frozen-lockfile \
      --package-import-method copy \
      --prod \
 && corepack pnpm cache delete \
 && npm install -g --omit=dev @appthreat/atom-parsetools@1.0.4 \
 && npm uninstall -g corepack \
 && apk del \
      autoconf \
      bash \
      curl \
      curl-dev \
      gcc \
      g++ \
      icu-dev \
      libxml2-dev \
      libzip-dev \
      make \
      musl-dev \
      npm \
      oniguruma-dev \
      pkgconf \
      python3-dev \
      py3-pip \
      py3-virtualenv \
      re2c \
      tar \
 && mkdir -p ${NODE_COMPILE_CACHE} \
 && node /opt/cdxgen/bin/cdxgen.js --help \
 && phpastgen --help \
 && atom-tools --help \
 && rm -rf $HOME/.npmrc /root/.cache/node \
 && chmod a-w -R /opt

WORKDIR /app

ENTRYPOINT ["node", "/opt/cdxgen/bin/cdxgen.js"]
