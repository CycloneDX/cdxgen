# Base-image
FROM node:20-alpine AS base

ENV PATH=${PATH}:/usr/local/bin

RUN apk update && apk add --no-cache \
    make \
    python3 \
    python3-dev \
    py3-pip \
    py3-virtualenv \
    gcc \
    g++ \
    musl-dev \
    npm yarn openjdk21 \
    && npm install -g npm corepack \
    && node -v \
    && npm -v \
    && rm -rf /var/cache/apk/*

# cdxgen-image
FROM base AS cdxgen

LABEL maintainer="CycloneDX" \
      org.opencontainers.image.authors="Team AppThreat <cloud@appthreat.com>" \
      org.opencontainers.image.source="https://github.com/CycloneDX/cdxgen" \
      org.opencontainers.image.url="https://github.com/CycloneDX/cdxgen" \
      org.opencontainers.image.version="rolling" \
      org.opencontainers.image.vendor="CycloneDX" \
      org.opencontainers.image.licenses="Apache-2.0" \
      org.opencontainers.image.title="cdxgen" \
      org.opencontainers.image.description="Rolling image with cdxgen SBOM generator for node apps" \
      org.opencontainers.docker.cmd="docker run --rm -v /tmp:/tmp -p 9090:9090 -v $(pwd):/app:rw -t ghcr.io/cyclonedx/cdxgen-alpine-node20:v11 -r /app --server"

ENV CDXGEN_IN_CONTAINER=true \
    NODE_COMPILE_CACHE="/opt/cdxgen-node-cache" \
    PYTHONPATH=/opt/pypi \
    PATH=${PATH}:/usr/local/bin:/opt/cdxgen/node_modules/.bin:/opt/pypi/bin:

COPY . /opt/cdxgen

RUN cd /opt/cdxgen && corepack enable && corepack pnpm install --config.strict-dep-builds=true --prod --no-optional --package-import-method copy --frozen-lockfile && corepack pnpm cache delete \
	&& npm uninstall -g corepack \
	&& apk del npm python3-dev py3-pip py3-virtualenv gcc g++ musl-dev make \
    && mkdir -p ${NODE_COMPILE_CACHE} \
    && node /opt/cdxgen/bin/cdxgen.js --help \
    && rm -rf /root/.cache/node \
    && chmod a-w -R /opt
WORKDIR /app
ENTRYPOINT ["node", "/opt/cdxgen/bin/cdxgen.js"]
