# Base-image
FROM eclipse-temurin:21-jdk-alpine AS base

ENV PATH=${PATH}:/usr/local/bin:/root/.local/bin:/opt/pypi/bin:${PYTHONPATH}:

RUN apk update && apk add --no-cache \
    curl \
    tar \
    bash \
    nodejs \
    npm \
    gradle \
    maven \
    python3 \
    python3-dev \
    py3-pip \
    py3-virtualenv \
    gcc \
    g++ \
    musl-dev \
    make \
    git \
    && npm install -g corepack \
    && /usr/bin/python --version \
    && /usr/bin/python -m pip install --break-system-packages --no-cache-dir --upgrade pipenv atom-tools --target /opt/pypi \
    && node -v \
    && npm -v \
    && mvn -v \
    && gradle -v \
    && python3 --version \
    && rm -rf /var/cache/apk/*


# cdxgen-image
FROM base AS cdxgen

LABEL maintainer="CycloneDX" \
      org.opencontainers.image.authors="Team AppThreat <cloud@appthreat.com>" \
      org.opencontainers.image.source="https://github.com/CycloneDX/cdxgen" \
      org.opencontainers.image.url="https://github.com/CycloneDX/cdxgen" \
      org.opencontainers.image.version="rolling" \
      org.opencontainers.image.vendor="CycloneDX" \
      org.opencontainers.image.licenses="Apache-2.0" \
      org.opencontainers.image.title="cdxgen" \
      org.opencontainers.image.description="Rolling image with cdxgen SBOM generator for Java 21 and android apps" \
      org.opencontainers.docker.cmd="docker run --rm -v /tmp:/tmp -p 9090:9090 -v $(pwd):/app:rw -t ghcr.io/cyclonedx/cdxgen-alpine-java21:v11 -r /app --server"

ENV CDXGEN_IN_CONTAINER=true \
    NODE_COMPILE_CACHE="/opt/cdxgen-node-cache" \
    PYTHONPATH=/opt/pypi:${PYTHONPATH}
ENV PATH=${PATH}:/usr/local/bin:/opt/pypi/bin:/opt/cdxgen/node_modules/.bin:

COPY . /opt/cdxgen

RUN cd /opt/cdxgen && corepack enable && corepack pnpm install --config.strict-dep-builds=true --prod --package-import-method copy --frozen-lockfile && corepack pnpm cache delete \
    && npm uninstall -g corepack \
    && apk del npm py3-pip py3-virtualenv gcc musl-dev make curl tar bash g++ \
    && mkdir -p /opt/cdxgen-node-cache \
    && node /opt/cdxgen/bin/cdxgen.js --help \
    && rm -rf /root/.cache/node \
    && chmod a-w -R /opt
WORKDIR /app
ENTRYPOINT ["node", "/opt/cdxgen/bin/cdxgen.js"]
