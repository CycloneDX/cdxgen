# Base-image
FROM golang:1.24-alpine AS base

ENV PATH=${PATH}:/usr/local/bin

RUN set -e; \
    apk update \
 && apk add --no-cache \
      nodejs \
      npm \
 && npm install -g corepack \
 && node -v \
 && npm -v \
 && rm -rf /var/cache/apk/*



# cdxgen-image
FROM base AS cdxgen

ENV CDXGEN_IN_CONTAINER=true \
    NODE_COMPILE_CACHE="/opt/cdxgen-node-cache" \
    PATH=${PATH}:/opt/cdxgen/node_modules/.bin

COPY . /opt/cdxgen

RUN set -e; \
    cd /opt/cdxgen \
 && corepack enable \
 && corepack pnpm install \
      --config.strict-dep-builds=true \
      --frozen-lockfile \
      --package-import-method copy \
      --prod \
 && corepack pnpm cache delete \
 && npm uninstall -g corepack \
 && apk del npm \
 && mkdir -p ${NODE_COMPILE_CACHE} \
 && node /opt/cdxgen/bin/cdxgen.js --help \
 && rm -rf .npmrc /root/.cache/node \
 && chmod a-w -R /opt

WORKDIR /app

ENTRYPOINT ["node", "/opt/cdxgen/bin/cdxgen.js"]
