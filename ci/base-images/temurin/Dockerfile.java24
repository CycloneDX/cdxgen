FROM eclipse-temurin:24-ubi9-minimal

ARG SBT_VERSION=1.10.10
ARG MAVEN_VERSION=3.9.9
ARG GRADLE_VERSION=8.14.1
ARG NODE_VERSION=24.0.2
ARG SCALA_VERSION=3.6.4

ENV SBT_VERSION=$SBT_VERSION \
    MAVEN_VERSION=$MAVEN_VERSION \
    GRADLE_VERSION=$GRADLE_VERSION \
    NODE_VERSION=$NODE_VERSION \
    GRADLE_OPTS="-Dorg.gradle.daemon=false" \
    MAVEN_HOME="/root/.sdkman/candidates/maven/${MAVEN_VERSION}" \
    GRADLE_HOME="/root/.sdkman/candidates/gradle/${GRADLE_VERSION}" \
    SBT_HOME="/root/.sdkman/candidates/sbt/${SBT_VERSION}" \
    SCALA_VERSION=$SCALA_VERSION \
    SCALA_HOME="/root/.sdkman/candidates/scala/${SCALA_VERSION}" \
    PYTHON_VERSION=3.12 \
    PYTHON_CMD=/usr/bin/python3.12 \
    PYTHONUNBUFFERED=1 \
    PYTHONIOENCODING="utf-8" \
    JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF-8" \
    NVM_DIR="/root/.nvm" \
    TMPDIR=/tmp \
    NODE_COMPILE_CACHE="/opt/cdxgen-node-cache" \
    PYTHONPATH=/opt/pypi:${PYTHONPATH} \
    CDXGEN_IN_CONTAINER=true \
    SDKMAN_DIR=/root/.sdkman \
    SDKMAN_CANDIDATES_DIR=/root/.sdkman/candidates
ENV PATH=${PATH}:/root/.nvm/versions/node/v${NODE_VERSION}/bin:${MAVEN_HOME}/bin:${GRADLE_HOME}/bin:${SCALA_HOME}/bin:${SBT_HOME}/bin:/usr/local/bin/:/root/.local/bin:/opt/pypi/bin:

RUN set -e; \
    ARCH_NAME="$(rpm --eval '%{_arch}')"; \
    url=; \
    case "${ARCH_NAME##*-}" in \
        'x86_64') \
            OS_ARCH_SUFFIX=''; \
            ;; \
        'aarch64') \
            OS_ARCH_SUFFIX='-aarch64'; \
            ;; \
        *) echo >&2 "error: unsupported architecture: '$ARCH_NAME'"; exit 1 ;; \
    esac \
    && microdnf install -y make gcc git-core python${PYTHON_VERSION} python${PYTHON_VERSION}-devel python${PYTHON_VERSION}-pip glibc-common glibc-all-langpacks \
        pcre2 findutils which tar gzip zip unzip bzip2 sudo ncurses gnupg2 \
    && alternatives --install /usr/bin/python3 python /usr/bin/python${PYTHON_VERSION} 10 \
    && alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYTHON_VERSION} 10 \
    && /usr/bin/python${PYTHON_VERSION} --version \
    && /usr/bin/python${PYTHON_VERSION} -m pip install --no-cache-dir --upgrade setuptools==77.0.3 wheel pip virtualenv \
    && /usr/bin/python${PYTHON_VERSION} -m pip install --no-cache-dir --upgrade pipenv atom-tools --target /opt/pypi \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash \
    && source /root/.nvm/nvm.sh \
    && nvm install ${NODE_VERSION} \
    && node --version \
    && curl -s "https://get.sdkman.io" | bash \
    && echo -e "sdkman_auto_answer=true\nsdkman_selfupdate_feature=false\nsdkman_auto_env=true\nsdkman_curl_connect_timeout=20\nsdkman_curl_max_time=0" >> $HOME/.sdkman/etc/config \
    && source "$HOME/.sdkman/bin/sdkman-init.sh" \
    && sdk install maven $MAVEN_VERSION \
    && sdk install gradle $GRADLE_VERSION \
    && sdk install scala $SCALA_VERSION \
    && sdk install sbt $SBT_VERSION \
    && useradd -ms /bin/bash cyclonedx \
    && npm install -g npm \
    && npm install -g node-gyp corepack \
    && npx node-gyp install \
    && rm -rf /var/cache/yum /root/.cache/node \
    && microdnf clean all

CMD ["/bin/bash"]
