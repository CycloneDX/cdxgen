FROM registry.suse.com/bci/nodejs:20

ARG JAVA_VERSION=23.0.1-tem
ARG GCC_VERSION=13

ENV JAVA_VERSION=$JAVA_VERSION \
    JAVA_HOME="/opt/java/${JAVA_VERSION}" \
    NVM_DIR="/root/.nvm" \
    npm_config_python=/usr/bin/python3.11 \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8
ENV PATH=${PATH}:${JAVA_HOME}/bin:/usr/local/bin:
RUN set -e; \
    ARCH_NAME="$(rpm --eval '%{_arch}')"; \
    url=; \
    case "${ARCH_NAME##*-}" in \
        'x86_64') \
            OS_ARCH_SUFFIX=''; \
            GOBIN_VERSION='amd64'; \
            ;; \
        'aarch64') \
            OS_ARCH_SUFFIX='-aarch64'; \
            GOBIN_VERSION='arm64'; \
            ;; \
        *) echo >&2 "error: unsupported architecture: '$ARCH_NAME'"; exit 1 ;; \
    esac \
    && zypper refresh && zypper --non-interactive update && zypper --non-interactive install -l --no-recommends \
        gcc${GCC_VERSION} gcc${GCC_VERSION}-c++ \
        bzip2 git-core wget zip unzip make gawk python311 python311-pip python311-devel nodejs20-devel \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.11 10 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 10 \
    && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 10 \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 10 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 10 \
    && curl -s "https://get.sdkman.io" | bash \
    && echo -e "sdkman_auto_answer=true\nsdkman_selfupdate_feature=false\nsdkman_auto_env=true\nsdkman_curl_connect_timeout=20\nsdkman_curl_max_time=0" >> $HOME/.sdkman/etc/config \
    && source "$HOME/.sdkman/bin/sdkman-init.sh" \
    && sdk install java $JAVA_VERSION \
    && sdk offline enable \
    && mv /root/.sdkman/candidates/* /opt/ \
    && rm -rf /root/.sdkman \
    && npm install -g npm \
    && npm install -g node-gyp \
    && npx node-gyp install \
    && node -v \
    && npm -v \
    && python --version \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash \
    && source /root/.nvm/nvm.sh \
    && curl -L --output /usr/bin/bazel https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-${GOBIN_VERSION} \
    && chmod +x /usr/bin/bazel \
    && bazel --version \
    && zypper clean -a

CMD /bin/bash
