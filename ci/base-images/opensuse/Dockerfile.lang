FROM opensuse/tumbleweed:latest

ARG MAVEN_VERSION=4.0.0-beta-4
ARG SBT_VERSION=1.10.2
ARG GRADLE_VERSION=8.11
ARG DOTNET_SDK_VERSION=9.0.100

ENV SBT_VERSION=$SBT_VERSION \
    MAVEN_VERSION=$MAVEN_VERSION \
    GRADLE_VERSION=$GRADLE_VERSION \
    DOTNET_SDK_VERSION=$DOTNET_SDK_VERSION \
    DOTNET_GENERATE_ASPNET_CERTIFICATE=false \
    DOTNET_NOLOGO=true \
    DOTNET_USE_POLLING_FILE_WATCHER=true \
    DOTNET_RUNNING_IN_CONTAINER=true \
    NUGET_XMLDOC_MODE=skip \
    MAVEN_HOME="/opt/maven/${MAVEN_VERSION}" \
    GRADLE_HOME="/opt/gradle/${GRADLE_VERSION}" \
    SBT_HOME="/opt/sbt/${SBT_VERSION}" \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    DOTNET_ROOT=/usr/share/dotnet \
    PYTHONPATH=/opt/pypi

ENV PATH=${PATH}:${MAVEN_HOME}/bin:${GRADLE_HOME}/bin:${SBT_HOME}/bin:/usr/local/bin:/opt/pypi/bin:/usr/share/dotnet:
RUN set -e; \
    ARCH_NAME="$(rpm --eval '%{_arch}')"; \
    url=; \
    case "${ARCH_NAME##*-}" in \
        'x86_64') \
            OS_ARCH_SUFFIX='x64'; \
            GOBIN_VERSION='amd64'; \
            ;; \
        'aarch64') \
            OS_ARCH_SUFFIX='arm64'; \
            GOBIN_VERSION='arm64'; \
            ;; \
        *) echo >&2 "error: unsupported architecture: '$ARCH_NAME'"; exit 1 ;; \
    esac \
    && zypper refresh && zypper --non-interactive update && zypper --non-interactive install -l --no-recommends gcc14 gcc14-c++ gcc14-fortran \
        bzip2 python312 python312-devel python312-pip findutils java-23-openjdk-devel \
        libicu-devel gdal-devel git-core wget zip unzip make gawk nodejs22 npm22 rust1.81 cargo1.81 \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 10 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-14 10 \
    && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-14 10 \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.12 10 \
    && curl -s "https://get.sdkman.io" | bash \
    && echo -e "sdkman_auto_answer=true\nsdkman_selfupdate_feature=false\nsdkman_auto_env=true\nsdkman_curl_connect_timeout=20\nsdkman_curl_max_time=0" >> $HOME/.sdkman/etc/config \
    && source "$HOME/.sdkman/bin/sdkman-init.sh" \
    && sdk install maven $MAVEN_VERSION \
    && sdk install gradle $GRADLE_VERSION \
    && sdk install sbt $SBT_VERSION \
    && sdk offline enable \
    && mv /root/.sdkman/candidates/* /opt/ \
    && rm -rf /root/.sdkman \
    && curl -fSL --output dotnet.tar.gz https://dotnetcli.azureedge.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-${OS_ARCH_SUFFIX}.tar.gz \
    && mkdir -p /usr/share/dotnet \
    && tar -xf dotnet.tar.gz -C /usr/share/dotnet \
    && rm dotnet.tar.gz \
    && dotnet --list-sdks \
    && mkdir /opt/pypi \
    && python -m pip install --no-cache-dir --upgrade poetry pipenv blint custom-json-diff --target /opt/pypi \
    && node -v \
    && npm -v \
    && poetry --version \
    && pipenv --version \
    && blint --help \
    && gcc --version \
    && curl -L --output /usr/bin/bazel https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-${GOBIN_VERSION} \
    && chmod +x /usr/bin/bazel \
    && bazel --version \
    && zypper clean -a

CMD /bin/bash
